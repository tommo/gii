/* Generated by Cython 0.18 on Sun Jul  7 23:23:14 2013 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__AKU
#define __PYX_HAVE_API__AKU
#include "aku/AKU.h"
#include "aku/AKU-luaext.h"
#include "aku/AKU-untz.h"
#include "aku/AKU-fmod-designer.h"
#include "aku/AKU-audiosampler.h"
#include "extensionClasses.h"
#include "helpers.h"
#include "lupa.h"
#include "lauxlib.h"
#include "lualib.h"
#include "string.h"
#include "stdio.h"
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "_lupa.pyx",
  "lock.pxi",
  "AKU.pyx",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_3AKU__LuaObject;
struct __pyx_obj_3AKU__LuaFunction;
struct __pyx_obj_3AKU__LuaCoroutineFunction;
struct __pyx_obj_3AKU_LuaRuntime;
struct __pyx_obj_3AKU__LuaTable;
struct __pyx_obj_3AKU__LuaThread;
struct __pyx_obj_3AKU__PyProtocolWrapper;
struct __pyx_obj_3AKU_AKU;
struct __pyx_obj_3AKU_FastRLock;
struct __pyx_obj_3AKU__LuaIter;
struct __pyx_t_3AKU_py_object;

/* "AKU.pxd":4
 * 	ctypedef char* const_char_ptr "const char*"
 * 
 * ctypedef void (*funcOpenWindow)( const_char_ptr title, int width, int height)             # <<<<<<<<<<<<<<
 * ctypedef void (*funcEnterFullscreen)()
 * ctypedef void (*funcExitFullscreen)()
 */
typedef void (*__pyx_t_3AKU_funcOpenWindow)(const char*, int, int);

/* "AKU.pxd":5
 * 
 * ctypedef void (*funcOpenWindow)( const_char_ptr title, int width, int height)
 * ctypedef void (*funcEnterFullscreen)()             # <<<<<<<<<<<<<<
 * ctypedef void (*funcExitFullscreen)()
 * 
 */
typedef void (*__pyx_t_3AKU_funcEnterFullscreen)(void);

/* "AKU.pxd":6
 * ctypedef void (*funcOpenWindow)( const_char_ptr title, int width, int height)
 * ctypedef void (*funcEnterFullscreen)()
 * ctypedef void (*funcExitFullscreen)()             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "aku/AKU.h" nogil:
 */
typedef void (*__pyx_t_3AKU_funcExitFullscreen)(void);

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":38
 * cdef class _LuaObject
 * 
 * cdef enum WrappedObjectFlags:             # <<<<<<<<<<<<<<
 *     # flags that determine the behaviour of a wrapped object:
 *     OBJ_AS_INDEX = 1 # prefers the getitem protocol (over getattr)
 */
enum __pyx_t_3AKU_WrappedObjectFlags {
  __pyx_e_3AKU_OBJ_AS_INDEX = 1,
  __pyx_e_3AKU_OBJ_UNPACK_TUPLE = 2,
  __pyx_e_3AKU_OBJ_ENUMERATOR = 4
};

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":721
 * 
 * 
 * cdef enum:             # <<<<<<<<<<<<<<
 *     KEYS = 1
 *     VALUES = 2
 */
enum  {
  __pyx_e_3AKU_KEYS = 1,
  __pyx_e_3AKU_VALUES = 2,
  __pyx_e_3AKU_ITEMS = 3
};

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":44
 *     OBJ_ENUMERATOR = 4 # iteration uses native enumerate() implementation
 * 
 * cdef struct py_object:             # <<<<<<<<<<<<<<
 *     PyObject* obj
 *     PyObject* runtime
 */
struct __pyx_t_3AKU_py_object {
  PyObject *obj;
  PyObject *runtime;
  int type_flags;
};

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":36
 * DEF LUPACACHE = "__LUPA_CACHE__"
 * 
 * cdef class _LuaObject             # <<<<<<<<<<<<<<
 * 
 * cdef enum WrappedObjectFlags:
 */
struct __pyx_obj_3AKU__LuaObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_3AKU__LuaObject *__pyx_vtab;
  struct __pyx_obj_3AKU_LuaRuntime *_runtime;
  lua_State *_state;
  int _ref;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":567
 * 
 * 
 * cdef class _LuaFunction(_LuaObject):             # <<<<<<<<<<<<<<
 *     """A Lua function (which may become a coroutine).
 *     """
 */
struct __pyx_obj_3AKU__LuaFunction {
  struct __pyx_obj_3AKU__LuaObject __pyx_base;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":606
 * 
 * 
 * cdef class _LuaCoroutineFunction(_LuaFunction):             # <<<<<<<<<<<<<<
 *     """A function that returns a new coroutine when called.
 *     """
 */
struct __pyx_obj_3AKU__LuaCoroutineFunction {
  struct __pyx_obj_3AKU__LuaFunction __pyx_base;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":61
 *     pass
 * 
 * cdef class LuaRuntime:             # <<<<<<<<<<<<<<
 *     """The main entry point to the Lua runtime.
 * 
 */
struct __pyx_obj_3AKU_LuaRuntime {
  PyObject_HEAD
  struct __pyx_vtabstruct_3AKU_LuaRuntime *__pyx_vtab;
  lua_State *_state;
  struct __pyx_obj_3AKU_FastRLock *_lock;
  PyObject *_raised_exception;
  PyObject *_encoding;
  PyObject *_source_encoding;
  PyObject *_attribute_filter;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":535
 * 
 * 
 * cdef class _LuaTable(_LuaObject):             # <<<<<<<<<<<<<<
 *     def __iter__(self):
 *         return _LuaIter(self, KEYS)
 */
struct __pyx_obj_3AKU__LuaTable {
  struct __pyx_obj_3AKU__LuaObject __pyx_base;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":622
 * 
 * 
 * cdef class _LuaThread(_LuaObject):             # <<<<<<<<<<<<<<
 *     """A Lua thread (coroutine).
 *     """
 */
struct __pyx_obj_3AKU__LuaThread {
  struct __pyx_obj_3AKU__LuaObject __pyx_base;
  lua_State *_co_state;
  PyObject *_arguments;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":839
 *     return NULL
 * 
 * cdef class _PyProtocolWrapper:             # <<<<<<<<<<<<<<
 *     cdef object _obj
 *     cdef int _type_flags
 */
struct __pyx_obj_3AKU__PyProtocolWrapper {
  PyObject_HEAD
  PyObject *_obj;
  int _type_flags;
};


/* "AKU.pyx":32
 * 
 * 
 * cdef class AKU:             # <<<<<<<<<<<<<<
 * 	cdef LuaRuntime lua
 * 	cdef object _funcOpenWindow
 */
struct __pyx_obj_3AKU_AKU {
  PyObject_HEAD
  struct __pyx_obj_3AKU_LuaRuntime *lua;
  PyObject *_funcOpenWindow;
  PyObject *_funcEnterFS;
  PyObject *_funcExitFS;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":5
 * from cpython.exc cimport PyErr_NoMemory
 * 
 * cdef class FastRLock:             # <<<<<<<<<<<<<<
 *     """Fast, re-entrant locking.
 * 
 */
struct __pyx_obj_3AKU_FastRLock {
  PyObject_HEAD
  PyThread_type_lock _real_lock;
  long _owner;
  int _count;
  int _pending_requests;
  int _is_locked;
};


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":726
 *     ITEMS = 3
 * 
 * cdef class _LuaIter:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime _runtime
 *     cdef _LuaObject _obj
 */
struct __pyx_obj_3AKU__LuaIter {
  PyObject_HEAD
  struct __pyx_obj_3AKU_LuaRuntime *_runtime;
  struct __pyx_obj_3AKU__LuaObject *_obj;
  lua_State *_state;
  int _refiter;
  char _what;
};



/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":304
 * # Lua object wrappers
 * 
 * cdef class _LuaObject:             # <<<<<<<<<<<<<<
 *     """A wrapper around a Lua object such as a table of function.
 *     """
 */

struct __pyx_vtabstruct_3AKU__LuaObject {
  int (*push_lua_object)(struct __pyx_obj_3AKU__LuaObject *);
};
static struct __pyx_vtabstruct_3AKU__LuaObject *__pyx_vtabptr_3AKU__LuaObject;
static CYTHON_INLINE int __pyx_f_3AKU_10_LuaObject_push_lua_object(struct __pyx_obj_3AKU__LuaObject *);


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":567
 * 
 * 
 * cdef class _LuaFunction(_LuaObject):             # <<<<<<<<<<<<<<
 *     """A Lua function (which may become a coroutine).
 *     """
 */

struct __pyx_vtabstruct_3AKU__LuaFunction {
  struct __pyx_vtabstruct_3AKU__LuaObject __pyx_base;
};
static struct __pyx_vtabstruct_3AKU__LuaFunction *__pyx_vtabptr_3AKU__LuaFunction;


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":606
 * 
 * 
 * cdef class _LuaCoroutineFunction(_LuaFunction):             # <<<<<<<<<<<<<<
 *     """A function that returns a new coroutine when called.
 *     """
 */

struct __pyx_vtabstruct_3AKU__LuaCoroutineFunction {
  struct __pyx_vtabstruct_3AKU__LuaFunction __pyx_base;
};
static struct __pyx_vtabstruct_3AKU__LuaCoroutineFunction *__pyx_vtabptr_3AKU__LuaCoroutineFunction;


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":535
 * 
 * 
 * cdef class _LuaTable(_LuaObject):             # <<<<<<<<<<<<<<
 *     def __iter__(self):
 *         return _LuaIter(self, KEYS)
 */

struct __pyx_vtabstruct_3AKU__LuaTable {
  struct __pyx_vtabstruct_3AKU__LuaObject __pyx_base;
};
static struct __pyx_vtabstruct_3AKU__LuaTable *__pyx_vtabptr_3AKU__LuaTable;


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":61
 *     pass
 * 
 * cdef class LuaRuntime:             # <<<<<<<<<<<<<<
 *     """The main entry point to the Lua runtime.
 * 
 */

struct __pyx_vtabstruct_3AKU_LuaRuntime {
  PyObject *(*init)(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *);
  PyObject *(*destroy)(struct __pyx_obj_3AKU_LuaRuntime *);
  int (*reraise_on_exception)(struct __pyx_obj_3AKU_LuaRuntime *);
  int (*store_raised_exception)(struct __pyx_obj_3AKU_LuaRuntime *);
  int (*register_py_object)(struct __pyx_obj_3AKU_LuaRuntime *, PyObject *, PyObject *, PyObject *);
  int (*init_python_lib)(struct __pyx_obj_3AKU_LuaRuntime *, int);
};
static struct __pyx_vtabstruct_3AKU_LuaRuntime *__pyx_vtabptr_3AKU_LuaRuntime;


/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":622
 * 
 * 
 * cdef class _LuaThread(_LuaObject):             # <<<<<<<<<<<<<<
 *     """A Lua thread (coroutine).
 *     """
 */

struct __pyx_vtabstruct_3AKU__LuaThread {
  struct __pyx_vtabstruct_3AKU__LuaObject __pyx_base;
};
static struct __pyx_vtabstruct_3AKU__LuaThread *__pyx_vtabptr_3AKU__LuaThread;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
        PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
        PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (PyList_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {  /* inlined PySequence_GetItem() */
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (unlikely(l < 0)) return NULL;
                i += l;
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE int __Pyx_IterFinish(void); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected); /*proto*/

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** value1, PyObject** value2,
                                             int is_tuple, int has_known_size, int decref_tuple);

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_decode_bytes(
         PyObject* string, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

static int __Pyx_PyUnicode_Tailmatch(PyObject* s, PyObject* substr,
                                     Py_ssize_t start, Py_ssize_t end, int direction) {
    if (unlikely(PyTuple_Check(substr))) {
        Py_ssize_t i, count = PyTuple_GET_SIZE(substr);
        for (i = 0; i < count; i++) {
            int result;
#if CYTHON_COMPILING_IN_CPYTHON
            result = PyUnicode_Tailmatch(s, PyTuple_GET_ITEM(substr, i),
                                         start, end, direction);
#else
            PyObject* sub = PySequence_GetItem(substr, i);
            if (unlikely(!sub)) return -1;
            result = PyUnicode_Tailmatch(s, sub, start, end, direction);
            Py_DECREF(sub);
#endif
            if (result) {
                return result;
            }
        }
        return 0;
    }
    return PyUnicode_Tailmatch(s, substr, start, end, direction);
}

static int __Pyx_PyBytes_SingleTailmatch(PyObject* self, PyObject* arg, Py_ssize_t start,
                                         Py_ssize_t end, int direction)
{
    const char* self_ptr = PyBytes_AS_STRING(self);
    Py_ssize_t self_len = PyBytes_GET_SIZE(self);
    const char* sub_ptr;
    Py_ssize_t sub_len;
    int retval;
#if PY_VERSION_HEX >= 0x02060000
    Py_buffer view;
    view.obj = NULL;
#endif
    if ( PyBytes_Check(arg) ) {
        sub_ptr = PyBytes_AS_STRING(arg);
        sub_len = PyBytes_GET_SIZE(arg);
    }
#if PY_MAJOR_VERSION < 3
    else if ( PyUnicode_Check(arg) ) {
        return PyUnicode_Tailmatch(self, arg, start, end, direction);
    }
#endif
    else {
#if PY_VERSION_HEX < 0x02060000
        if (unlikely(PyObject_AsCharBuffer(arg, &sub_ptr, &sub_len)))
            return -1;
#else
        if (unlikely(PyObject_GetBuffer(self, &view, PyBUF_SIMPLE) == -1))
            return -1;
        sub_ptr = (const char*) view.buf;
        sub_len = view.len;
#endif
    }
    if (end > self_len)
        end = self_len;
    else if (end < 0)
        end += self_len;
    if (end < 0)
        end = 0;
    if (start < 0)
        start += self_len;
    if (start < 0)
        start = 0;
    if (direction > 0) {
        if (end-sub_len > start)
            start = end - sub_len;
    }
    if (start + sub_len <= end)
        retval = !memcmp(self_ptr+start, sub_ptr, sub_len);
    else
        retval = 0;
#if PY_VERSION_HEX >= 0x02060000
    if (view.obj)
        PyBuffer_Release(&view);
#endif
    return retval;
}
static int __Pyx_PyBytes_Tailmatch(PyObject* self, PyObject* substr, Py_ssize_t start,
                                   Py_ssize_t end, int direction)
{
    if (unlikely(PyTuple_Check(substr))) {
        Py_ssize_t i, count = PyTuple_GET_SIZE(substr);
        for (i = 0; i < count; i++) {
            int result;
#if CYTHON_COMPILING_IN_CPYTHON
            result = __Pyx_PyBytes_SingleTailmatch(self, PyTuple_GET_ITEM(substr, i),
                                                   start, end, direction);
#else
            PyObject* sub = PySequence_GetItem(substr, i);
            if (unlikely(!sub)) return -1;
            result = __Pyx_PyBytes_SingleTailmatch(self, sub, start, end, direction);
            Py_DECREF(sub);
#endif
            if (result) {
                return result;
            }
        }
        return 0;
    }
    return __Pyx_PyBytes_SingleTailmatch(self, substr, start, end, direction);
}

static CYTHON_INLINE PyObject* __Pyx_tp_new(PyObject* type_obj) {
    return (PyObject*) (((PyTypeObject*)(type_obj))->tp_new(
        (PyTypeObject*)(type_obj), __pyx_empty_tuple, NULL));
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

#define __Pyx_PyIter_Next(obj) __Pyx_PyIter_Next2(obj, NULL)
static CYTHON_INLINE PyObject *__Pyx_PyIter_Next2(PyObject *, PyObject *); /*proto*/

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb); /*proto*/
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name);

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases); /*proto*/

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *qualname, PyObject *modname); /*proto*/

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename); /*proto*/

static int __Pyx_check_binary_version(void);

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'lua' */

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'AKU' */
static PyTypeObject *__pyx_ptype_3AKU__LuaObject = 0;
static PyTypeObject *__pyx_ptype_3AKU_FastRLock = 0;
static PyTypeObject *__pyx_ptype_3AKU_LuaRuntime = 0;
static PyTypeObject *__pyx_ptype_3AKU__LuaTable = 0;
static PyTypeObject *__pyx_ptype_3AKU__LuaFunction = 0;
static PyTypeObject *__pyx_ptype_3AKU__LuaCoroutineFunction = 0;
static PyTypeObject *__pyx_ptype_3AKU__LuaThread = 0;
static PyTypeObject *__pyx_ptype_3AKU__LuaIter = 0;
static PyTypeObject *__pyx_ptype_3AKU__PyProtocolWrapper = 0;
static PyTypeObject *__pyx_ptype_3AKU_AKU = 0;
static PyObject *__pyx_v_3AKU_exc_info = 0;
static PyObject *__pyx_v_3AKU_builtins = 0;
static luaL_Reg __pyx_v_3AKU_py_object_lib[6];
static luaL_Reg __pyx_v_3AKU_py_lib[7];
static CYTHON_INLINE int __pyx_f_3AKU_lock_lock(struct __pyx_obj_3AKU_FastRLock *, long, int); /*proto*/
static int __pyx_f_3AKU__acquire_lock(struct __pyx_obj_3AKU_FastRLock *, long, int); /*proto*/
static CYTHON_INLINE void __pyx_f_3AKU_unlock_lock(struct __pyx_obj_3AKU_FastRLock *); /*proto*/
static CYTHON_INLINE int __pyx_f_3AKU_lock_runtime(struct __pyx_obj_3AKU_LuaRuntime *); /*proto*/
static CYTHON_INLINE void __pyx_f_3AKU_unlock_runtime(struct __pyx_obj_3AKU_LuaRuntime *); /*proto*/
static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_find_cahced_lua_object(lua_State *, int); /*proto*/
static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_new_lua_object(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static void __pyx_f_3AKU_init_lua_object(struct __pyx_obj_3AKU__LuaObject *, struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static PyObject *__pyx_f_3AKU_lua_object_repr(lua_State *, PyObject *); /*proto*/
static struct __pyx_obj_3AKU__LuaTable *__pyx_f_3AKU_new_lua_table(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static struct __pyx_obj_3AKU__LuaFunction *__pyx_f_3AKU_new_lua_function(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_f_3AKU_new_lua_coroutine_function(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static struct __pyx_obj_3AKU__LuaThread *__pyx_f_3AKU_new_lua_thread(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_new_lua_thread_or_function(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static PyObject *__pyx_f_3AKU_resume_lua_thread(struct __pyx_obj_3AKU__LuaThread *, PyObject *); /*proto*/
static int __pyx_f_3AKU_py_asfunc_call(lua_State *); /*proto*/
static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unpack_wrapped_pyfunction(lua_State *, int); /*proto*/
static PyObject *__pyx_f_3AKU_py_from_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static int __pyx_f_3AKU_py_to_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *, int); /*proto*/
static int __pyx_f_3AKU_push_encoded_unicode_string(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *); /*proto*/
static int __pyx_f_3AKU_py_to_lua_custom(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *, int); /*proto*/
static int __pyx_f_3AKU_raise_lua_error(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static PyObject *__pyx_f_3AKU_build_lua_error_message(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *, int); /*proto*/
static PyObject *__pyx_f_3AKU_run_lua(struct __pyx_obj_3AKU_LuaRuntime *, PyObject *); /*proto*/
static PyObject *__pyx_f_3AKU_call_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *); /*proto*/
static PyObject *__pyx_f_3AKU_execute_lua_call(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, Py_ssize_t); /*proto*/
static int __pyx_f_3AKU_push_lua_arguments(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *, int); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_3AKU_unpack_lua_results(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *); /*proto*/
static PyObject *__pyx_f_3AKU_unpack_multiple_lua_results(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, int); /*proto*/
static void __pyx_f_3AKU_decref_with_gil(struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_object_gc(lua_State *); /*proto*/
static int __pyx_f_3AKU_call_python(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_call_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_object_call(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_str_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_object_str(lua_State *); /*proto*/
static int __pyx_f_3AKU_getitem_for_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, struct __pyx_t_3AKU_py_object *, int); /*proto*/
static int __pyx_f_3AKU_setitem_for_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, struct __pyx_t_3AKU_py_object *, int, int); /*proto*/
static int __pyx_f_3AKU_getattr_for_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, struct __pyx_t_3AKU_py_object *, int); /*proto*/
static int __pyx_f_3AKU_setattr_for_lua(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, struct __pyx_t_3AKU_py_object *, int, int); /*proto*/
static int __pyx_f_3AKU_py_object_getindex_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_object_getindex(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_object_setindex_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static int __pyx_f_3AKU_py_object_setindex(lua_State *); /*proto*/
static CYTHON_INLINE struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unpack_single_python_argument_or_jump(lua_State *); /*proto*/
static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unwrap_lua_object(lua_State *, int); /*proto*/
static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unwrap_lua_object_from_cclosure(lua_State *, int); /*proto*/
static int __pyx_f_3AKU_py_wrap_object_protocol_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *, int); /*proto*/
static int __pyx_f_3AKU_py_wrap_object_protocol(lua_State *, int); /*proto*/
static int __pyx_f_3AKU_py_as_attrgetter(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_as_itemgetter(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_as_function(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_iter(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_iterex(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_enumerate(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_enumerate_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *, double); /*proto*/
static int __pyx_f_3AKU_py_iter_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *, int); /*proto*/
static int __pyx_f_3AKU_py_push_iterator(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *, PyObject *, int, double); /*proto*/
static int __pyx_f_3AKU_py_iter_next(lua_State *); /*proto*/
static int __pyx_f_3AKU_py_iter_next_with_gil(lua_State *, struct __pyx_t_3AKU_py_object *); /*proto*/
static void __pyx_f_3AKU__callbackOpenWindow(const char*, int, int); /*proto*/
static void __pyx_f_3AKU__callbackEnterFullscreenMode(void); /*proto*/
static void __pyx_f_3AKU__callbackExitFullscreenMode(void); /*proto*/
#define __Pyx_MODULE_NAME "AKU"
int __pyx_module_is_main_AKU = 0;

/* Implementation of 'AKU' */
static PyObject *__pyx_builtin_ImportError;
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_eval;
static PyObject *__pyx_builtin_UnicodeDecodeError;
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_StopIteration;
static PyObject *__pyx_builtin_range;
static int __pyx_pf_3AKU_9FastRLock___cinit__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self); /* proto */
static void __pyx_pf_3AKU_9FastRLock_2__dealloc__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9FastRLock_4acquire(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self, int __pyx_v_blocking); /* proto */
static PyObject *__pyx_pf_3AKU_9FastRLock_6release(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9FastRLock_8__enter__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9FastRLock_10__exit__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_t, CYTHON_UNUSED PyObject *__pyx_v_v, CYTHON_UNUSED PyObject *__pyx_v_tb); /* proto */
static PyObject *__pyx_pf_3AKU_9FastRLock_12_is_owned(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self); /* proto */
static void __pyx_pf_3AKU_10LuaRuntime___dealloc__(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10LuaRuntime_2eval(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_lua_code); /* proto */
static PyObject *__pyx_pf_3AKU_10LuaRuntime_4execute(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_lua_code); /* proto */
static PyObject *__pyx_pf_3AKU_10LuaRuntime_6require(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_modulename); /* proto */
static PyObject *__pyx_pf_3AKU_10LuaRuntime_8globals(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10LuaRuntime_10table(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_items, PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_3AKU_10_LuaObject___init__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static void __pyx_pf_3AKU_10_LuaObject_2__dealloc__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_4__call__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_args); /* proto */
static Py_ssize_t __pyx_pf_3AKU_10_LuaObject_6__len__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static int __pyx_pf_3AKU_10_LuaObject_8__nonzero__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_10__iter__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_12__repr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_14__str__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_16__getattr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static int __pyx_pf_3AKU_10_LuaObject_18__setattr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaObject_20__getitem__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_index_or_name); /* proto */
static int __pyx_pf_3AKU_10_LuaObject_22__setitem__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_index_or_name, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3AKU_9_LuaTable___iter__(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9_LuaTable_2keys(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9_LuaTable_4values(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_9_LuaTable_6items(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_12_LuaFunction_coroutine(struct __pyx_obj_3AKU__LuaFunction *__pyx_v_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_3AKU_21_LuaCoroutineFunction___call__(struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_v_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaThread___iter__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaThread_2__next__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_10_LuaThread_4send(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3AKU_10_LuaThread_6__bool__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self); /* proto */
static int __pyx_pf_3AKU_8_LuaIter___cinit__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self, struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj, int __pyx_v_what); /* proto */
static void __pyx_pf_3AKU_8_LuaIter_2__dealloc__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_8_LuaIter_4__repr__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_8_LuaIter_6__iter__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_8_LuaIter_8__next__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self); /* proto */
static int __pyx_pf_3AKU_18_PyProtocolWrapper___cinit__(struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_self); /* proto */
static int __pyx_pf_3AKU_18_PyProtocolWrapper_2__init__(CYTHON_UNUSED struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_as_attrgetter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_3AKU_2as_itemgetter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_3AKU_4_removeMoaiSingleton(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_3AKU_6getAKU(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static int __pyx_pf_3AKU_3AKU___cinit__(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static void __pyx_pf_3AKU_3AKU_2__dealloc__(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_4createContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_6setFuncOpenWindow(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_8setFuncEnterFullscreenMode(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_10setFuncExitFullscreenMode(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_12getLuaRuntime(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_14checkContext(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_16resetContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_18deleteContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_20clearMemPool(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_22setScreenSize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_w, PyObject *__pyx_v_h); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_24setViewSize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_w, PyObject *__pyx_v_h); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_26setOrientationLandscape(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_28setOrientationPortrait(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_30setWorkingDirectory(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_32reserveInputDevices(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_count); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_34reserveInputDeviceSensors(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_count); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_36setInputConfigurationName(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_38setInputDevice(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_id, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_40setInputDeviceKeyboard(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_42setInputDevicePointer(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_44setInputDeviceButton(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_46setInputDeviceTouch(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_48setInputDeviceCompass(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_50setInputDeviceLevel(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_52enqueueButtonEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_54enqueueWheelEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_56enqueueTouchEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_touchID, PyObject *__pyx_v_down, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_58enqueueTouchEventCancel(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_60enqueuePointerEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_62enqueueCompassEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_heading); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_64enqueueKeyboardAltEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_66enqueueKeyboardControlEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_68enqueueKeyboardShiftEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_70enqueueKeyboardEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_keyID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_72enqueueLevelEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_74update(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_76pause(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_paused); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_78render(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_80detectGfxContext(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_82finalize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_84runString(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_86runScript(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_88evalString(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_90onOpenWindow(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_title, PyObject *__pyx_v_width, PyObject *__pyx_v_height); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_92onEnterFullScreen(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3AKU_3AKU_94onExitFullScreen(struct __pyx_obj_3AKU_AKU *__pyx_v_self); /* proto */
static char __pyx_k_1[] = "cannot release un-acquired lock";
static char __pyx_k_4[] = "Failed to initialise Lua runtime";
static char __pyx_k_6[] = "UTF-8";
static char __pyx_k_7[] = "return ";
static char __pyx_k_8[] = "modulename must be a string";
static char __pyx_k_10[] = "require is not defined";
static char __pyx_k_12[] = "globals not defined";
static char __pyx_k_14[] = "failed to convert %s object";
static char __pyx_k_15[] = "Failed to acquire thread lock";
static char __pyx_k_17[] = "Type cannot be instantiated manually";
static char __pyx_k_19[] = "lost reference";
static char __pyx_k_21[] = "iteration is only supported for tables";
static char __pyx_k_23[] = "item/attribute access not supported on functions";
static char __pyx_k_25[] = "Lua object is not a table";
static char __pyx_k_27[] = "<Lua %s at %p>";
static char __pyx_k_28[] = "<Lua %s>";
static char __pyx_k_29[] = "Lua object is not a function";
static char __pyx_k_31[] = "can't send non-None value to a just-started generator";
static char __pyx_k_33[] = "LuaIter(%r)";
static char __pyx_k_35[] = "cannot iterate over non-table (found Lua %s)";
static char __pyx_k_36[] = "Type cannot be instantiated from Python";
static char __pyx_k_38[] = "unkown lua value type";
static char __pyx_k_40[] = "cannot mix objects from different Lua runtimes";
static char __pyx_k_42[] = "<python>";
static char __pyx_k_43[] = "error loading code: %s";
static char __pyx_k_44[] = "failed to convert argument at index %d";
static char __pyx_k_45[] = "not a python object";
static char __pyx_k_47[] = "error during Python call";
static char __pyx_k_48[] = "error during Python str() call";
static char __pyx_k_49[] = "invalid arguments";
static char __pyx_k_50[] = "error during type adaptation";
static char __pyx_k_51[] = "error creating an iterator";
static char __pyx_k_52[] = "error creating an iterator with enumerate()";
static char __pyx_k_53[] = "error while calling next(iterator)";
static char __pyx_k_54[] = "onEnterFullscreenMode";
static char __pyx_k_55[] = "onExitFullscreenMode";
static char __pyx_k_57[] = "Base class for errors in the Lua runtime.\n    ";
static char __pyx_k_58[] = "Syntax error in Lua code.\n    ";
static char __pyx_k_61[] = "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx";
static char __pyx_k_65[] = "_removeMoaiSingleton";
static char __pyx_k_66[] = "/Users/tommo/prj/moai/MDD/host/moei/aku-build/AKU.pyx";
static char __pyx_k__h[] = "h";
static char __pyx_k__t[] = "t";
static char __pyx_k__v[] = "v";
static char __pyx_k__w[] = "w";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k___G[] = "_G";
static char __pyx_k____[] = "__";
static char __pyx_k__id[] = "id";
static char __pyx_k__tb[] = "tb";
static char __pyx_k__AKU[] = "AKU";
static char __pyx_k__exc[] = "exc";
static char __pyx_k__obj[] = "obj";
static char __pyx_k__sys[] = "sys";
static char __pyx_k____gc[] = "__gc";
static char __pyx_k___aku[] = "_aku";
static char __pyx_k__down[] = "down";
static char __pyx_k__eval[] = "eval";
static char __pyx_k__func[] = "func";
static char __pyx_k__iter[] = "iter";
static char __pyx_k__name[] = "name";
static char __pyx_k__next[] = "next";
static char __pyx_k__none[] = "none";
static char __pyx_k__what[] = "what";
static char __pyx_k__wrap[] = "wrap";
static char __pyx_k__count[] = "count";
static char __pyx_k__devId[] = "devId";
static char __pyx_k__keyID[] = "keyID";
static char __pyx_k__range[] = "range";
static char __pyx_k__title[] = "title";
static char __pyx_k__value[] = "value";
static char __pyx_k__width[] = "width";
static char __pyx_k____call[] = "__call";
static char __pyx_k__atexit[] = "atexit";
static char __pyx_k__decode[] = "decode";
static char __pyx_k__getAKU[] = "getAKU";
static char __pyx_k__height[] = "height";
static char __pyx_k__iterex[] = "iterex";
static char __pyx_k__object[] = "object";
static char __pyx_k__paused[] = "paused";
static char __pyx_k__python[] = "python";
static char __pyx_k__POBJECT[] = "POBJECT";
static char __pyx_k__Py_None[] = "Py_None";
static char __pyx_k____index[] = "__index";
static char __pyx_k__cpython[] = "cpython";
static char __pyx_k__heading[] = "heading";
static char __pyx_k__require[] = "require";
static char __pyx_k__touchID[] = "touchID";
static char __pyx_k__LuaError[] = "LuaError";
static char __pyx_k____func__[] = "__func__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__blocking[] = "blocking";
static char __pyx_k__builtins[] = "builtins";
static char __pyx_k__deviceID[] = "deviceID";
static char __pyx_k__exc_info[] = "exc_info";
static char __pyx_k__register[] = "register";
static char __pyx_k__sensorID[] = "sensorID";
static char __pyx_k__sensorId[] = "sensorId";
static char __pyx_k__Exception[] = "Exception";
static char __pyx_k__TypeError[] = "TypeError";
static char __pyx_k__coroutine[] = "coroutine";
static char __pyx_k__enumerate[] = "enumerate";
static char __pyx_k__iteritems[] = "iteritems";
static char __pyx_k____newindex[] = "__newindex";
static char __pyx_k____tostring[] = "__tostring";
static char __pyx_k__ImportError[] = "ImportError";
static char __pyx_k____builtin__[] = "__builtin__";
static char __pyx_k____getattr__[] = "__getattr__";
static char __pyx_k____getitem__[] = "__getitem__";
static char __pyx_k____setattr__[] = "__setattr__";
static char __pyx_k__as_function[] = "as_function";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k__onOpenWindow[] = "onOpenWindow";
static char __pyx_k__StopIteration[] = "StopIteration";
static char __pyx_k__as_attrgetter[] = "as_attrgetter";
static char __pyx_k__as_itemgetter[] = "as_itemgetter";
static char __pyx_k__createContext[] = "createContext";
static char __pyx_k__deleteContext[] = "deleteContext";
static char __pyx_k__LuaSyntaxError[] = "LuaSyntaxError";
static char __pyx_k__PyErr_NoMemory[] = "PyErr_NoMemory";
static char __pyx_k____LUPA_CACHE__[] = "__LUPA_CACHE__";
static char __pyx_k__UnicodeDecodeError[] = "UnicodeDecodeError";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_kp_s_14;
static PyObject *__pyx_kp_s_15;
static PyObject *__pyx_kp_s_17;
static PyObject *__pyx_kp_s_19;
static PyObject *__pyx_kp_s_21;
static PyObject *__pyx_kp_s_23;
static PyObject *__pyx_kp_s_25;
static PyObject *__pyx_kp_s_29;
static PyObject *__pyx_kp_s_31;
static PyObject *__pyx_kp_u_33;
static PyObject *__pyx_kp_s_36;
static PyObject *__pyx_kp_s_38;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_40;
static PyObject *__pyx_kp_u_43;
static PyObject *__pyx_kp_s_44;
static PyObject *__pyx_kp_s_45;
static PyObject *__pyx_n_s_54;
static PyObject *__pyx_n_s_55;
static PyObject *__pyx_kp_s_57;
static PyObject *__pyx_kp_s_58;
static PyObject *__pyx_kp_b_6;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_61;
static PyObject *__pyx_n_s_65;
static PyObject *__pyx_kp_s_66;
static PyObject *__pyx_kp_b_7;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_n_s__AKU;
static PyObject *__pyx_n_s__Exception;
static PyObject *__pyx_n_s__ImportError;
static PyObject *__pyx_n_s__LuaError;
static PyObject *__pyx_n_s__LuaSyntaxError;
static PyObject *__pyx_n_s__PyErr_NoMemory;
static PyObject *__pyx_n_b__Py_None;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__StopIteration;
static PyObject *__pyx_n_s__TypeError;
static PyObject *__pyx_n_s__UnicodeDecodeError;
static PyObject *__pyx_n_b____;
static PyObject *__pyx_n_u____;
static PyObject *__pyx_n_s____builtin__;
static PyObject *__pyx_n_s____func__;
static PyObject *__pyx_n_s____getattr__;
static PyObject *__pyx_n_s____getitem__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____setattr__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___aku;
static PyObject *__pyx_n_s__as_attrgetter;
static PyObject *__pyx_n_s__as_itemgetter;
static PyObject *__pyx_n_s__atexit;
static PyObject *__pyx_n_s__blocking;
static PyObject *__pyx_n_b__builtins;
static PyObject *__pyx_n_s__builtins;
static PyObject *__pyx_n_s__coroutine;
static PyObject *__pyx_n_s__count;
static PyObject *__pyx_n_s__cpython;
static PyObject *__pyx_n_s__createContext;
static PyObject *__pyx_n_s__decode;
static PyObject *__pyx_n_s__deleteContext;
static PyObject *__pyx_n_s__devId;
static PyObject *__pyx_n_s__deviceID;
static PyObject *__pyx_n_s__down;
static PyObject *__pyx_n_s__enumerate;
static PyObject *__pyx_n_b__eval;
static PyObject *__pyx_n_s__eval;
static PyObject *__pyx_n_s__exc;
static PyObject *__pyx_n_s__exc_info;
static PyObject *__pyx_n_s__func;
static PyObject *__pyx_n_s__getAKU;
static PyObject *__pyx_n_s__h;
static PyObject *__pyx_n_s__heading;
static PyObject *__pyx_n_s__height;
static PyObject *__pyx_n_s__id;
static PyObject *__pyx_n_s__iteritems;
static PyObject *__pyx_n_s__keyID;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__next;
static PyObject *__pyx_n_b__none;
static PyObject *__pyx_n_s__obj;
static PyObject *__pyx_n_s__object;
static PyObject *__pyx_n_s__onOpenWindow;
static PyObject *__pyx_n_s__paused;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__register;
static PyObject *__pyx_n_s__sensorID;
static PyObject *__pyx_n_s__sensorId;
static PyObject *__pyx_n_s__sys;
static PyObject *__pyx_n_s__t;
static PyObject *__pyx_n_s__tb;
static PyObject *__pyx_n_s__title;
static PyObject *__pyx_n_s__touchID;
static PyObject *__pyx_n_s__v;
static PyObject *__pyx_n_s__value;
static PyObject *__pyx_n_s__w;
static PyObject *__pyx_n_s__what;
static PyObject *__pyx_n_s__width;
static PyObject *__pyx_n_s__wrap;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_int_1;
static PyObject *__pyx_k_56;
static PyObject *__pyx_k_tuple_2;
static PyObject *__pyx_k_tuple_3;
static PyObject *__pyx_k_tuple_5;
static PyObject *__pyx_k_tuple_9;
static PyObject *__pyx_k_tuple_11;
static PyObject *__pyx_k_tuple_13;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_18;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_22;
static PyObject *__pyx_k_tuple_24;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_30;
static PyObject *__pyx_k_tuple_32;
static PyObject *__pyx_k_tuple_34;
static PyObject *__pyx_k_tuple_37;
static PyObject *__pyx_k_tuple_39;
static PyObject *__pyx_k_tuple_41;
static PyObject *__pyx_k_tuple_46;
static PyObject *__pyx_k_tuple_59;
static PyObject *__pyx_k_tuple_62;
static PyObject *__pyx_k_codeobj_60;
static PyObject *__pyx_k_codeobj_63;
static PyObject *__pyx_k_codeobj_64;
static PyObject *__pyx_k_codeobj_67;

/* Python wrapper */
static int __pyx_pw_3AKU_9FastRLock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_9FastRLock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3AKU_9FastRLock___cinit__(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":20
 *     cdef bint _is_locked        # whether the real lock is acquired
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self._owner = -1
 *         self._count = 0
 */

static int __pyx_pf_3AKU_9FastRLock___cinit__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":21
 * 
 *     def __cinit__(self):
 *         self._owner = -1             # <<<<<<<<<<<<<<
 *         self._count = 0
 *         self._is_locked = False
 */
  __pyx_v_self->_owner = -1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":22
 *     def __cinit__(self):
 *         self._owner = -1
 *         self._count = 0             # <<<<<<<<<<<<<<
 *         self._is_locked = False
 *         self._pending_requests = 0
 */
  __pyx_v_self->_count = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":23
 *         self._owner = -1
 *         self._count = 0
 *         self._is_locked = False             # <<<<<<<<<<<<<<
 *         self._pending_requests = 0
 *         self._real_lock = pythread.PyThread_allocate_lock()
 */
  __pyx_v_self->_is_locked = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":24
 *         self._count = 0
 *         self._is_locked = False
 *         self._pending_requests = 0             # <<<<<<<<<<<<<<
 *         self._real_lock = pythread.PyThread_allocate_lock()
 *         if self._real_lock is NULL:
 */
  __pyx_v_self->_pending_requests = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":25
 *         self._is_locked = False
 *         self._pending_requests = 0
 *         self._real_lock = pythread.PyThread_allocate_lock()             # <<<<<<<<<<<<<<
 *         if self._real_lock is NULL:
 *             PyErr_NoMemory()
 */
  __pyx_v_self->_real_lock = PyThread_allocate_lock();

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":26
 *         self._pending_requests = 0
 *         self._real_lock = pythread.PyThread_allocate_lock()
 *         if self._real_lock is NULL:             # <<<<<<<<<<<<<<
 *             PyErr_NoMemory()
 * 
 */
  __pyx_t_1 = (__pyx_v_self->_real_lock == NULL);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":27
 *         self._real_lock = pythread.PyThread_allocate_lock()
 *         if self._real_lock is NULL:
 *             PyErr_NoMemory()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_2 = PyErr_NoMemory(); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.FastRLock.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_3AKU_9FastRLock_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3AKU_9FastRLock_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3AKU_9FastRLock_2__dealloc__(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":29
 *             PyErr_NoMemory()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._real_lock is not NULL:
 *             pythread.PyThread_free_lock(self._real_lock)
 */

static void __pyx_pf_3AKU_9FastRLock_2__dealloc__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":30
 * 
 *     def __dealloc__(self):
 *         if self._real_lock is not NULL:             # <<<<<<<<<<<<<<
 *             pythread.PyThread_free_lock(self._real_lock)
 *             self._real_lock = NULL
 */
  __pyx_t_1 = (__pyx_v_self->_real_lock != NULL);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":31
 *     def __dealloc__(self):
 *         if self._real_lock is not NULL:
 *             pythread.PyThread_free_lock(self._real_lock)             # <<<<<<<<<<<<<<
 *             self._real_lock = NULL
 * 
 */
    PyThread_free_lock(__pyx_v_self->_real_lock);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":32
 *         if self._real_lock is not NULL:
 *             pythread.PyThread_free_lock(self._real_lock)
 *             self._real_lock = NULL             # <<<<<<<<<<<<<<
 * 
 *     def acquire(self, bint blocking=True):
 */
    __pyx_v_self->_real_lock = NULL;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9FastRLock_5acquire(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_9FastRLock_5acquire(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_blocking;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__blocking,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__blocking);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "acquire") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_blocking = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_blocking == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":34
 *             self._real_lock = NULL
 * 
 *     def acquire(self, bint blocking=True):             # <<<<<<<<<<<<<<
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), blocking)
 * 
 */
      __pyx_v_blocking = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("acquire", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.FastRLock.acquire", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_9FastRLock_4acquire(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self), __pyx_v_blocking);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3AKU_9FastRLock_4acquire(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self, int __pyx_v_blocking) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("acquire", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":35
 * 
 *     def acquire(self, bint blocking=True):
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), blocking)             # <<<<<<<<<<<<<<
 * 
 *     def release(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3AKU_lock_lock(__pyx_v_self, PyThread_get_thread_ident(), __pyx_v_blocking)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.FastRLock.acquire", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9FastRLock_7release(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_9FastRLock_7release(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("release (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9FastRLock_6release(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":37
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), blocking)
 * 
 *     def release(self):             # <<<<<<<<<<<<<<
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")
 */

static PyObject *__pyx_pf_3AKU_9FastRLock_6release(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("release", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":38
 * 
 *     def release(self):
 *         if self._owner != pythread.PyThread_get_thread_ident():             # <<<<<<<<<<<<<<
 *             raise RuntimeError("cannot release un-acquired lock")
 *         unlock_lock(self)
 */
  __pyx_t_1 = (__pyx_v_self->_owner != PyThread_get_thread_ident());
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":39
 *     def release(self):
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")             # <<<<<<<<<<<<<<
 *         unlock_lock(self)
 * 
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_2), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":40
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")
 *         unlock_lock(self)             # <<<<<<<<<<<<<<
 * 
 *     # compatibility with RLock
 */
  __pyx_f_3AKU_unlock_lock(__pyx_v_self);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.FastRLock.release", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9FastRLock_9__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_9FastRLock_9__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9FastRLock_8__enter__(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":44
 *     # compatibility with RLock
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         # self.acquire()
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), True)
 */

static PyObject *__pyx_pf_3AKU_9FastRLock_8__enter__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__enter__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":46
 *     def __enter__(self):
 *         # self.acquire()
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), True)             # <<<<<<<<<<<<<<
 * 
 *     def __exit__(self, t, v, tb):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3AKU_lock_lock(__pyx_v_self, PyThread_get_thread_ident(), 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.FastRLock.__enter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9FastRLock_11__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_9FastRLock_11__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_t = 0;
  CYTHON_UNUSED PyObject *__pyx_v_v = 0;
  CYTHON_UNUSED PyObject *__pyx_v_tb = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__exit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__t,&__pyx_n_s__v,&__pyx_n_s__tb,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__t)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__tb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__exit__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_t = values[0];
    __pyx_v_v = values[1];
    __pyx_v_tb = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.FastRLock.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_9FastRLock_10__exit__(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self), __pyx_v_t, __pyx_v_v, __pyx_v_tb);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":48
 *         return lock_lock(self, pythread.PyThread_get_thread_ident(), True)
 * 
 *     def __exit__(self, t, v, tb):             # <<<<<<<<<<<<<<
 *         # self.release()
 *         if self._owner != pythread.PyThread_get_thread_ident():
 */

static PyObject *__pyx_pf_3AKU_9FastRLock_10__exit__(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_t, CYTHON_UNUSED PyObject *__pyx_v_v, CYTHON_UNUSED PyObject *__pyx_v_tb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__exit__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":50
 *     def __exit__(self, t, v, tb):
 *         # self.release()
 *         if self._owner != pythread.PyThread_get_thread_ident():             # <<<<<<<<<<<<<<
 *             raise RuntimeError("cannot release un-acquired lock")
 *         unlock_lock(self)
 */
  __pyx_t_1 = (__pyx_v_self->_owner != PyThread_get_thread_ident());
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":51
 *         # self.release()
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")             # <<<<<<<<<<<<<<
 *         unlock_lock(self)
 * 
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":52
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")
 *         unlock_lock(self)             # <<<<<<<<<<<<<<
 * 
 *     def _is_owned(self):
 */
  __pyx_f_3AKU_unlock_lock(__pyx_v_self);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.FastRLock.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9FastRLock_13_is_owned(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_9FastRLock_13_is_owned(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_is_owned (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9FastRLock_12_is_owned(((struct __pyx_obj_3AKU_FastRLock *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":54
 *         unlock_lock(self)
 * 
 *     def _is_owned(self):             # <<<<<<<<<<<<<<
 *         return self._owner == pythread.PyThread_get_thread_ident()
 * 
 */

static PyObject *__pyx_pf_3AKU_9FastRLock_12_is_owned(struct __pyx_obj_3AKU_FastRLock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_is_owned", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":55
 * 
 *     def _is_owned(self):
 *         return self._owner == pythread.PyThread_get_thread_ident()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->_owner == PyThread_get_thread_ident())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.FastRLock._is_owned", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":58
 * 
 * 
 * cdef inline bint lock_lock(FastRLock lock, long current_thread, bint blocking) nogil:             # <<<<<<<<<<<<<<
 *     # Note that this function *must* hold the GIL when being called.
 *     # We just use 'nogil' in the signature to make sure that no Python
 */

static CYTHON_INLINE int __pyx_f_3AKU_lock_lock(struct __pyx_obj_3AKU_FastRLock *__pyx_v_lock, long __pyx_v_current_thread, int __pyx_v_blocking) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":63
 *     # code execution slips in that might free the GIL
 * 
 *     if lock._count:             # <<<<<<<<<<<<<<
 *         # locked! - by myself?
 *         if current_thread == lock._owner:
 */
  if (__pyx_v_lock->_count) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":65
 *     if lock._count:
 *         # locked! - by myself?
 *         if current_thread == lock._owner:             # <<<<<<<<<<<<<<
 *             lock._count += 1
 *             return 1
 */
    __pyx_t_1 = (__pyx_v_current_thread == __pyx_v_lock->_owner);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":66
 *         # locked! - by myself?
 *         if current_thread == lock._owner:
 *             lock._count += 1             # <<<<<<<<<<<<<<
 *             return 1
 *     elif not lock._pending_requests:
 */
      __pyx_v_lock->_count = (__pyx_v_lock->_count + 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":67
 *         if current_thread == lock._owner:
 *             lock._count += 1
 *             return 1             # <<<<<<<<<<<<<<
 *     elif not lock._pending_requests:
 *         # not locked, not requested - go!
 */
      __pyx_r = 1;
      goto __pyx_L0;
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":68
 *             lock._count += 1
 *             return 1
 *     elif not lock._pending_requests:             # <<<<<<<<<<<<<<
 *         # not locked, not requested - go!
 *         lock._owner = current_thread
 */
  __pyx_t_1 = (!__pyx_v_lock->_pending_requests);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":70
 *     elif not lock._pending_requests:
 *         # not locked, not requested - go!
 *         lock._owner = current_thread             # <<<<<<<<<<<<<<
 *         lock._count = 1
 *         return 1
 */
    __pyx_v_lock->_owner = __pyx_v_current_thread;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":71
 *         # not locked, not requested - go!
 *         lock._owner = current_thread
 *         lock._count = 1             # <<<<<<<<<<<<<<
 *         return 1
 *     # need to get the real lock
 */
    __pyx_v_lock->_count = 1;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":72
 *         lock._owner = current_thread
 *         lock._count = 1
 *         return 1             # <<<<<<<<<<<<<<
 *     # need to get the real lock
 *     return _acquire_lock(
 */
    __pyx_r = 1;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":76
 *     return _acquire_lock(
 *         lock, current_thread,
 *         pythread.WAIT_LOCK if blocking else pythread.NOWAIT_LOCK)             # <<<<<<<<<<<<<<
 * 
 * cdef bint _acquire_lock(FastRLock lock, long current_thread, int wait) nogil:
 */
  if (__pyx_v_blocking) {
    __pyx_t_2 = WAIT_LOCK;
  } else {
    __pyx_t_2 = NOWAIT_LOCK;
  }
  __pyx_r = __pyx_f_3AKU__acquire_lock(__pyx_v_lock, __pyx_v_current_thread, __pyx_t_2);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":78
 *         pythread.WAIT_LOCK if blocking else pythread.NOWAIT_LOCK)
 * 
 * cdef bint _acquire_lock(FastRLock lock, long current_thread, int wait) nogil:             # <<<<<<<<<<<<<<
 *     # Note that this function *must* hold the GIL when being called.
 *     # We just use 'nogil' in the signature to make sure that no Python
 */

static int __pyx_f_3AKU__acquire_lock(struct __pyx_obj_3AKU_FastRLock *__pyx_v_lock, long __pyx_v_current_thread, int __pyx_v_wait) {
  int __pyx_v_locked;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":83
 *     # code execution slips in that might free the GIL
 * 
 *     if not lock._is_locked and not lock._pending_requests:             # <<<<<<<<<<<<<<
 *         # someone owns it but didn't acquire the real lock - do that
 *         # now and tell the owner to release it when done. Note that we
 */
  __pyx_t_1 = (!__pyx_v_lock->_is_locked);
  if (__pyx_t_1) {
    __pyx_t_2 = (!__pyx_v_lock->_pending_requests);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":88
 *         # do not release the GIL here as we must absolutely be the one
 *         # who acquires the lock now.
 *         if not pythread.PyThread_acquire_lock(lock._real_lock, wait):             # <<<<<<<<<<<<<<
 *             return 0
 *         #assert not lock._is_locked
 */
    __pyx_t_3 = (!PyThread_acquire_lock(__pyx_v_lock->_real_lock, __pyx_v_wait));
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":89
 *         # who acquires the lock now.
 *         if not pythread.PyThread_acquire_lock(lock._real_lock, wait):
 *             return 0             # <<<<<<<<<<<<<<
 *         #assert not lock._is_locked
 *         lock._is_locked = True
 */
      __pyx_r = 0;
      goto __pyx_L0;
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":91
 *             return 0
 *         #assert not lock._is_locked
 *         lock._is_locked = True             # <<<<<<<<<<<<<<
 *     lock._pending_requests += 1
 *     with nogil:
 */
    __pyx_v_lock->_is_locked = 1;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":92
 *         #assert not lock._is_locked
 *         lock._is_locked = True
 *     lock._pending_requests += 1             # <<<<<<<<<<<<<<
 *     with nogil:
 *         # wait for the lock owning thread to release it
 */
  __pyx_v_lock->_pending_requests = (__pyx_v_lock->_pending_requests + 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":93
 *         lock._is_locked = True
 *     lock._pending_requests += 1
 *     with nogil:             # <<<<<<<<<<<<<<
 *         # wait for the lock owning thread to release it
 *         locked = pythread.PyThread_acquire_lock(lock._real_lock, wait)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save = NULL;
      #endif
      Py_UNBLOCK_THREADS
      /*try:*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":95
 *     with nogil:
 *         # wait for the lock owning thread to release it
 *         locked = pythread.PyThread_acquire_lock(lock._real_lock, wait)             # <<<<<<<<<<<<<<
 *     lock._pending_requests -= 1
 *     #assert not lock._is_locked
 */
        __pyx_v_locked = PyThread_acquire_lock(__pyx_v_lock->_real_lock, __pyx_v_wait);
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":93
 *         lock._is_locked = True
 *     lock._pending_requests += 1
 *     with nogil:             # <<<<<<<<<<<<<<
 *         # wait for the lock owning thread to release it
 *         locked = pythread.PyThread_acquire_lock(lock._real_lock, wait)
 */
      /*finally:*/ {
        Py_BLOCK_THREADS
      }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":96
 *         # wait for the lock owning thread to release it
 *         locked = pythread.PyThread_acquire_lock(lock._real_lock, wait)
 *     lock._pending_requests -= 1             # <<<<<<<<<<<<<<
 *     #assert not lock._is_locked
 *     #assert lock._count == 0
 */
  __pyx_v_lock->_pending_requests = (__pyx_v_lock->_pending_requests - 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":99
 *     #assert not lock._is_locked
 *     #assert lock._count == 0
 *     if not locked:             # <<<<<<<<<<<<<<
 *         return 0
 *     lock._is_locked = True
 */
  __pyx_t_3 = (!__pyx_v_locked);
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":100
 *     #assert lock._count == 0
 *     if not locked:
 *         return 0             # <<<<<<<<<<<<<<
 *     lock._is_locked = True
 *     lock._owner = current_thread
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L8;
  }
  __pyx_L8:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":101
 *     if not locked:
 *         return 0
 *     lock._is_locked = True             # <<<<<<<<<<<<<<
 *     lock._owner = current_thread
 *     lock._count = 1
 */
  __pyx_v_lock->_is_locked = 1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":102
 *         return 0
 *     lock._is_locked = True
 *     lock._owner = current_thread             # <<<<<<<<<<<<<<
 *     lock._count = 1
 *     return 1
 */
  __pyx_v_lock->_owner = __pyx_v_current_thread;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":103
 *     lock._is_locked = True
 *     lock._owner = current_thread
 *     lock._count = 1             # <<<<<<<<<<<<<<
 *     return 1
 * 
 */
  __pyx_v_lock->_count = 1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":104
 *     lock._owner = current_thread
 *     lock._count = 1
 *     return 1             # <<<<<<<<<<<<<<
 * 
 * cdef inline void unlock_lock(FastRLock lock) nogil:
 */
  __pyx_r = 1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":106
 *     return 1
 * 
 * cdef inline void unlock_lock(FastRLock lock) nogil:             # <<<<<<<<<<<<<<
 *     # Note that this function *must* hold the GIL when being called.
 *     # We just use 'nogil' in the signature to make sure that no Python
 */

static CYTHON_INLINE void __pyx_f_3AKU_unlock_lock(struct __pyx_obj_3AKU_FastRLock *__pyx_v_lock) {
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":113
 *     #assert lock._owner == pythread.PyThread_get_thread_ident()
 *     #assert lock._count > 0
 *     lock._count -= 1             # <<<<<<<<<<<<<<
 *     if lock._count == 0:
 *         lock._owner = -1
 */
  __pyx_v_lock->_count = (__pyx_v_lock->_count - 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":114
 *     #assert lock._count > 0
 *     lock._count -= 1
 *     if lock._count == 0:             # <<<<<<<<<<<<<<
 *         lock._owner = -1
 *         if lock._is_locked:
 */
  __pyx_t_1 = (__pyx_v_lock->_count == 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":115
 *     lock._count -= 1
 *     if lock._count == 0:
 *         lock._owner = -1             # <<<<<<<<<<<<<<
 *         if lock._is_locked:
 *             pythread.PyThread_release_lock(lock._real_lock)
 */
    __pyx_v_lock->_owner = -1;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":116
 *     if lock._count == 0:
 *         lock._owner = -1
 *         if lock._is_locked:             # <<<<<<<<<<<<<<
 *             pythread.PyThread_release_lock(lock._real_lock)
 *             lock._is_locked = False
 */
    if (__pyx_v_lock->_is_locked) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":117
 *         lock._owner = -1
 *         if lock._is_locked:
 *             pythread.PyThread_release_lock(lock._real_lock)             # <<<<<<<<<<<<<<
 *             lock._is_locked = False
 */
      PyThread_release_lock(__pyx_v_lock->_real_lock);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":118
 *         if lock._is_locked:
 *             pythread.PyThread_release_lock(lock._real_lock)
 *             lock._is_locked = False             # <<<<<<<<<<<<<<
 */
      __pyx_v_lock->_is_locked = 0;
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

}

/* Python wrapper */
static void __pyx_pw_3AKU_10LuaRuntime_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3AKU_10LuaRuntime_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3AKU_10LuaRuntime___dealloc__(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":138
 *     #         self._state = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._state is not NULL:
 *             self._state = NULL
 */

static void __pyx_pf_3AKU_10LuaRuntime___dealloc__(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":139
 * 
 *     def __dealloc__(self):
 *         if self._state is not NULL:             # <<<<<<<<<<<<<<
 *             self._state = NULL
 * 
 */
  __pyx_t_1 = (__pyx_v_self->_state != NULL);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":140
 *     def __dealloc__(self):
 *         if self._state is not NULL:
 *             self._state = NULL             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, lua_State* L):
 */
    __pyx_v_self->_state = NULL;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":142
 *             self._state = NULL
 * 
 *     cdef init(self, lua_State* L):             # <<<<<<<<<<<<<<
 *         if L is NULL:
 *             raise LuaError("Failed to initialise Lua runtime")
 */

static PyObject *__pyx_f_3AKU_10LuaRuntime_init(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, lua_State *__pyx_v_L) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":143
 * 
 *     cdef init(self, lua_State* L):
 *         if L is NULL:             # <<<<<<<<<<<<<<
 *             raise LuaError("Failed to initialise Lua runtime")
 *         self._state = L
 */
  __pyx_t_1 = (__pyx_v_L == NULL);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":144
 *     cdef init(self, lua_State* L):
 *         if L is NULL:
 *             raise LuaError("Failed to initialise Lua runtime")             # <<<<<<<<<<<<<<
 *         self._state = L
 *         self._lock = FastRLock()
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_5), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":145
 *         if L is NULL:
 *             raise LuaError("Failed to initialise Lua runtime")
 *         self._state = L             # <<<<<<<<<<<<<<
 *         self._lock = FastRLock()
 *         self._encoding = b'UTF-8' # if encoding is None else encoding.encode('ASCII')
 */
  __pyx_v_self->_state = __pyx_v_L;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":146
 *             raise LuaError("Failed to initialise Lua runtime")
 *         self._state = L
 *         self._lock = FastRLock()             # <<<<<<<<<<<<<<
 *         self._encoding = b'UTF-8' # if encoding is None else encoding.encode('ASCII')
 *         self._source_encoding = b'UTF-8' #source_encoding or self._encoding or b'UTF-8'
 */
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU_FastRLock)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_lock);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_lock));
  __pyx_v_self->_lock = ((struct __pyx_obj_3AKU_FastRLock *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":147
 *         self._state = L
 *         self._lock = FastRLock()
 *         self._encoding = b'UTF-8' # if encoding is None else encoding.encode('ASCII')             # <<<<<<<<<<<<<<
 *         self._source_encoding = b'UTF-8' #source_encoding or self._encoding or b'UTF-8'
 *         self._attribute_filter = None #attribute_filter
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_b_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_b_6));
  __Pyx_GOTREF(__pyx_v_self->_encoding);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_encoding));
  __pyx_v_self->_encoding = __pyx_kp_b_6;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":148
 *         self._lock = FastRLock()
 *         self._encoding = b'UTF-8' # if encoding is None else encoding.encode('ASCII')
 *         self._source_encoding = b'UTF-8' #source_encoding or self._encoding or b'UTF-8'             # <<<<<<<<<<<<<<
 *         self._attribute_filter = None #attribute_filter
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_b_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_b_6));
  __Pyx_GOTREF(__pyx_v_self->_source_encoding);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_source_encoding));
  __pyx_v_self->_source_encoding = __pyx_kp_b_6;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":149
 *         self._encoding = b'UTF-8' # if encoding is None else encoding.encode('ASCII')
 *         self._source_encoding = b'UTF-8' #source_encoding or self._encoding or b'UTF-8'
 *         self._attribute_filter = None #attribute_filter             # <<<<<<<<<<<<<<
 * 
 *         # lua.luaL_openlibs(L)
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_attribute_filter);
  __Pyx_DECREF(__pyx_v_self->_attribute_filter);
  __pyx_v_self->_attribute_filter = Py_None;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":152
 * 
 *         # lua.luaL_openlibs(L)
 *         self.init_python_lib(True)             # <<<<<<<<<<<<<<
 *         lua.lua_settop(L, 0)
 *         # lua.lua_atpanic(L, <lua.lua_CFunction>1)
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->__pyx_vtab)->init_python_lib(__pyx_v_self, 1); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":153
 *         # lua.luaL_openlibs(L)
 *         self.init_python_lib(True)
 *         lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *         # lua.lua_atpanic(L, <lua.lua_CFunction>1)
 * 
 */
  lua_settop(__pyx_v_L, 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":157
 * 
 *         #create object conversion cache
 *         lua.lua_createtable( L, 0, 0 )             # <<<<<<<<<<<<<<
 *         # lua.lua_createtable( L, 0, 1 ) #metatable {__mode = 'v'}
 *         # lua.lua_pushstring( L, 'v' )
 */
  lua_createtable(__pyx_v_L, 0, 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":162
 *         # lua.lua_setfield( L, -2, '__mode' )
 *         # lua.lua_setmetatable( L, -2 ) #setmetatable ( cache, mt )
 *         lua.lua_setfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE) #save to registry table             # <<<<<<<<<<<<<<
 * 
 * 
 */
  lua_setfield(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_k____LUPA_CACHE__);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.LuaRuntime.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":166
 * 
 * 
 *     cdef destroy(self):             # <<<<<<<<<<<<<<
 *         self._state = NULL #state will be closed by true owner
 * 
 */

static PyObject *__pyx_f_3AKU_10LuaRuntime_destroy(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("destroy", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":167
 * 
 *     cdef destroy(self):
 *         self._state = NULL #state will be closed by true owner             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->_state = NULL;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":170
 * 
 * 
 *     cdef int reraise_on_exception(self) except -1:             # <<<<<<<<<<<<<<
 *         if self._raised_exception is not None:
 *             exception = self._raised_exception
 */

static int __pyx_f_3AKU_10LuaRuntime_reraise_on_exception(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self) {
  PyObject *__pyx_v_exception = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reraise_on_exception", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":171
 * 
 *     cdef int reraise_on_exception(self) except -1:
 *         if self._raised_exception is not None:             # <<<<<<<<<<<<<<
 *             exception = self._raised_exception
 *             self._raised_exception = None
 */
  __pyx_t_1 = (__pyx_v_self->_raised_exception != ((PyObject*)Py_None));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":172
 *     cdef int reraise_on_exception(self) except -1:
 *         if self._raised_exception is not None:
 *             exception = self._raised_exception             # <<<<<<<<<<<<<<
 *             self._raised_exception = None
 *             raise exception[0], exception[1], exception[2]
 */
    __pyx_t_2 = ((PyObject *)__pyx_v_self->_raised_exception);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v_exception = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":173
 *         if self._raised_exception is not None:
 *             exception = self._raised_exception
 *             self._raised_exception = None             # <<<<<<<<<<<<<<
 *             raise exception[0], exception[1], exception[2]
 *         return 0
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_raised_exception);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_raised_exception));
    __pyx_v_self->_raised_exception = ((PyObject*)Py_None);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":174
 *             exception = self._raised_exception
 *             self._raised_exception = None
 *             raise exception[0], exception[1], exception[2]             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
    if (unlikely(((PyObject *)__pyx_v_exception) == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_exception), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(((PyObject *)__pyx_v_exception) == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_exception), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(((PyObject *)__pyx_v_exception) == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_exception), 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_2, __pyx_t_3, __pyx_t_4, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":175
 *             self._raised_exception = None
 *             raise exception[0], exception[1], exception[2]
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     cdef int store_raised_exception(self) except -1:
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("AKU.LuaRuntime.reraise_on_exception", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_exception);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":177
 *         return 0
 * 
 *     cdef int store_raised_exception(self) except -1:             # <<<<<<<<<<<<<<
 *         self._raised_exception = exc_info()
 *         return 0
 */

static int __pyx_f_3AKU_10LuaRuntime_store_raised_exception(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("store_raised_exception", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":178
 * 
 *     cdef int store_raised_exception(self) except -1:
 *         self._raised_exception = exc_info()             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
  __pyx_t_1 = PyObject_Call(__pyx_v_3AKU_exc_info, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_raised_exception);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_raised_exception));
  __pyx_v_self->_raised_exception = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":179
 *     cdef int store_raised_exception(self) except -1:
 *         self._raised_exception = exc_info()
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     def eval(self, lua_code):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.LuaRuntime.store_raised_exception", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10LuaRuntime_3eval(PyObject *__pyx_v_self, PyObject *__pyx_v_lua_code); /*proto*/
static char __pyx_doc_3AKU_10LuaRuntime_2eval[] = "Evaluate a Lua expression passed in a string.\n        ";
static PyObject *__pyx_pw_3AKU_10LuaRuntime_3eval(PyObject *__pyx_v_self, PyObject *__pyx_v_lua_code) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eval (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10LuaRuntime_2eval(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self), ((PyObject *)__pyx_v_lua_code));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":181
 *         return 0
 * 
 *     def eval(self, lua_code):             # <<<<<<<<<<<<<<
 *         """Evaluate a Lua expression passed in a string.
 *         """
 */

static PyObject *__pyx_pf_3AKU_10LuaRuntime_2eval(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_lua_code) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eval", 0);
  __Pyx_INCREF(__pyx_v_lua_code);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":184
 *         """Evaluate a Lua expression passed in a string.
 *         """
 *         assert self._state is not NULL             # <<<<<<<<<<<<<<
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_self->_state != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":185
 *         """
 *         assert self._state is not NULL
 *         if isinstance(lua_code, unicode):             # <<<<<<<<<<<<<<
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 *         return run_lua(self, b'return ' + lua_code)
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_lua_code); 
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":186
 *         assert self._state is not NULL
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)             # <<<<<<<<<<<<<<
 *         return run_lua(self, b'return ' + lua_code)
 * 
 */
    if (unlikely(__pyx_v_lua_code == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_self->_source_encoding)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = ((PyObject *)PyUnicode_AsEncodedString(((PyObject*)__pyx_v_lua_code), __pyx_t_2, NULL)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_DECREF(__pyx_v_lua_code);
    __pyx_v_lua_code = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":187
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 *         return run_lua(self, b'return ' + lua_code)             # <<<<<<<<<<<<<<
 * 
 *     def execute(self, lua_code):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_b_7), __pyx_v_lua_code); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (!(likely(PyBytes_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected bytes, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_f_3AKU_run_lua(__pyx_v_self, ((PyObject*)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("AKU.LuaRuntime.eval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lua_code);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10LuaRuntime_5execute(PyObject *__pyx_v_self, PyObject *__pyx_v_lua_code); /*proto*/
static char __pyx_doc_3AKU_10LuaRuntime_4execute[] = "Execute a Lua program passed in a string.\n        ";
static PyObject *__pyx_pw_3AKU_10LuaRuntime_5execute(PyObject *__pyx_v_self, PyObject *__pyx_v_lua_code) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("execute (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10LuaRuntime_4execute(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self), ((PyObject *)__pyx_v_lua_code));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":189
 *         return run_lua(self, b'return ' + lua_code)
 * 
 *     def execute(self, lua_code):             # <<<<<<<<<<<<<<
 *         """Execute a Lua program passed in a string.
 *         """
 */

static PyObject *__pyx_pf_3AKU_10LuaRuntime_4execute(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_lua_code) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("execute", 0);
  __Pyx_INCREF(__pyx_v_lua_code);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":192
 *         """Execute a Lua program passed in a string.
 *         """
 *         assert self._state is not NULL             # <<<<<<<<<<<<<<
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_self->_state != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":193
 *         """
 *         assert self._state is not NULL
 *         if isinstance(lua_code, unicode):             # <<<<<<<<<<<<<<
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 *         return run_lua(self, lua_code)
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_lua_code); 
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":194
 *         assert self._state is not NULL
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)             # <<<<<<<<<<<<<<
 *         return run_lua(self, lua_code)
 * 
 */
    if (unlikely(__pyx_v_lua_code == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_self->_source_encoding)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = ((PyObject *)PyUnicode_AsEncodedString(((PyObject*)__pyx_v_lua_code), __pyx_t_2, NULL)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_DECREF(__pyx_v_lua_code);
    __pyx_v_lua_code = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":195
 *         if isinstance(lua_code, unicode):
 *             lua_code = (<unicode>lua_code).encode(self._source_encoding)
 *         return run_lua(self, lua_code)             # <<<<<<<<<<<<<<
 * 
 *     def require(self, modulename):
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyBytes_CheckExact(__pyx_v_lua_code))||((__pyx_v_lua_code) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected bytes, got %.200s", Py_TYPE(__pyx_v_lua_code)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_f_3AKU_run_lua(__pyx_v_self, ((PyObject*)__pyx_v_lua_code)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.LuaRuntime.execute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lua_code);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10LuaRuntime_7require(PyObject *__pyx_v_self, PyObject *__pyx_v_modulename); /*proto*/
static char __pyx_doc_3AKU_10LuaRuntime_6require[] = "Load a Lua library into the runtime.\n        ";
static PyObject *__pyx_pw_3AKU_10LuaRuntime_7require(PyObject *__pyx_v_self, PyObject *__pyx_v_modulename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("require (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10LuaRuntime_6require(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self), ((PyObject *)__pyx_v_modulename));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":197
 *         return run_lua(self, lua_code)
 * 
 *     def require(self, modulename):             # <<<<<<<<<<<<<<
 *         """Load a Lua library into the runtime.
 *         """
 */

static PyObject *__pyx_pf_3AKU_10LuaRuntime_6require(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_modulename) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("require", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":200
 *         """Load a Lua library into the runtime.
 *         """
 *         assert self._state is not NULL             # <<<<<<<<<<<<<<
 *         cdef lua_State *L = self._state
 *         if not isinstance(modulename, (bytes, unicode)):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_self->_state != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":201
 *         """
 *         assert self._state is not NULL
 *         cdef lua_State *L = self._state             # <<<<<<<<<<<<<<
 *         if not isinstance(modulename, (bytes, unicode)):
 *             raise TypeError("modulename must be a string")
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":202
 *         assert self._state is not NULL
 *         cdef lua_State *L = self._state
 *         if not isinstance(modulename, (bytes, unicode)):             # <<<<<<<<<<<<<<
 *             raise TypeError("modulename must be a string")
 *         lock_runtime(self)
 */
  __Pyx_INCREF(__pyx_v_modulename);
  __pyx_t_2 = __pyx_v_modulename;
  __pyx_t_3 = PyBytes_Check(__pyx_t_2); 
  if (!__pyx_t_3) {
    __pyx_t_4 = PyUnicode_Check(__pyx_t_2); 
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = (!__pyx_t_5);
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":203
 *         cdef lua_State *L = self._state
 *         if not isinstance(modulename, (bytes, unicode)):
 *             raise TypeError("modulename must be a string")             # <<<<<<<<<<<<<<
 *         lock_runtime(self)
 *         try:
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_9), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":204
 *         if not isinstance(modulename, (bytes, unicode)):
 *             raise TypeError("modulename must be a string")
 *         lock_runtime(self)             # <<<<<<<<<<<<<<
 *         try:
 *             lua.lua_pushlstring(L, 'require', 7)
 */
  __pyx_t_6 = __pyx_f_3AKU_lock_runtime(__pyx_v_self); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":205
 *             raise TypeError("modulename must be a string")
 *         lock_runtime(self)
 *         try:             # <<<<<<<<<<<<<<
 *             lua.lua_pushlstring(L, 'require', 7)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":206
 *         lock_runtime(self)
 *         try:
 *             lua.lua_pushlstring(L, 'require', 7)             # <<<<<<<<<<<<<<
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):
 */
    lua_pushlstring(__pyx_v_L, __pyx_k__require, 7);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":207
 *         try:
 *             lua.lua_pushlstring(L, 'require', 7)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)             # <<<<<<<<<<<<<<
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 */
    lua_rawget(__pyx_v_L, LUA_GLOBALSINDEX);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":208
 *             lua.lua_pushlstring(L, 'require', 7)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("require is not defined")
 */
    __pyx_t_3 = lua_isnil(__pyx_v_L, -1);
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":209
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                 raise LuaError("require is not defined")
 *             return call_lua(self, L, (modulename,))
 */
      lua_pop(__pyx_v_L, 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":210
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("require is not defined")             # <<<<<<<<<<<<<<
 *             return call_lua(self, L, (modulename,))
 *         finally:
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_11), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_7, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L5;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":211
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("require is not defined")
 *             return call_lua(self, L, (modulename,))             # <<<<<<<<<<<<<<
 *         finally:
 *             unlock_runtime(self)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L5;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_modulename);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_modulename);
    __Pyx_GIVEREF(__pyx_v_modulename);
    __pyx_t_2 = __pyx_f_3AKU_call_lua(__pyx_v_self, __pyx_v_L, ((PyObject*)__pyx_t_7)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L5;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L4;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":213
 *             return call_lua(self, L, (modulename,))
 *         finally:
 *             unlock_runtime(self)             # <<<<<<<<<<<<<<
 * 
 *     def globals(self):
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L6;
    __pyx_L4: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L6;
    __pyx_L5: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L6;
    }
    __pyx_L6:;
    __pyx_f_3AKU_unlock_runtime(__pyx_v_self);
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU.LuaRuntime.require", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10LuaRuntime_9globals(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3AKU_10LuaRuntime_8globals[] = "Return the globals defined in this Lua runtime as a Lua\n        table.\n        ";
static PyObject *__pyx_pw_3AKU_10LuaRuntime_9globals(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("globals (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10LuaRuntime_8globals(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":215
 *             unlock_runtime(self)
 * 
 *     def globals(self):             # <<<<<<<<<<<<<<
 *         """Return the globals defined in this Lua runtime as a Lua
 *         table.
 */

static PyObject *__pyx_pf_3AKU_10LuaRuntime_8globals(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("globals", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":219
 *         table.
 *         """
 *         assert self._state is not NULL             # <<<<<<<<<<<<<<
 *         cdef lua_State *L = self._state
 *         lock_runtime(self)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_self->_state != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":220
 *         """
 *         assert self._state is not NULL
 *         cdef lua_State *L = self._state             # <<<<<<<<<<<<<<
 *         lock_runtime(self)
 *         try:
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":221
 *         assert self._state is not NULL
 *         cdef lua_State *L = self._state
 *         lock_runtime(self)             # <<<<<<<<<<<<<<
 *         try:
 *             lua.lua_pushlstring(L, '_G', 2)
 */
  __pyx_t_2 = __pyx_f_3AKU_lock_runtime(__pyx_v_self); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":222
 *         cdef lua_State *L = self._state
 *         lock_runtime(self)
 *         try:             # <<<<<<<<<<<<<<
 *             lua.lua_pushlstring(L, '_G', 2)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":223
 *         lock_runtime(self)
 *         try:
 *             lua.lua_pushlstring(L, '_G', 2)             # <<<<<<<<<<<<<<
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):
 */
    lua_pushlstring(__pyx_v_L, __pyx_k___G, 2);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":224
 *         try:
 *             lua.lua_pushlstring(L, '_G', 2)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)             # <<<<<<<<<<<<<<
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 */
    lua_rawget(__pyx_v_L, LUA_GLOBALSINDEX);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":225
 *             lua.lua_pushlstring(L, '_G', 2)
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("globals not defined")
 */
    __pyx_t_3 = lua_isnil(__pyx_v_L, -1);
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":226
 *             lua.lua_rawget(L, lua.LUA_GLOBALSINDEX)
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                 raise LuaError("globals not defined")
 *             try:
 */
      lua_pop(__pyx_v_L, 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":227
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("globals not defined")             # <<<<<<<<<<<<<<
 *             try:
 *                 return py_from_lua(self, L, -1)
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_k_tuple_13), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L4;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":228
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("globals not defined")
 *             try:             # <<<<<<<<<<<<<<
 *                 return py_from_lua(self, L, -1)
 *             finally:
 */
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":229
 *                 raise LuaError("globals not defined")
 *             try:
 *                 return py_from_lua(self, L, -1)             # <<<<<<<<<<<<<<
 *             finally:
 *                 lua.lua_settop(L, 0)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __pyx_f_3AKU_py_from_lua(__pyx_v_self, __pyx_v_L, -1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L8;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L7;
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":231
 *                 return py_from_lua(self, L, -1)
 *             finally:
 *                 lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *         finally:
 *             unlock_runtime(self)
 */
    /*finally:*/ {
      int __pyx_why;
      PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
      int __pyx_exc_lineno;
      __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
      __pyx_why = 0; goto __pyx_L9;
      __pyx_L7: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
      __pyx_why = 3; goto __pyx_L9;
      __pyx_L8: {
        __pyx_why = 4;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
        __pyx_exc_lineno = __pyx_lineno;
        goto __pyx_L9;
      }
      __pyx_L9:;
      lua_settop(__pyx_v_L, 0);
      switch (__pyx_why) {
        case 3: goto __pyx_L3;
        case 4: {
          __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
          __pyx_lineno = __pyx_exc_lineno;
          __pyx_exc_type = 0;
          __pyx_exc_value = 0;
          __pyx_exc_tb = 0;
          goto __pyx_L4;
        }
      }
    }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":233
 *                 lua.lua_settop(L, 0)
 *         finally:
 *             unlock_runtime(self)             # <<<<<<<<<<<<<<
 * 
 *     def table(self, *items, **kwargs):
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    __pyx_f_3AKU_unlock_runtime(__pyx_v_self);
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("AKU.LuaRuntime.globals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10LuaRuntime_11table(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3AKU_10LuaRuntime_10table[] = "Creates a new table with the provided items.  Positional\n        arguments are placed in the table in order, keyword arguments\n        are set as key-value pairs.\n        ";
static PyObject *__pyx_pw_3AKU_10LuaRuntime_11table(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_items = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("table (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "table", 1))) return NULL;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_items = __pyx_args;
  __pyx_r = __pyx_pf_3AKU_10LuaRuntime_10table(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_self), __pyx_v_items, __pyx_v_kwargs);
  __Pyx_XDECREF(__pyx_v_items);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":235
 *             unlock_runtime(self)
 * 
 *     def table(self, *items, **kwargs):             # <<<<<<<<<<<<<<
 *         """Creates a new table with the provided items.  Positional
 *         arguments are placed in the table in order, keyword arguments
 */

static PyObject *__pyx_pf_3AKU_10LuaRuntime_10table(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_items, PyObject *__pyx_v_kwargs) {
  lua_State *__pyx_v_L;
  int __pyx_v_i;
  PyObject *__pyx_v_arg = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("table", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":240
 *         are set as key-value pairs.
 *         """
 *         assert self._state is not NULL             # <<<<<<<<<<<<<<
 *         cdef lua_State *L = self._state
 *         cdef int i
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_self->_state != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":241
 *         """
 *         assert self._state is not NULL
 *         cdef lua_State *L = self._state             # <<<<<<<<<<<<<<
 *         cdef int i
 *         lock_runtime(self)
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":243
 *         cdef lua_State *L = self._state
 *         cdef int i
 *         lock_runtime(self)             # <<<<<<<<<<<<<<
 *         try:
 *             lua.lua_createtable(L, len(items), len(kwargs))
 */
  __pyx_t_2 = __pyx_f_3AKU_lock_runtime(__pyx_v_self); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":244
 *         cdef int i
 *         lock_runtime(self)
 *         try:             # <<<<<<<<<<<<<<
 *             lua.lua_createtable(L, len(items), len(kwargs))
 *             # FIXME: how to check for failure?
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":245
 *         lock_runtime(self)
 *         try:
 *             lua.lua_createtable(L, len(items), len(kwargs))             # <<<<<<<<<<<<<<
 *             # FIXME: how to check for failure?
 *             for i, arg in enumerate(items):
 */
    __pyx_t_3 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_items)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __pyx_t_4 = PyDict_Size(((PyObject *)__pyx_v_kwargs)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L4;}
    lua_createtable(__pyx_v_L, __pyx_t_3, __pyx_t_4);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":247
 *             lua.lua_createtable(L, len(items), len(kwargs))
 *             # FIXME: how to check for failure?
 *             for i, arg in enumerate(items):             # <<<<<<<<<<<<<<
 *                 py_to_lua(self, L, arg, 1)
 *                 lua.lua_rawseti(L, -2, i+1)
 */
    __pyx_t_2 = 0;
    __pyx_t_5 = ((PyObject *)__pyx_v_items); __Pyx_INCREF(__pyx_t_5); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_6); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L4;}
      #else
      __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L4;}
      #endif
      __Pyx_XDECREF(__pyx_v_arg);
      __pyx_v_arg = __pyx_t_6;
      __pyx_t_6 = 0;
      __pyx_v_i = __pyx_t_2;
      __pyx_t_2 = (__pyx_t_2 + 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":248
 *             # FIXME: how to check for failure?
 *             for i, arg in enumerate(items):
 *                 py_to_lua(self, L, arg, 1)             # <<<<<<<<<<<<<<
 *                 lua.lua_rawseti(L, -2, i+1)
 *             for key, value in kwargs.iteritems():
 */
      __pyx_t_7 = __pyx_f_3AKU_py_to_lua(__pyx_v_self, __pyx_v_L, __pyx_v_arg, 1); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L4;}

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":249
 *             for i, arg in enumerate(items):
 *                 py_to_lua(self, L, arg, 1)
 *                 lua.lua_rawseti(L, -2, i+1)             # <<<<<<<<<<<<<<
 *             for key, value in kwargs.iteritems():
 *                 py_to_lua(self, L, key, 1)
 */
      lua_rawseti(__pyx_v_L, -2, (__pyx_v_i + 1));
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":250
 *                 py_to_lua(self, L, arg, 1)
 *                 lua.lua_rawseti(L, -2, i+1)
 *             for key, value in kwargs.iteritems():             # <<<<<<<<<<<<<<
 *                 py_to_lua(self, L, key, 1)
 *                 py_to_lua(self, L, value, 1)
 */
    __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_dict_iterator(((PyObject *)__pyx_v_kwargs), 1, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_3), (&__pyx_t_2)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_6;
    __pyx_t_6 = 0;
    while (1) {
      __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_3, &__pyx_t_4, &__pyx_t_6, &__pyx_t_8, NULL, __pyx_t_2);
      if (unlikely(__pyx_t_7 == 0)) break;
      if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_XDECREF(__pyx_v_key);
      __pyx_v_key = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_v_value);
      __pyx_v_value = __pyx_t_8;
      __pyx_t_8 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":251
 *                 lua.lua_rawseti(L, -2, i+1)
 *             for key, value in kwargs.iteritems():
 *                 py_to_lua(self, L, key, 1)             # <<<<<<<<<<<<<<
 *                 py_to_lua(self, L, value, 1)
 *                 lua.lua_rawset(L, -3)
 */
      __pyx_t_7 = __pyx_f_3AKU_py_to_lua(__pyx_v_self, __pyx_v_L, __pyx_v_key, 1); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L4;}

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":252
 *             for key, value in kwargs.iteritems():
 *                 py_to_lua(self, L, key, 1)
 *                 py_to_lua(self, L, value, 1)             # <<<<<<<<<<<<<<
 *                 lua.lua_rawset(L, -3)
 *             return py_from_lua(self, L, -1)
 */
      __pyx_t_7 = __pyx_f_3AKU_py_to_lua(__pyx_v_self, __pyx_v_L, __pyx_v_value, 1); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L4;}

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":253
 *                 py_to_lua(self, L, key, 1)
 *                 py_to_lua(self, L, value, 1)
 *                 lua.lua_rawset(L, -3)             # <<<<<<<<<<<<<<
 *             return py_from_lua(self, L, -1)
 *         finally:
 */
      lua_rawset(__pyx_v_L, -3);
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":254
 *                 py_to_lua(self, L, value, 1)
 *                 lua.lua_rawset(L, -3)
 *             return py_from_lua(self, L, -1)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __pyx_f_3AKU_py_from_lua(__pyx_v_self, __pyx_v_L, -1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":256
 *             return py_from_lua(self, L, -1)
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":257
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self)             # <<<<<<<<<<<<<<
 * 
 *     cdef int register_py_object(self, bytes cname, bytes pyname, object obj) except -1:
 */
    __pyx_f_3AKU_unlock_runtime(__pyx_v_self);
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("AKU.LuaRuntime.table", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":259
 *             unlock_runtime(self)
 * 
 *     cdef int register_py_object(self, bytes cname, bytes pyname, object obj) except -1:             # <<<<<<<<<<<<<<
 *         cdef lua_State *L = self._state
 *         lua.lua_pushlstring(L, cname, len(cname))
 */

static int __pyx_f_3AKU_10LuaRuntime_register_py_object(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, PyObject *__pyx_v_cname, PyObject *__pyx_v_pyname, PyObject *__pyx_v_obj) {
  lua_State *__pyx_v_L;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  char *__pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("register_py_object", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":260
 * 
 *     cdef int register_py_object(self, bytes cname, bytes pyname, object obj) except -1:
 *         cdef lua_State *L = self._state             # <<<<<<<<<<<<<<
 *         lua.lua_pushlstring(L, cname, len(cname))
 *         if not py_to_lua_custom(self, L, obj, 0):
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":261
 *     cdef int register_py_object(self, bytes cname, bytes pyname, object obj) except -1:
 *         cdef lua_State *L = self._state
 *         lua.lua_pushlstring(L, cname, len(cname))             # <<<<<<<<<<<<<<
 *         if not py_to_lua_custom(self, L, obj, 0):
 *             lua.lua_pop(L, 1)
 */
  __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_cname)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_cname) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_cname)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  lua_pushlstring(__pyx_v_L, __pyx_t_2, __pyx_t_3);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":262
 *         cdef lua_State *L = self._state
 *         lua.lua_pushlstring(L, cname, len(cname))
 *         if not py_to_lua_custom(self, L, obj, 0):             # <<<<<<<<<<<<<<
 *             lua.lua_pop(L, 1)
 *             raise LuaError("failed to convert %s object" % pyname)
 */
  __pyx_t_4 = (!__pyx_f_3AKU_py_to_lua_custom(__pyx_v_self, __pyx_v_L, __pyx_v_obj, 0));
  if (__pyx_t_4) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":263
 *         lua.lua_pushlstring(L, cname, len(cname))
 *         if not py_to_lua_custom(self, L, obj, 0):
 *             lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *             raise LuaError("failed to convert %s object" % pyname)
 *         lua.lua_pushlstring(L, pyname, len(pyname))
 */
    lua_pop(__pyx_v_L, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":264
 *         if not py_to_lua_custom(self, L, obj, 0):
 *             lua.lua_pop(L, 1)
 *             raise LuaError("failed to convert %s object" % pyname)             # <<<<<<<<<<<<<<
 *         lua.lua_pushlstring(L, pyname, len(pyname))
 *         lua.lua_pushvalue(L, -2)
 */
    __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_14), ((PyObject *)__pyx_v_pyname)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_6));
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)__pyx_t_6));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_6));
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":265
 *             lua.lua_pop(L, 1)
 *             raise LuaError("failed to convert %s object" % pyname)
 *         lua.lua_pushlstring(L, pyname, len(pyname))             # <<<<<<<<<<<<<<
 *         lua.lua_pushvalue(L, -2)
 *         lua.lua_rawset(L, -5)
 */
  __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_pyname)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_pyname) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_pyname)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  lua_pushlstring(__pyx_v_L, __pyx_t_2, __pyx_t_3);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":266
 *             raise LuaError("failed to convert %s object" % pyname)
 *         lua.lua_pushlstring(L, pyname, len(pyname))
 *         lua.lua_pushvalue(L, -2)             # <<<<<<<<<<<<<<
 *         lua.lua_rawset(L, -5)
 *         lua.lua_rawset(L, lua.LUA_REGISTRYINDEX)
 */
  lua_pushvalue(__pyx_v_L, -2);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":267
 *         lua.lua_pushlstring(L, pyname, len(pyname))
 *         lua.lua_pushvalue(L, -2)
 *         lua.lua_rawset(L, -5)             # <<<<<<<<<<<<<<
 *         lua.lua_rawset(L, lua.LUA_REGISTRYINDEX)
 *         return 0
 */
  lua_rawset(__pyx_v_L, -5);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":268
 *         lua.lua_pushvalue(L, -2)
 *         lua.lua_rawset(L, -5)
 *         lua.lua_rawset(L, lua.LUA_REGISTRYINDEX)             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
  lua_rawset(__pyx_v_L, LUA_REGISTRYINDEX);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":269
 *         lua.lua_rawset(L, -5)
 *         lua.lua_rawset(L, lua.LUA_REGISTRYINDEX)
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     cdef int init_python_lib(self, bint register_eval) except -1:
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU.LuaRuntime.register_py_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":271
 *         return 0
 * 
 *     cdef int init_python_lib(self, bint register_eval) except -1:             # <<<<<<<<<<<<<<
 *         cdef lua_State *L = self._state
 * 
 */

static int __pyx_f_3AKU_10LuaRuntime_init_python_lib(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_self, int __pyx_v_register_eval) {
  lua_State *__pyx_v_L;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init_python_lib", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":272
 * 
 *     cdef int init_python_lib(self, bint register_eval) except -1:
 *         cdef lua_State *L = self._state             # <<<<<<<<<<<<<<
 * 
 *         # create 'python' lib and register our own object metatable
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":275
 * 
 *         # create 'python' lib and register our own object metatable
 *         lua.luaL_openlib(L, "python", py_lib, 0)             # <<<<<<<<<<<<<<
 *         lua.luaL_newmetatable(L, POBJECT)
 *         lua.luaL_openlib(L, NULL, py_object_lib, 0)
 */
  luaL_openlib(__pyx_v_L, __pyx_k__python, __pyx_v_3AKU_py_lib, 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":276
 *         # create 'python' lib and register our own object metatable
 *         lua.luaL_openlib(L, "python", py_lib, 0)
 *         lua.luaL_newmetatable(L, POBJECT)             # <<<<<<<<<<<<<<
 *         lua.luaL_openlib(L, NULL, py_object_lib, 0)
 *         lua.lua_pop(L, 1)
 */
  luaL_newmetatable(__pyx_v_L, __pyx_k__POBJECT);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":277
 *         lua.luaL_openlib(L, "python", py_lib, 0)
 *         lua.luaL_newmetatable(L, POBJECT)
 *         lua.luaL_openlib(L, NULL, py_object_lib, 0)             # <<<<<<<<<<<<<<
 *         lua.lua_pop(L, 1)
 * 
 */
  luaL_openlib(__pyx_v_L, NULL, __pyx_v_3AKU_py_object_lib, 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":278
 *         lua.luaL_newmetatable(L, POBJECT)
 *         lua.luaL_openlib(L, NULL, py_object_lib, 0)
 *         lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 * 
 *         # register global names in the module
 */
  lua_pop(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":281
 * 
 *         # register global names in the module
 *         self.register_py_object(b'Py_None',  b'none', None)             # <<<<<<<<<<<<<<
 *         if register_eval:
 *             self.register_py_object(b'eval',     b'eval', eval)
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->__pyx_vtab)->register_py_object(__pyx_v_self, __pyx_n_b__Py_None, __pyx_n_b__none, Py_None); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":282
 *         # register global names in the module
 *         self.register_py_object(b'Py_None',  b'none', None)
 *         if register_eval:             # <<<<<<<<<<<<<<
 *             self.register_py_object(b'eval',     b'eval', eval)
 *         self.register_py_object(b'builtins', b'builtins', builtins)
 */
  if (__pyx_v_register_eval) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":283
 *         self.register_py_object(b'Py_None',  b'none', None)
 *         if register_eval:
 *             self.register_py_object(b'eval',     b'eval', eval)             # <<<<<<<<<<<<<<
 *         self.register_py_object(b'builtins', b'builtins', builtins)
 * 
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->__pyx_vtab)->register_py_object(__pyx_v_self, __pyx_n_b__eval, __pyx_n_b__eval, __pyx_builtin_eval); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":284
 *         if register_eval:
 *             self.register_py_object(b'eval',     b'eval', eval)
 *         self.register_py_object(b'builtins', b'builtins', builtins)             # <<<<<<<<<<<<<<
 * 
 *         return 0 # nothing left to return on the stack
 */
  __pyx_t_3 = __pyx_v_3AKU_builtins;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_2 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->__pyx_vtab)->register_py_object(__pyx_v_self, __pyx_n_b__builtins, __pyx_n_b__builtins, __pyx_t_3); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":286
 *         self.register_py_object(b'builtins', b'builtins', builtins)
 * 
 *         return 0 # nothing left to return on the stack             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.LuaRuntime.init_python_lib", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":292
 * # fast, re-entrant runtime locking
 * 
 * cdef inline int lock_runtime(LuaRuntime runtime) except -1:             # <<<<<<<<<<<<<<
 *     if not lock_lock(runtime._lock, pythread.PyThread_get_thread_ident(), True):
 *         raise LuaError("Failed to acquire thread lock")
 */

static CYTHON_INLINE int __pyx_f_3AKU_lock_runtime(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lock_runtime", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":293
 * 
 * cdef inline int lock_runtime(LuaRuntime runtime) except -1:
 *     if not lock_lock(runtime._lock, pythread.PyThread_get_thread_ident(), True):             # <<<<<<<<<<<<<<
 *         raise LuaError("Failed to acquire thread lock")
 *     return 0
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_runtime->_lock);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = (!__pyx_f_3AKU_lock_lock(((struct __pyx_obj_3AKU_FastRLock *)__pyx_t_1), PyThread_get_thread_ident(), 1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":294
 * cdef inline int lock_runtime(LuaRuntime runtime) except -1:
 *     if not lock_lock(runtime._lock, pythread.PyThread_get_thread_ident(), True):
 *         raise LuaError("Failed to acquire thread lock")             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_16), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":295
 *     if not lock_lock(runtime._lock, pythread.PyThread_get_thread_ident(), True):
 *         raise LuaError("Failed to acquire thread lock")
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * cdef inline void unlock_runtime(LuaRuntime runtime) nogil:
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.lock_runtime", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":297
 *     return 0
 * 
 * cdef inline void unlock_runtime(LuaRuntime runtime) nogil:             # <<<<<<<<<<<<<<
 *     unlock_lock(runtime._lock)
 * 
 */

static CYTHON_INLINE void __pyx_f_3AKU_unlock_runtime(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime) {

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":298
 * 
 * cdef inline void unlock_runtime(LuaRuntime runtime) nogil:
 *     unlock_lock(runtime._lock)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_3AKU_unlock_lock(__pyx_v_runtime->_lock);

}

/* Python wrapper */
static int __pyx_pw_3AKU_10_LuaObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_10_LuaObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_3AKU_10_LuaObject___init__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":311
 *     cdef int _ref
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         raise TypeError("Type cannot be instantiated manually")
 * 
 */

static int __pyx_pf_3AKU_10_LuaObject___init__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":312
 * 
 *     def __init__(self):
 *         raise TypeError("Type cannot be instantiated manually")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_18), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU._LuaObject.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_3AKU_10_LuaObject_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3AKU_10_LuaObject_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3AKU_10_LuaObject_2__dealloc__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":314
 *         raise TypeError("Type cannot be instantiated manually")
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return
 */

static void __pyx_pf_3AKU_10_LuaObject_2__dealloc__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  lua_State *__pyx_v_L;
  int __pyx_v_locked;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  lua_State *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":315
 * 
 *     def __dealloc__(self):
 *         if self._runtime is None or self._runtime._state ==NULL :             # <<<<<<<<<<<<<<
 *             return
 *         cdef lua_State* L = self._state
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) == Py_None);
  if (!__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_self->_runtime->_state == NULL);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":316
 *     def __dealloc__(self):
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         try:
 */
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":317
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         try:
 *             lock_runtime(self._runtime)
 */
  __pyx_t_4 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_4;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":318
 *             return
 *         cdef lua_State* L = self._state
 *         try:             # <<<<<<<<<<<<<<
 *             lock_runtime(self._runtime)
 *             locked = True
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":319
 *         cdef lua_State* L = self._state
 *         try:
 *             lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *             locked = True
 *         except:
 */
      __pyx_t_8 = ((PyObject *)__pyx_v_self->_runtime);
      __Pyx_INCREF(__pyx_t_8);
      __pyx_t_9 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_8)); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":320
 *         try:
 *             lock_runtime(self._runtime)
 *             locked = True             # <<<<<<<<<<<<<<
 *         except:
 *             locked = False
 */
      __pyx_v_locked = 1;
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L11_try_end;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":321
 *             lock_runtime(self._runtime)
 *             locked = True
 *         except:             # <<<<<<<<<<<<<<
 *             locked = False
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU._LuaObject.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_10, &__pyx_t_11) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GOTREF(__pyx_t_11);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":322
 *             locked = True
 *         except:
 *             locked = False             # <<<<<<<<<<<<<<
 * 
 *         #remove from cache
 */
      __pyx_v_locked = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L5_exception_handled;
    }
    __pyx_L6_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L5_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L11_try_end:;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":325
 * 
 *         #remove from cache
 *         lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)             # <<<<<<<<<<<<<<
 *         self.push_lua_object()
 *         lua.lua_pushnil(L)
 */
  lua_getfield(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_k____LUPA_CACHE__);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":326
 *         #remove from cache
 *         lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)
 *         self.push_lua_object()             # <<<<<<<<<<<<<<
 *         lua.lua_pushnil(L)
 *         lua.lua_settable(L, -3)
 */
  __pyx_t_9 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":327
 *         lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)
 *         self.push_lua_object()
 *         lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *         lua.lua_settable(L, -3)
 *         lua.lua_pop(L, 1)
 */
  lua_pushnil(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":328
 *         self.push_lua_object()
 *         lua.lua_pushnil(L)
 *         lua.lua_settable(L, -3)             # <<<<<<<<<<<<<<
 *         lua.lua_pop(L, 1)
 * 
 */
  lua_settable(__pyx_v_L, -3);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":329
 *         lua.lua_pushnil(L)
 *         lua.lua_settable(L, -3)
 *         lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 * 
 *         #remove ref
 */
  lua_pop(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":332
 * 
 *         #remove ref
 *         lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._ref)             # <<<<<<<<<<<<<<
 *         if locked:
 *             unlock_runtime(self._runtime)
 */
  luaL_unref(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_ref);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":333
 *         #remove ref
 *         lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._ref)
 *         if locked:             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 *         # undo additional INCREF at instantiation time
 */
  if (__pyx_v_locked) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":334
 *         lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._ref)
 *         if locked:
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         # undo additional INCREF at instantiation time
 *         cpython.ref.Py_DECREF(self._runtime)
 */
    __pyx_t_11 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_11);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_11));
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    goto __pyx_L14;
  }
  __pyx_L14:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":336
 *             unlock_runtime(self._runtime)
 *         # undo additional INCREF at instantiation time
 *         cpython.ref.Py_DECREF(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     cdef inline int push_lua_object(self) except -1:
 */
  __pyx_t_11 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_11);
  Py_DECREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("AKU._LuaObject.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":338
 *         cpython.ref.Py_DECREF(self._runtime)
 * 
 *     cdef inline int push_lua_object(self) except -1:             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._ref)
 */

static CYTHON_INLINE int __pyx_f_3AKU_10_LuaObject_push_lua_object(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  lua_State *__pyx_v_L;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_lua_object", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":339
 * 
 *     cdef inline int push_lua_object(self) except -1:
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._ref)
 *         if lua.lua_isnil(L, -1):
 */
  __pyx_t_1 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":340
 *     cdef inline int push_lua_object(self) except -1:
 *         cdef lua_State* L = self._state
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._ref)             # <<<<<<<<<<<<<<
 *         if lua.lua_isnil(L, -1):
 *             lua.lua_pop(L, 1)
 */
  lua_rawgeti(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_ref);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":341
 *         cdef lua_State* L = self._state
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._ref)
 *         if lua.lua_isnil(L, -1):             # <<<<<<<<<<<<<<
 *             lua.lua_pop(L, 1)
 *             raise LuaError("lost reference")
 */
  __pyx_t_2 = lua_isnil(__pyx_v_L, -1);
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":342
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._ref)
 *         if lua.lua_isnil(L, -1):
 *             lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *             raise LuaError("lost reference")
 * 
 */
    lua_pop(__pyx_v_L, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":343
 *         if lua.lua_isnil(L, -1):
 *             lua.lua_pop(L, 1)
 *             raise LuaError("lost reference")             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, *args):
 */
    __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_20), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("AKU._LuaObject.push_lua_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_5__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_5__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__call__", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_4__call__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self), __pyx_v_args);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":345
 *             raise LuaError("lost reference")
 * 
 *     def __call__(self, *args):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_4__call__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_args) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":346
 * 
 *     def __call__(self, *args):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":347
 *     def __call__(self, *args):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":348
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             lua.lua_settop(L, 0)
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":349
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             lua.lua_settop(L, 0)
 *             self.push_lua_object()
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":350
 *         lock_runtime(self._runtime)
 *         try:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             return call_lua(self._runtime, L, args)
 */
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":351
 *         try:
 *             lua.lua_settop(L, 0)
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             return call_lua(self._runtime, L, args)
 *         finally:
 */
    __pyx_t_4 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":352
 *             lua.lua_settop(L, 0)
 *             self.push_lua_object()
 *             return call_lua(self._runtime, L, args)             # <<<<<<<<<<<<<<
 *         finally:
 *             unlock_runtime(self._runtime)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_5 = __pyx_f_3AKU_call_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3), __pyx_v_L, __pyx_v_args); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":354
 *             return call_lua(self._runtime, L, args)
 *         finally:
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("AKU._LuaObject.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_ssize_t __pyx_pw_3AKU_10_LuaObject_7__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_3AKU_10_LuaObject_7__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_6__len__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":356
 *             unlock_runtime(self._runtime)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static Py_ssize_t __pyx_pf_3AKU_10_LuaObject_6__len__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  lua_State *__pyx_v_L;
  size_t __pyx_v_size;
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":357
 * 
 *     def __len__(self):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":358
 *     def __len__(self):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         size = 0
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":359
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         size = 0
 *         try:
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":360
 *         cdef lua_State* L = self._state
 *         lock_runtime(self._runtime)
 *         size = 0             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_v_size = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":361
 *         lock_runtime(self._runtime)
 *         size = 0
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             size = lua.lua_objlen(L, -1)
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":362
 *         size = 0
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             size = lua.lua_objlen(L, -1)
 *         finally:
 */
    __pyx_t_4 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":363
 *         try:
 *             self.push_lua_object()
 *             size = lua.lua_objlen(L, -1)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
    __pyx_v_size = lua_objlen(__pyx_v_L, -1);
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":365
 *             size = lua.lua_objlen(L, -1)
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 *         return size
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":366
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         return size
 * 
 */
    __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3));
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    switch (__pyx_why) {
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":367
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)
 *         return size             # <<<<<<<<<<<<<<
 * 
 *     def __nonzero__(self):
 */
  __pyx_r = __pyx_v_size;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU._LuaObject.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_10_LuaObject_9__nonzero__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3AKU_10_LuaObject_9__nonzero__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__nonzero__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_8__nonzero__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":369
 *         return size
 * 
 *     def __nonzero__(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

static int __pyx_pf_3AKU_10_LuaObject_8__nonzero__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__nonzero__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":370
 * 
 *     def __nonzero__(self):
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_r = 1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_11__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_11__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_10__iter__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":372
 *         return True
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         raise TypeError("iteration is only supported for tables")
 * 
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_10__iter__(CYTHON_UNUSED struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":373
 * 
 *     def __iter__(self):
 *         raise TypeError("iteration is only supported for tables")             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_22), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU._LuaObject.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_12__repr__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":375
 *         raise TypeError("iteration is only supported for tables")
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_12__repr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_v_encoding = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":376
 * 
 *     def __repr__(self):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":377
 *     def __repr__(self):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 *         lock_runtime(self._runtime)
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":378
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime->_encoding) != Py_None) && (PyBytes_GET_SIZE(((PyObject *)__pyx_v_self->_runtime->_encoding)) != 0);
  if (__pyx_t_1) {
    if (unlikely(((PyObject *)__pyx_v_self->_runtime->_encoding) == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "decode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = ((PyObject *)__Pyx_decode_bytes(((PyObject *)__pyx_v_self->_runtime->_encoding), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_3 = ((PyObject *)__pyx_t_4);
    __pyx_t_4 = 0;
  } else {
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
    __pyx_t_3 = ((PyObject *)__pyx_kp_s_6);
  }
  __pyx_v_encoding = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":379
 *         cdef lua_State* L = self._state
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":380
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             return lua_object_repr(L, encoding)
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":381
 *         lock_runtime(self._runtime)
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             return lua_object_repr(L, encoding)
 *         finally:
 */
    __pyx_t_5 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":382
 *         try:
 *             self.push_lua_object()
 *             return lua_object_repr(L, encoding)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_pop(L, 1)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __pyx_f_3AKU_lua_object_repr(__pyx_v_L, __pyx_v_encoding); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 382; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":384
 *             return lua_object_repr(L, encoding)
 *         finally:
 *             lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_pop(__pyx_v_L, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":385
 *         finally:
 *             lua.lua_pop(L, 1)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
    __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3));
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("AKU._LuaObject.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoding);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_15__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_15__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_14__str__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":387
 *             unlock_runtime(self._runtime)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_14__str__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_v_py_string = 0;
  const char* __pyx_v_s;
  size_t __pyx_v_size;
  PyObject *__pyx_v_encoding = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":388
 * 
 *     def __str__(self):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         cdef unicode py_string = None
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":389
 *     def __str__(self):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         cdef unicode py_string = None
 *         cdef const_char_ptr s
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":390
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         cdef unicode py_string = None             # <<<<<<<<<<<<<<
 *         cdef const_char_ptr s
 *         cdef size_t size
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_py_string = ((PyObject*)Py_None);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":393
 *         cdef const_char_ptr s
 *         cdef size_t size
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime->_encoding) != Py_None) && (PyBytes_GET_SIZE(((PyObject *)__pyx_v_self->_runtime->_encoding)) != 0);
  if (__pyx_t_1) {
    if (unlikely(((PyObject *)__pyx_v_self->_runtime->_encoding) == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "decode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = ((PyObject *)__Pyx_decode_bytes(((PyObject *)__pyx_v_self->_runtime->_encoding), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_3 = ((PyObject *)__pyx_t_4);
    __pyx_t_4 = 0;
  } else {
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
    __pyx_t_3 = ((PyObject *)__pyx_kp_s_6);
  }
  __pyx_v_encoding = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":394
 *         cdef size_t size
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":395
 *         encoding = self._runtime._encoding.decode('ASCII') if self._runtime._encoding else 'UTF-8'
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             # lookup and call "__tostring" metatable method manually to catch any errors
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":396
 *         lock_runtime(self._runtime)
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             # lookup and call "__tostring" metatable method manually to catch any errors
 *             if lua.lua_getmetatable(L, -1):
 */
    __pyx_t_5 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":398
 *             self.push_lua_object()
 *             # lookup and call "__tostring" metatable method manually to catch any errors
 *             if lua.lua_getmetatable(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pushlstring(L, "__tostring", 10)
 *                 lua.lua_rawget(L, -2)
 */
    __pyx_t_1 = lua_getmetatable(__pyx_v_L, -1);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":399
 *             # lookup and call "__tostring" metatable method manually to catch any errors
 *             if lua.lua_getmetatable(L, -1):
 *                 lua.lua_pushlstring(L, "__tostring", 10)             # <<<<<<<<<<<<<<
 *                 lua.lua_rawget(L, -2)
 *                 if not lua.lua_isnil(L, -1) and lua.lua_pcall(L, 1, 1, 0) == 0:
 */
      lua_pushlstring(__pyx_v_L, __pyx_k____tostring, 10);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":400
 *             if lua.lua_getmetatable(L, -1):
 *                 lua.lua_pushlstring(L, "__tostring", 10)
 *                 lua.lua_rawget(L, -2)             # <<<<<<<<<<<<<<
 *                 if not lua.lua_isnil(L, -1) and lua.lua_pcall(L, 1, 1, 0) == 0:
 *                     s = lua.lua_tolstring(L, -1, &size)
 */
      lua_rawget(__pyx_v_L, -2);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":401
 *                 lua.lua_pushlstring(L, "__tostring", 10)
 *                 lua.lua_rawget(L, -2)
 *                 if not lua.lua_isnil(L, -1) and lua.lua_pcall(L, 1, 1, 0) == 0:             # <<<<<<<<<<<<<<
 *                     s = lua.lua_tolstring(L, -1, &size)
 *                     if s:
 */
      __pyx_t_1 = (!lua_isnil(__pyx_v_L, -1));
      if (__pyx_t_1) {
        __pyx_t_6 = (lua_pcall(__pyx_v_L, 1, 1, 0) == 0);
        __pyx_t_7 = __pyx_t_6;
      } else {
        __pyx_t_7 = __pyx_t_1;
      }
      if (__pyx_t_7) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":402
 *                 lua.lua_rawget(L, -2)
 *                 if not lua.lua_isnil(L, -1) and lua.lua_pcall(L, 1, 1, 0) == 0:
 *                     s = lua.lua_tolstring(L, -1, &size)             # <<<<<<<<<<<<<<
 *                     if s:
 *                         try:
 */
        __pyx_v_s = lua_tolstring(__pyx_v_L, -1, (&__pyx_v_size));

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":403
 *                 if not lua.lua_isnil(L, -1) and lua.lua_pcall(L, 1, 1, 0) == 0:
 *                     s = lua.lua_tolstring(L, -1, &size)
 *                     if s:             # <<<<<<<<<<<<<<
 *                         try:
 *                             py_string = s[:size].decode(encoding)
 */
        __pyx_t_7 = (__pyx_v_s != 0);
        if (__pyx_t_7) {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":404
 *                     s = lua.lua_tolstring(L, -1, &size)
 *                     if s:
 *                         try:             # <<<<<<<<<<<<<<
 *                             py_string = s[:size].decode(encoding)
 *                         except UnicodeDecodeError:
 */
          {
            __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
            __Pyx_XGOTREF(__pyx_t_8);
            __Pyx_XGOTREF(__pyx_t_9);
            __Pyx_XGOTREF(__pyx_t_10);
            /*try:*/ {

              /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":405
 *                     if s:
 *                         try:
 *                             py_string = s[:size].decode(encoding)             # <<<<<<<<<<<<<<
 *                         except UnicodeDecodeError:
 *                             # safe 'decode'
 */
              __pyx_t_3 = PyBytes_FromStringAndSize(((const char*)__pyx_v_s) + 0, __pyx_v_size - 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
              __Pyx_GOTREF(((PyObject *)__pyx_t_3));
              __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_t_3), __pyx_n_s__decode); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
              __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_INCREF(__pyx_v_encoding);
              PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_encoding);
              __Pyx_GIVEREF(__pyx_v_encoding);
              __pyx_t_11 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
              __Pyx_GOTREF(__pyx_t_11);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
              if (!(likely(PyUnicode_CheckExact(__pyx_t_11))||((__pyx_t_11) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected unicode, got %.200s", Py_TYPE(__pyx_t_11)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
              __Pyx_DECREF(((PyObject *)__pyx_v_py_string));
              __pyx_v_py_string = ((PyObject*)__pyx_t_11);
              __pyx_t_11 = 0;
            }
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
            __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
            goto __pyx_L16_try_end;
            __pyx_L9_error:;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;

            /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":406
 *                         try:
 *                             py_string = s[:size].decode(encoding)
 *                         except UnicodeDecodeError:             # <<<<<<<<<<<<<<
 *                             # safe 'decode'
 *                             py_string = s[:size].decode('ISO-8859-1')
 */
            __pyx_t_5 = PyErr_ExceptionMatches(__pyx_builtin_UnicodeDecodeError);
            if (__pyx_t_5) {
              __Pyx_AddTraceback("AKU._LuaObject.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_11, &__pyx_t_3, &__pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L11_except_error;}
              __Pyx_GOTREF(__pyx_t_11);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_4);

              /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":408
 *                         except UnicodeDecodeError:
 *                             # safe 'decode'
 *                             py_string = s[:size].decode('ISO-8859-1')             # <<<<<<<<<<<<<<
 *             if py_string is None:
 *                 lua.lua_settop(L, 1)
 */
              __pyx_t_12 = ((PyObject *)__Pyx_decode_c_string(__pyx_v_s, 0, __pyx_v_size, NULL, NULL, PyUnicode_DecodeLatin1)); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L11_except_error;}
              __Pyx_GOTREF(((PyObject *)__pyx_t_12));
              if (!(likely(PyUnicode_CheckExact(((PyObject *)__pyx_t_12)))||(PyErr_Format(PyExc_TypeError, "Expected unicode, got %.200s", Py_TYPE(((PyObject *)__pyx_t_12))->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L11_except_error;}
              __Pyx_DECREF(((PyObject *)__pyx_v_py_string));
              __pyx_v_py_string = ((PyObject*)__pyx_t_12);
              __pyx_t_12 = 0;
              __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L10_exception_handled;
            }
            __pyx_L11_except_error:;
            __Pyx_XGIVEREF(__pyx_t_8);
            __Pyx_XGIVEREF(__pyx_t_9);
            __Pyx_XGIVEREF(__pyx_t_10);
            __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
            goto __pyx_L4;
            __pyx_L10_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_8);
            __Pyx_XGIVEREF(__pyx_t_9);
            __Pyx_XGIVEREF(__pyx_t_10);
            __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
            __pyx_L16_try_end:;
          }
          goto __pyx_L8;
        }
        __pyx_L8:;
        goto __pyx_L7;
      }
      __pyx_L7:;
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":409
 *                             # safe 'decode'
 *                             py_string = s[:size].decode('ISO-8859-1')
 *             if py_string is None:             # <<<<<<<<<<<<<<
 *                 lua.lua_settop(L, 1)
 *                 py_string = lua_object_repr(L, encoding)
 */
    __pyx_t_7 = (__pyx_v_py_string == ((PyObject*)Py_None));
    if (__pyx_t_7) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":410
 *                             py_string = s[:size].decode('ISO-8859-1')
 *             if py_string is None:
 *                 lua.lua_settop(L, 1)             # <<<<<<<<<<<<<<
 *                 py_string = lua_object_repr(L, encoding)
 *         finally:
 */
      lua_settop(__pyx_v_L, 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":411
 *             if py_string is None:
 *                 lua.lua_settop(L, 1)
 *                 py_string = lua_object_repr(L, encoding)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
      __pyx_t_4 = __pyx_f_3AKU_lua_object_repr(__pyx_v_L, __pyx_v_encoding); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_4);
      if (!(likely(PyUnicode_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected unicode, got %.200s", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_DECREF(((PyObject *)__pyx_v_py_string));
      __pyx_v_py_string = ((PyObject*)__pyx_t_4);
      __pyx_t_4 = 0;
      goto __pyx_L19;
    }
    __pyx_L19:;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":413
 *                 py_string = lua_object_repr(L, encoding)
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 *         return py_string
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":414
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         return py_string
 * 
 */
    __pyx_t_4 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_4);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_4));
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    switch (__pyx_why) {
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":415
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)
 *         return py_string             # <<<<<<<<<<<<<<
 * 
 *     def __getattr__(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_string));
  __pyx_r = ((PyObject *)__pyx_v_py_string);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("AKU._LuaObject.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_py_string);
  __Pyx_XDECREF(__pyx_v_encoding);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_17__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_17__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getattr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_16__getattr__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self), ((PyObject *)__pyx_v_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":417
 *         return py_string
 * 
 *     def __getattr__(self, name):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_16__getattr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_name) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  char *__pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getattr__", 0);
  __Pyx_INCREF(__pyx_v_name);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":418
 * 
 *     def __getattr__(self, name):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":419
 *     def __getattr__(self, name):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":420
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):             # <<<<<<<<<<<<<<
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 return object.__getattr__(self, name)
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_name); 
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":421
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):             # <<<<<<<<<<<<<<
 *                 return object.__getattr__(self, name)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 */
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "startswith");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyUnicode_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_u____), 0, PY_SSIZE_T_MAX, -1); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_1) {
      if (unlikely(__pyx_v_name == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "endswith");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_3 = __Pyx_PyUnicode_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_u____), 0, PY_SSIZE_T_MAX, 1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = __pyx_t_3;
    } else {
      __pyx_t_4 = __pyx_t_1;
    }
    if (__pyx_t_4) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":422
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 return object.__getattr__(self, name)             # <<<<<<<<<<<<<<
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____getattr__); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(((PyObject *)__pyx_v_self));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_self));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
      __Pyx_INCREF(__pyx_v_name);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_name);
      __Pyx_GIVEREF(__pyx_v_name);
      __pyx_t_7 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      goto __pyx_L0;
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":423
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 return object.__getattr__(self, name)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)             # <<<<<<<<<<<<<<
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             return object.__getattr__(self, name)
 */
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_8 = PyBytes_AsString(((PyObject *)__pyx_v_self->_runtime->_source_encoding)); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyObject *)PyUnicode_AsEncodedString(((PyObject*)__pyx_v_name), __pyx_t_8, NULL)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(__pyx_v_name);
    __pyx_v_name = ((PyObject *)__pyx_t_7);
    __pyx_t_7 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":424
 *                 return object.__getattr__(self, name)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):             # <<<<<<<<<<<<<<
 *             return object.__getattr__(self, name)
 *         lock_runtime(self._runtime)
 */
  __pyx_t_4 = PyBytes_Check(__pyx_v_name); 
  if (__pyx_t_4) {
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "startswith");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyBytes_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_b____), 0, PY_SSIZE_T_MAX, -1); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_1) {
      if (unlikely(__pyx_v_name == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "endswith");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_3 = __Pyx_PyBytes_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_b____), 0, PY_SSIZE_T_MAX, 1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = __pyx_t_3;
    } else {
      __pyx_t_9 = __pyx_t_1;
    }
    __pyx_t_1 = __pyx_t_9;
  } else {
    __pyx_t_1 = __pyx_t_4;
  }
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":425
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             return object.__getattr__(self, name)             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_7 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____getattr__); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_v_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_name);
    __Pyx_GIVEREF(__pyx_v_name);
    __pyx_t_5 = PyObject_Call(__pyx_t_7, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":426
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             return object.__getattr__(self, name)
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_10 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5)); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":427
 *             return object.__getattr__(self, name)
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             if lua.lua_isfunction(L, -1):
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":428
 *         lock_runtime(self._runtime)
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             if lua.lua_isfunction(L, -1):
 *                 lua.lua_pop(L, 1)
 */
    __pyx_t_10 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L6;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":429
 *         try:
 *             self.push_lua_object()
 *             if lua.lua_isfunction(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L, 1)
 *                 raise TypeError("item/attribute access not supported on functions")
 */
    __pyx_t_1 = lua_isfunction(__pyx_v_L, -1);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":430
 *             self.push_lua_object()
 *             if lua.lua_isfunction(L, -1):
 *                 lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                 raise TypeError("item/attribute access not supported on functions")
 *             py_to_lua(self._runtime, L, name, 1)
 */
      lua_pop(__pyx_v_L, 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":431
 *             if lua.lua_isfunction(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise TypeError("item/attribute access not supported on functions")             # <<<<<<<<<<<<<<
 *             py_to_lua(self._runtime, L, name, 1)
 *             lua.lua_gettable(L, -2)
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_24), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L6;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L6;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":432
 *                 lua.lua_pop(L, 1)
 *                 raise TypeError("item/attribute access not supported on functions")
 *             py_to_lua(self._runtime, L, name, 1)             # <<<<<<<<<<<<<<
 *             lua.lua_gettable(L, -2)
 *             return py_from_lua(self._runtime, L, -1)
 */
    __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_10 = __pyx_f_3AKU_py_to_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, __pyx_v_name, 1); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L6;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":433
 *                 raise TypeError("item/attribute access not supported on functions")
 *             py_to_lua(self._runtime, L, name, 1)
 *             lua.lua_gettable(L, -2)             # <<<<<<<<<<<<<<
 *             return py_from_lua(self._runtime, L, -1)
 *         finally:
 */
    lua_gettable(__pyx_v_L, -2);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":434
 *             py_to_lua(self._runtime, L, name, 1)
 *             lua.lua_gettable(L, -2)
 *             return py_from_lua(self._runtime, L, -1)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_6 = __pyx_f_3AKU_py_from_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L6;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L5;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":436
 *             return py_from_lua(self._runtime, L, -1)
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L7;
    __pyx_L5: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L7;
    __pyx_L6: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L7;
    }
    __pyx_L7:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":437
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     def __setattr__(self, name, value):
 */
    __pyx_t_6 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_6);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_6));
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU._LuaObject.__getattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_10_LuaObject_19__setattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3AKU_10_LuaObject_19__setattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setattr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_18__setattr__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self), ((PyObject *)__pyx_v_name), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":439
 *             unlock_runtime(self._runtime)
 * 
 *     def __setattr__(self, name, value):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 */

static int __pyx_pf_3AKU_10_LuaObject_18__setattr__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_value) {
  lua_State *__pyx_v_L;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  char *__pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setattr__", 0);
  __Pyx_INCREF(__pyx_v_name);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":440
 * 
 *     def __setattr__(self, name, value):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":441
 *     def __setattr__(self, name, value):
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 */
  __pyx_t_2 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":442
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):             # <<<<<<<<<<<<<<
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 object.__setattr__(self, name, value)
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_name); 
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":443
 *         cdef lua_State* L = self._state
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):             # <<<<<<<<<<<<<<
 *                 object.__setattr__(self, name, value)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 */
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "startswith");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyUnicode_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_u____), 0, PY_SSIZE_T_MAX, -1); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_1) {
      if (unlikely(__pyx_v_name == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "endswith");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_3 = __Pyx_PyUnicode_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_u____), 0, PY_SSIZE_T_MAX, 1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = __pyx_t_3;
    } else {
      __pyx_t_4 = __pyx_t_1;
    }
    if (__pyx_t_4) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":444
 *         if isinstance(name, unicode):
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 object.__setattr__(self, name, value)             # <<<<<<<<<<<<<<
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 */
      __pyx_t_5 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____setattr__); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(((PyObject *)__pyx_v_self));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_self));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
      __Pyx_INCREF(__pyx_v_name);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_name);
      __Pyx_GIVEREF(__pyx_v_name);
      __Pyx_INCREF(__pyx_v_value);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      __pyx_t_7 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":445
 *             if (<unicode>name).startswith(u'__') and (<unicode>name).endswith(u'__'):
 *                 object.__setattr__(self, name, value)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)             # <<<<<<<<<<<<<<
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             object.__setattr__(self, name, value)
 */
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_8 = PyBytes_AsString(((PyObject *)__pyx_v_self->_runtime->_source_encoding)); if (unlikely((!__pyx_t_8) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyObject *)PyUnicode_AsEncodedString(((PyObject*)__pyx_v_name), __pyx_t_8, NULL)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(__pyx_v_name);
    __pyx_v_name = ((PyObject *)__pyx_t_7);
    __pyx_t_7 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":446
 *                 object.__setattr__(self, name, value)
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):             # <<<<<<<<<<<<<<
 *             object.__setattr__(self, name, value)
 *         lock_runtime(self._runtime)
 */
  __pyx_t_4 = PyBytes_Check(__pyx_v_name); 
  if (__pyx_t_4) {
    if (unlikely(__pyx_v_name == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "startswith");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyBytes_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_b____), 0, PY_SSIZE_T_MAX, -1); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_1) {
      if (unlikely(__pyx_v_name == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "endswith");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_3 = __Pyx_PyBytes_Tailmatch(((PyObject *)((PyObject*)__pyx_v_name)), ((PyObject *)__pyx_n_b____), 0, PY_SSIZE_T_MAX, 1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = __pyx_t_3;
    } else {
      __pyx_t_9 = __pyx_t_1;
    }
    __pyx_t_1 = __pyx_t_9;
  } else {
    __pyx_t_1 = __pyx_t_4;
  }
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":447
 *             name = (<unicode>name).encode(self._runtime._source_encoding)
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             object.__setattr__(self, name, value)             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
    __pyx_t_7 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____setattr__); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_v_name);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_name);
    __Pyx_GIVEREF(__pyx_v_name);
    __Pyx_INCREF(__pyx_v_value);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_value);
    __Pyx_GIVEREF(__pyx_v_value);
    __pyx_t_5 = PyObject_Call(__pyx_t_7, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":448
 *         elif isinstance(name, bytes) and (<bytes>name).startswith(b'__') and (<bytes>name).endswith(b'__'):
 *             object.__setattr__(self, name, value)
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_10 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5)); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":449
 *             object.__setattr__(self, name, value)
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             if not lua.lua_istable(L, -1):
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":450
 *         lock_runtime(self._runtime)
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             if not lua.lua_istable(L, -1):
 *                 lua.lua_pop(L, -1)
 */
    __pyx_t_10 = __pyx_f_3AKU_10_LuaObject_push_lua_object(__pyx_v_self); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L6;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":451
 *         try:
 *             self.push_lua_object()
 *             if not lua.lua_istable(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L, -1)
 *                 raise TypeError("Lua object is not a table")
 */
    __pyx_t_1 = (!lua_istable(__pyx_v_L, -1));
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":452
 *             self.push_lua_object()
 *             if not lua.lua_istable(L, -1):
 *                 lua.lua_pop(L, -1)             # <<<<<<<<<<<<<<
 *                 raise TypeError("Lua object is not a table")
 *             try:
 */
      lua_pop(__pyx_v_L, -1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":453
 *             if not lua.lua_istable(L, -1):
 *                 lua.lua_pop(L, -1)
 *                 raise TypeError("Lua object is not a table")             # <<<<<<<<<<<<<<
 *             try:
 *                 py_to_lua(self._runtime, L, name, 1)
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L6;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L6;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":454
 *                 lua.lua_pop(L, -1)
 *                 raise TypeError("Lua object is not a table")
 *             try:             # <<<<<<<<<<<<<<
 *                 py_to_lua(self._runtime, L, name, 1)
 *                 py_to_lua(self._runtime, L, value, 1)
 */
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":455
 *                 raise TypeError("Lua object is not a table")
 *             try:
 *                 py_to_lua(self._runtime, L, name, 1)             # <<<<<<<<<<<<<<
 *                 py_to_lua(self._runtime, L, value, 1)
 *                 lua.lua_settable(L, -3)
 */
      __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_f_3AKU_py_to_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, __pyx_v_name, 1); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L10;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":456
 *             try:
 *                 py_to_lua(self._runtime, L, name, 1)
 *                 py_to_lua(self._runtime, L, value, 1)             # <<<<<<<<<<<<<<
 *                 lua.lua_settable(L, -3)
 *             finally:
 */
      __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_f_3AKU_py_to_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, __pyx_v_value, 1); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L10;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":457
 *                 py_to_lua(self._runtime, L, name, 1)
 *                 py_to_lua(self._runtime, L, value, 1)
 *                 lua.lua_settable(L, -3)             # <<<<<<<<<<<<<<
 *             finally:
 *                 lua.lua_settop(L, 0)
 */
      lua_settable(__pyx_v_L, -3);
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":459
 *                 lua.lua_settable(L, -3)
 *             finally:
 *                 lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *         finally:
 *             unlock_runtime(self._runtime)
 */
    /*finally:*/ {
      int __pyx_why;
      PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
      int __pyx_exc_lineno;
      __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
      __pyx_why = 0; goto __pyx_L11;
      __pyx_L10: {
        __pyx_why = 4;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
        __pyx_exc_lineno = __pyx_lineno;
        goto __pyx_L11;
      }
      __pyx_L11:;
      lua_settop(__pyx_v_L, 0);
      switch (__pyx_why) {
        case 4: {
          __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
          __pyx_lineno = __pyx_exc_lineno;
          __pyx_exc_type = 0;
          __pyx_exc_value = 0;
          __pyx_exc_tb = 0;
          goto __pyx_L6;
        }
      }
    }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":461
 *                 lua.lua_settop(L, 0)
 *         finally:
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, index_or_name):
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L7;
    __pyx_L6: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L7;
    }
    __pyx_L7:;
    __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    switch (__pyx_why) {
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU._LuaObject.__setattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaObject_21__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index_or_name); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaObject_21__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index_or_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_20__getitem__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self), ((PyObject *)__pyx_v_index_or_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":463
 *             unlock_runtime(self._runtime)
 * 
 *     def __getitem__(self, index_or_name):             # <<<<<<<<<<<<<<
 *         return self.__getattr__(index_or_name)
 * 
 */

static PyObject *__pyx_pf_3AKU_10_LuaObject_20__getitem__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_index_or_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":464
 * 
 *     def __getitem__(self, index_or_name):
 *         return self.__getattr__(index_or_name)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, index_or_name, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____getattr__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_index_or_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_index_or_name);
  __Pyx_GIVEREF(__pyx_v_index_or_name);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU._LuaObject.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_10_LuaObject_23__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index_or_name, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3AKU_10_LuaObject_23__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index_or_name, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaObject_22__setitem__(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self), ((PyObject *)__pyx_v_index_or_name), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":466
 *         return self.__getattr__(index_or_name)
 * 
 *     def __setitem__(self, index_or_name, value):             # <<<<<<<<<<<<<<
 *         self.__setattr__(index_or_name, value)
 * 
 */

static int __pyx_pf_3AKU_10_LuaObject_22__setitem__(struct __pyx_obj_3AKU__LuaObject *__pyx_v_self, PyObject *__pyx_v_index_or_name, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":467
 * 
 *     def __setitem__(self, index_or_name, value):
 *         self.__setattr__(index_or_name, value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____setattr__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_index_or_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_index_or_name);
  __Pyx_GIVEREF(__pyx_v_index_or_name);
  __Pyx_INCREF(__pyx_v_value);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU._LuaObject.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":470
 * 
 * 
 * cdef _LuaObject find_cahced_lua_object(lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     #check cache first
 *     if n < 0 :
 */

static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_find_cahced_lua_object(lua_State *__pyx_v_L, int __pyx_v_n) {
  int __pyx_v_lua_type;
  struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj = NULL;
  struct __pyx_obj_3AKU__LuaObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  void *__pyx_t_2;
  __Pyx_RefNannySetupContext("find_cahced_lua_object", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":472
 * cdef _LuaObject find_cahced_lua_object(lua_State* L, int n):
 *     #check cache first
 *     if n < 0 :             # <<<<<<<<<<<<<<
 *         n = lua.lua_gettop(L) + n + 1
 *     lua.lua_getfield( L, lua.LUA_REGISTRYINDEX, LUPACACHE )
 */
  __pyx_t_1 = (__pyx_v_n < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":473
 *     #check cache first
 *     if n < 0 :
 *         n = lua.lua_gettop(L) + n + 1             # <<<<<<<<<<<<<<
 *     lua.lua_getfield( L, lua.LUA_REGISTRYINDEX, LUPACACHE )
 *     lua.lua_pushvalue( L, n )
 */
    __pyx_v_n = ((lua_gettop(__pyx_v_L) + __pyx_v_n) + 1);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":474
 *     if n < 0 :
 *         n = lua.lua_gettop(L) + n + 1
 *     lua.lua_getfield( L, lua.LUA_REGISTRYINDEX, LUPACACHE )             # <<<<<<<<<<<<<<
 *     lua.lua_pushvalue( L, n )
 *     lua.lua_gettable( L, -2 )
 */
  lua_getfield(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_k____LUPA_CACHE__);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":475
 *         n = lua.lua_gettop(L) + n + 1
 *     lua.lua_getfield( L, lua.LUA_REGISTRYINDEX, LUPACACHE )
 *     lua.lua_pushvalue( L, n )             # <<<<<<<<<<<<<<
 *     lua.lua_gettable( L, -2 )
 *     lua_type = lua.lua_type(L, -1)
 */
  lua_pushvalue(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":476
 *     lua.lua_getfield( L, lua.LUA_REGISTRYINDEX, LUPACACHE )
 *     lua.lua_pushvalue( L, n )
 *     lua.lua_gettable( L, -2 )             # <<<<<<<<<<<<<<
 *     lua_type = lua.lua_type(L, -1)
 *     if lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 */
  lua_gettable(__pyx_v_L, -2);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":477
 *     lua.lua_pushvalue( L, n )
 *     lua.lua_gettable( L, -2 )
 *     lua_type = lua.lua_type(L, -1)             # <<<<<<<<<<<<<<
 *     if lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         obj = <_LuaObject> lua.lua_touserdata(L,-1)
 */
  __pyx_v_lua_type = lua_type(__pyx_v_L, -1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":478
 *     lua.lua_gettable( L, -2 )
 *     lua_type = lua.lua_type(L, -1)
 *     if lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):             # <<<<<<<<<<<<<<
 *         obj = <_LuaObject> lua.lua_touserdata(L,-1)
 *         lua.lua_pop( L, 2 )
 */
  switch (__pyx_v_lua_type) {
    case LUA_TUSERDATA:
    case LUA_TLIGHTUSERDATA:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":479
 *     lua_type = lua.lua_type(L, -1)
 *     if lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         obj = <_LuaObject> lua.lua_touserdata(L,-1)             # <<<<<<<<<<<<<<
 *         lua.lua_pop( L, 2 )
 *         return obj
 */
    __pyx_t_2 = lua_touserdata(__pyx_v_L, -1);
    __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_2)));
    __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_2);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":480
 *     if lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         obj = <_LuaObject> lua.lua_touserdata(L,-1)
 *         lua.lua_pop( L, 2 )             # <<<<<<<<<<<<<<
 *         return obj
 *     lua.lua_pop( L, 2 )
 */
    lua_pop(__pyx_v_L, 2);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":481
 *         obj = <_LuaObject> lua.lua_touserdata(L,-1)
 *         lua.lua_pop( L, 2 )
 *         return obj             # <<<<<<<<<<<<<<
 *     lua.lua_pop( L, 2 )
 *     return None
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    break;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":482
 *         lua.lua_pop( L, 2 )
 *         return obj
 *     lua.lua_pop( L, 2 )             # <<<<<<<<<<<<<<
 *     return None
 * 
 */
  lua_pop(__pyx_v_L, 2);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":483
 *         return obj
 *     lua.lua_pop( L, 2 )
 *     return None             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaObject new_lua_object(LuaRuntime runtime, lua_State* L, int n):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(Py_None);
  __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)Py_None);
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":485
 *     return None
 * 
 * cdef _LuaObject new_lua_object(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     cdef _LuaObject obj
 *     obj = find_cahced_lua_object( L, n )
 */

static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_new_lua_object(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj = 0;
  struct __pyx_obj_3AKU__LuaObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_object", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":487
 * cdef _LuaObject new_lua_object(LuaRuntime runtime, lua_State* L, int n):
 *     cdef _LuaObject obj
 *     obj = find_cahced_lua_object( L, n )             # <<<<<<<<<<<<<<
 *     if obj: return obj
 *     #create new luaobject
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_3AKU_find_cahced_lua_object(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":488
 *     cdef _LuaObject obj
 *     obj = find_cahced_lua_object( L, n )
 *     if obj: return obj             # <<<<<<<<<<<<<<
 *     #create new luaobject
 *     obj = _LuaObject.__new__(_LuaObject)
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_obj)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":490
 *     if obj: return obj
 *     #create new luaobject
 *     obj = _LuaObject.__new__(_LuaObject)             # <<<<<<<<<<<<<<
 *     init_lua_object(obj, runtime, L, n)
 *     return obj
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__LuaObject)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_3AKU__LuaObject)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_obj));
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":491
 *     #create new luaobject
 *     obj = _LuaObject.__new__(_LuaObject)
 *     init_lua_object(obj, runtime, L, n)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  __pyx_f_3AKU_init_lua_object(__pyx_v_obj, __pyx_v_runtime, __pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":492
 *     obj = _LuaObject.__new__(_LuaObject)
 *     init_lua_object(obj, runtime, L, n)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * cdef void init_lua_object(_LuaObject obj, LuaRuntime runtime, lua_State* L, int n):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.new_lua_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":494
 *     return obj
 * 
 * cdef void init_lua_object(_LuaObject obj, LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     # additional INCREF to keep runtime from disappearing in GC runs
 *     cpython.ref.Py_INCREF(runtime)
 */

static void __pyx_f_3AKU_init_lua_object(struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj, struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init_lua_object", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":496
 * cdef void init_lua_object(_LuaObject obj, LuaRuntime runtime, lua_State* L, int n):
 *     # additional INCREF to keep runtime from disappearing in GC runs
 *     cpython.ref.Py_INCREF(runtime)             # <<<<<<<<<<<<<<
 *     obj._runtime = runtime
 *     obj._state = L
 */
  Py_INCREF(((PyObject *)__pyx_v_runtime));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":497
 *     # additional INCREF to keep runtime from disappearing in GC runs
 *     cpython.ref.Py_INCREF(runtime)
 *     obj._runtime = runtime             # <<<<<<<<<<<<<<
 *     obj._state = L
 *     lua.lua_pushvalue(L, n)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_runtime));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_runtime));
  __Pyx_GOTREF(__pyx_v_obj->_runtime);
  __Pyx_DECREF(((PyObject *)__pyx_v_obj->_runtime));
  __pyx_v_obj->_runtime = __pyx_v_runtime;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":498
 *     cpython.ref.Py_INCREF(runtime)
 *     obj._runtime = runtime
 *     obj._state = L             # <<<<<<<<<<<<<<
 *     lua.lua_pushvalue(L, n)
 *     #insert into cache
 */
  __pyx_v_obj->_state = __pyx_v_L;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":499
 *     obj._runtime = runtime
 *     obj._state = L
 *     lua.lua_pushvalue(L, n)             # <<<<<<<<<<<<<<
 *     #insert into cache
 *     lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)
 */
  lua_pushvalue(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":501
 *     lua.lua_pushvalue(L, n)
 *     #insert into cache
 *     lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)             # <<<<<<<<<<<<<<
 *     lua.lua_pushvalue(L, -2)
 *     lua.lua_pushlightuserdata(L, < void* >obj)
 */
  lua_getfield(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_k____LUPA_CACHE__);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":502
 *     #insert into cache
 *     lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)
 *     lua.lua_pushvalue(L, -2)             # <<<<<<<<<<<<<<
 *     lua.lua_pushlightuserdata(L, < void* >obj)
 *     lua.lua_settable(L, -3)
 */
  lua_pushvalue(__pyx_v_L, -2);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":503
 *     lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, LUPACACHE)
 *     lua.lua_pushvalue(L, -2)
 *     lua.lua_pushlightuserdata(L, < void* >obj)             # <<<<<<<<<<<<<<
 *     lua.lua_settable(L, -3)
 *     lua.lua_pop( L, 1 ) #pop cache table
 */
  lua_pushlightuserdata(__pyx_v_L, ((void *)__pyx_v_obj));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":504
 *     lua.lua_pushvalue(L, -2)
 *     lua.lua_pushlightuserdata(L, < void* >obj)
 *     lua.lua_settable(L, -3)             # <<<<<<<<<<<<<<
 *     lua.lua_pop( L, 1 ) #pop cache table
 *     #save to registry
 */
  lua_settable(__pyx_v_L, -3);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":505
 *     lua.lua_pushlightuserdata(L, < void* >obj)
 *     lua.lua_settable(L, -3)
 *     lua.lua_pop( L, 1 ) #pop cache table             # <<<<<<<<<<<<<<
 *     #save to registry
 *     obj._ref = lua.luaL_ref(L, lua.LUA_REGISTRYINDEX)
 */
  lua_pop(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":507
 *     lua.lua_pop( L, 1 ) #pop cache table
 *     #save to registry
 *     obj._ref = lua.luaL_ref(L, lua.LUA_REGISTRYINDEX)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_obj->_ref = luaL_ref(__pyx_v_L, LUA_REGISTRYINDEX);

  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":510
 * 
 * 
 * cdef object lua_object_repr(lua_State* L, encoding):             # <<<<<<<<<<<<<<
 *     cdef bytes py_bytes
 *     lua_type = lua.lua_type(L, -1)
 */

static PyObject *__pyx_f_3AKU_lua_object_repr(lua_State *__pyx_v_L, PyObject *__pyx_v_encoding) {
  PyObject *__pyx_v_py_bytes = 0;
  int __pyx_v_lua_type;
  void *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lua_object_repr", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":512
 * cdef object lua_object_repr(lua_State* L, encoding):
 *     cdef bytes py_bytes
 *     lua_type = lua.lua_type(L, -1)             # <<<<<<<<<<<<<<
 *     if lua_type in (lua.LUA_TTABLE, lua.LUA_TFUNCTION):
 *         ptr = <void*>lua.lua_topointer(L, -1)
 */
  __pyx_v_lua_type = lua_type(__pyx_v_L, -1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":517
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         ptr = <void*>lua.lua_touserdata(L, -1)
 *     elif lua_type == lua.LUA_TTHREAD:             # <<<<<<<<<<<<<<
 *         ptr = <void*>lua.lua_tothread(L, -1)
 *     else:
 */
  switch (__pyx_v_lua_type) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":513
 *     cdef bytes py_bytes
 *     lua_type = lua.lua_type(L, -1)
 *     if lua_type in (lua.LUA_TTABLE, lua.LUA_TFUNCTION):             # <<<<<<<<<<<<<<
 *         ptr = <void*>lua.lua_topointer(L, -1)
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 */
    case LUA_TTABLE:
    case LUA_TFUNCTION:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":514
 *     lua_type = lua.lua_type(L, -1)
 *     if lua_type in (lua.LUA_TTABLE, lua.LUA_TFUNCTION):
 *         ptr = <void*>lua.lua_topointer(L, -1)             # <<<<<<<<<<<<<<
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         ptr = <void*>lua.lua_touserdata(L, -1)
 */
    __pyx_v_ptr = ((void *)lua_topointer(__pyx_v_L, -1));
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":515
 *     if lua_type in (lua.LUA_TTABLE, lua.LUA_TFUNCTION):
 *         ptr = <void*>lua.lua_topointer(L, -1)
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):             # <<<<<<<<<<<<<<
 *         ptr = <void*>lua.lua_touserdata(L, -1)
 *     elif lua_type == lua.LUA_TTHREAD:
 */
    case LUA_TUSERDATA:
    case LUA_TLIGHTUSERDATA:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":516
 *         ptr = <void*>lua.lua_topointer(L, -1)
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         ptr = <void*>lua.lua_touserdata(L, -1)             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TTHREAD:
 *         ptr = <void*>lua.lua_tothread(L, -1)
 */
    __pyx_v_ptr = ((void *)lua_touserdata(__pyx_v_L, -1));
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":517
 *     elif lua_type in (lua.LUA_TUSERDATA, lua.LUA_TLIGHTUSERDATA):
 *         ptr = <void*>lua.lua_touserdata(L, -1)
 *     elif lua_type == lua.LUA_TTHREAD:             # <<<<<<<<<<<<<<
 *         ptr = <void*>lua.lua_tothread(L, -1)
 *     else:
 */
    case LUA_TTHREAD:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":518
 *         ptr = <void*>lua.lua_touserdata(L, -1)
 *     elif lua_type == lua.LUA_TTHREAD:
 *         ptr = <void*>lua.lua_tothread(L, -1)             # <<<<<<<<<<<<<<
 *     else:
 *         ptr = NULL
 */
    __pyx_v_ptr = ((void *)lua_tothread(__pyx_v_L, -1));
    break;
    default:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":520
 *         ptr = <void*>lua.lua_tothread(L, -1)
 *     else:
 *         ptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     if ptr:
 */
    __pyx_v_ptr = NULL;
    break;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":522
 *         ptr = NULL
 * 
 *     if ptr:             # <<<<<<<<<<<<<<
 *         py_bytes = cpython.bytes.PyBytes_FromFormat(
 *             "<Lua %s at %p>", lua.lua_typename(L, lua_type), ptr)
 */
  __pyx_t_1 = (__pyx_v_ptr != 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":524
 *     if ptr:
 *         py_bytes = cpython.bytes.PyBytes_FromFormat(
 *             "<Lua %s at %p>", lua.lua_typename(L, lua_type), ptr)             # <<<<<<<<<<<<<<
 *     else:
 *         py_bytes = cpython.bytes.PyBytes_FromFormat(
 */
    __pyx_t_2 = ((PyObject *)PyBytes_FromFormat(__pyx_k_27, lua_typename(__pyx_v_L, __pyx_v_lua_type), __pyx_v_ptr)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_py_bytes = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":527
 *     else:
 *         py_bytes = cpython.bytes.PyBytes_FromFormat(
 *             "<Lua %s>", lua.lua_typename(L, lua_type))             # <<<<<<<<<<<<<<
 *     try:
 *         return py_bytes.decode(encoding)
 */
    __pyx_t_2 = ((PyObject *)PyBytes_FromFormat(__pyx_k_28, lua_typename(__pyx_v_L, __pyx_v_lua_type))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_py_bytes = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":528
 *         py_bytes = cpython.bytes.PyBytes_FromFormat(
 *             "<Lua %s>", lua.lua_typename(L, lua_type))
 *     try:             # <<<<<<<<<<<<<<
 *         return py_bytes.decode(encoding)
 *     except UnicodeDecodeError:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":529
 *             "<Lua %s>", lua.lua_typename(L, lua_type))
 *     try:
 *         return py_bytes.decode(encoding)             # <<<<<<<<<<<<<<
 *     except UnicodeDecodeError:
 *         # safe 'decode'
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_py_bytes), __pyx_n_s__decode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_v_encoding);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_encoding);
      __Pyx_GIVEREF(__pyx_v_encoding);
      __pyx_t_7 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      goto __pyx_L8_try_return;
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L11_try_end;
    __pyx_L8_try_return:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L0;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":530
 *     try:
 *         return py_bytes.decode(encoding)
 *     except UnicodeDecodeError:             # <<<<<<<<<<<<<<
 *         # safe 'decode'
 *         return py_bytes.decode('ISO-8859-1')
 */
    __pyx_t_8 = PyErr_ExceptionMatches(__pyx_builtin_UnicodeDecodeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("AKU.lua_object_repr", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_6, &__pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_2);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":532
 *     except UnicodeDecodeError:
 *         # safe 'decode'
 *         return py_bytes.decode('ISO-8859-1')             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(((PyObject *)__pyx_v_py_bytes) == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "decode");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
      }
      __pyx_t_9 = ((PyObject *)__Pyx_decode_bytes(((PyObject *)__pyx_v_py_bytes), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeLatin1)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_9));
      __pyx_r = ((PyObject *)__pyx_t_9);
      __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_except_return;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L5_exception_handled;
    }
    __pyx_L6_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L7_except_return:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L0;
    __pyx_L5_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    __pyx_L11_try_end:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("AKU.lua_object_repr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_py_bytes);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9_LuaTable_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_9_LuaTable_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9_LuaTable___iter__(((struct __pyx_obj_3AKU__LuaTable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":536
 * 
 * cdef class _LuaTable(_LuaObject):
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return _LuaIter(self, KEYS)
 * 
 */

static PyObject *__pyx_pf_3AKU_9_LuaTable___iter__(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":537
 * cdef class _LuaTable(_LuaObject):
 *     def __iter__(self):
 *         return _LuaIter(self, KEYS)             # <<<<<<<<<<<<<<
 * 
 *     def keys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_e_3AKU_KEYS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU__LuaIter)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaTable.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9_LuaTable_3keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3AKU_9_LuaTable_2keys[] = "Returns an iterator over the keys of a table that this\n        object represents.  Same as iter(obj).\n        ";
static PyObject *__pyx_pw_3AKU_9_LuaTable_3keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keys (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9_LuaTable_2keys(((struct __pyx_obj_3AKU__LuaTable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":539
 *         return _LuaIter(self, KEYS)
 * 
 *     def keys(self):             # <<<<<<<<<<<<<<
 *         """Returns an iterator over the keys of a table that this
 *         object represents.  Same as iter(obj).
 */

static PyObject *__pyx_pf_3AKU_9_LuaTable_2keys(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keys", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":543
 *         object represents.  Same as iter(obj).
 *         """
 *         return _LuaIter(self, KEYS)             # <<<<<<<<<<<<<<
 * 
 *     def values(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_e_3AKU_KEYS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU__LuaIter)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaTable.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9_LuaTable_5values(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3AKU_9_LuaTable_4values[] = "Returns an iterator over the values of a table that this\n        object represents.\n        ";
static PyObject *__pyx_pw_3AKU_9_LuaTable_5values(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("values (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9_LuaTable_4values(((struct __pyx_obj_3AKU__LuaTable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":545
 *         return _LuaIter(self, KEYS)
 * 
 *     def values(self):             # <<<<<<<<<<<<<<
 *         """Returns an iterator over the values of a table that this
 *         object represents.
 */

static PyObject *__pyx_pf_3AKU_9_LuaTable_4values(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("values", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":549
 *         object represents.
 *         """
 *         return _LuaIter(self, VALUES)             # <<<<<<<<<<<<<<
 * 
 *     def items(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_e_3AKU_VALUES); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU__LuaIter)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaTable.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_9_LuaTable_7items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3AKU_9_LuaTable_6items[] = "Returns an iterator over the key-value pairs of a table\n        that this object represents.\n        ";
static PyObject *__pyx_pw_3AKU_9_LuaTable_7items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("items (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_9_LuaTable_6items(((struct __pyx_obj_3AKU__LuaTable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":551
 *         return _LuaIter(self, VALUES)
 * 
 *     def items(self):             # <<<<<<<<<<<<<<
 *         """Returns an iterator over the key-value pairs of a table
 *         that this object represents.
 */

static PyObject *__pyx_pf_3AKU_9_LuaTable_6items(struct __pyx_obj_3AKU__LuaTable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("items", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":555
 *         that this object represents.
 *         """
 *         return _LuaIter(self, ITEMS)             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaTable new_lua_table(LuaRuntime runtime, lua_State* L, int n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_e_3AKU_ITEMS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU__LuaIter)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaTable.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":557
 *         return _LuaIter(self, ITEMS)
 * 
 * cdef _LuaTable new_lua_table(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     cdef _LuaTable obj
 *     obj = <_LuaTable> find_cahced_lua_object( L, n )
 */

static struct __pyx_obj_3AKU__LuaTable *__pyx_f_3AKU_new_lua_table(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_obj_3AKU__LuaTable *__pyx_v_obj = 0;
  struct __pyx_obj_3AKU__LuaTable *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_table", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":559
 * cdef _LuaTable new_lua_table(LuaRuntime runtime, lua_State* L, int n):
 *     cdef _LuaTable obj
 *     obj = <_LuaTable> find_cahced_lua_object( L, n )             # <<<<<<<<<<<<<<
 *     if obj: return obj
 *     #create new
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_3AKU_find_cahced_lua_object(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaTable *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":560
 *     cdef _LuaTable obj
 *     obj = <_LuaTable> find_cahced_lua_object( L, n )
 *     if obj: return obj             # <<<<<<<<<<<<<<
 *     #create new
 *     obj= _LuaTable.__new__(_LuaTable)
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_obj)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":562
 *     if obj: return obj
 *     #create new
 *     obj= _LuaTable.__new__(_LuaTable)             # <<<<<<<<<<<<<<
 *     init_lua_object(obj, runtime, L, n)
 *     return obj
 */
  __pyx_t_2 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__LuaTable)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_3AKU__LuaTable)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_obj));
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaTable *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":563
 *     #create new
 *     obj= _LuaTable.__new__(_LuaTable)
 *     init_lua_object(obj, runtime, L, n)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  __pyx_f_3AKU_init_lua_object(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_obj), __pyx_v_runtime, __pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":564
 *     obj= _LuaTable.__new__(_LuaTable)
 *     init_lua_object(obj, runtime, L, n)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaTable *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.new_lua_table", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_12_LuaFunction_1coroutine(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3AKU_12_LuaFunction_coroutine[] = "Create a Lua coroutine from a Lua function and call it with\n        the passed parameters to start it up.\n        ";
static PyObject *__pyx_pw_3AKU_12_LuaFunction_1coroutine(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coroutine (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "coroutine", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_3AKU_12_LuaFunction_coroutine(((struct __pyx_obj_3AKU__LuaFunction *)__pyx_v_self), __pyx_v_args);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":570
 *     """A Lua function (which may become a coroutine).
 *     """
 *     def coroutine(self, *args):             # <<<<<<<<<<<<<<
 *         """Create a Lua coroutine from a Lua function and call it with
 *         the passed parameters to start it up.
 */

static PyObject *__pyx_pf_3AKU_12_LuaFunction_coroutine(struct __pyx_obj_3AKU__LuaFunction *__pyx_v_self, PyObject *__pyx_v_args) {
  lua_State *__pyx_v_L;
  lua_State *__pyx_v_co;
  struct __pyx_obj_3AKU__LuaThread *__pyx_v_thread = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("coroutine", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":574
 *         the passed parameters to start it up.
 *         """
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         cdef lua_State* co
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->__pyx_base._runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":575
 *         """
 *         assert self._runtime is not None
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         cdef lua_State* co
 *         cdef _LuaThread thread
 */
  __pyx_t_2 = __pyx_v_self->__pyx_base._state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":578
 *         cdef lua_State* co
 *         cdef _LuaThread thread
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             self.push_lua_object()
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->__pyx_base._runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":579
 *         cdef _LuaThread thread
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             self.push_lua_object()
 *             if not lua.lua_isfunction(L, -1) or lua.lua_iscfunction(L, -1):
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":580
 *         lock_runtime(self._runtime)
 *         try:
 *             self.push_lua_object()             # <<<<<<<<<<<<<<
 *             if not lua.lua_isfunction(L, -1) or lua.lua_iscfunction(L, -1):
 *                 raise TypeError("Lua object is not a function")
 */
    __pyx_t_4 = __pyx_f_3AKU_10_LuaObject_push_lua_object(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_self)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":581
 *         try:
 *             self.push_lua_object()
 *             if not lua.lua_isfunction(L, -1) or lua.lua_iscfunction(L, -1):             # <<<<<<<<<<<<<<
 *                 raise TypeError("Lua object is not a function")
 *             # create thread stack and push the function on it
 */
    __pyx_t_1 = (!lua_isfunction(__pyx_v_L, -1));
    if (!__pyx_t_1) {
      __pyx_t_5 = lua_iscfunction(__pyx_v_L, -1);
    } else {
      __pyx_t_5 = __pyx_t_1;
    }
    if (__pyx_t_5) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":582
 *             self.push_lua_object()
 *             if not lua.lua_isfunction(L, -1) or lua.lua_iscfunction(L, -1):
 *                 raise TypeError("Lua object is not a function")             # <<<<<<<<<<<<<<
 *             # create thread stack and push the function on it
 *             co = lua.lua_newthread(L)
 */
      __pyx_t_3 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_30), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L4;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":584
 *                 raise TypeError("Lua object is not a function")
 *             # create thread stack and push the function on it
 *             co = lua.lua_newthread(L)             # <<<<<<<<<<<<<<
 *             lua.lua_pushvalue(L, 1)
 *             lua.lua_xmove(L, co, 1)
 */
    __pyx_v_co = lua_newthread(__pyx_v_L);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":585
 *             # create thread stack and push the function on it
 *             co = lua.lua_newthread(L)
 *             lua.lua_pushvalue(L, 1)             # <<<<<<<<<<<<<<
 *             lua.lua_xmove(L, co, 1)
 *             # create the coroutine object and initialise it
 */
    lua_pushvalue(__pyx_v_L, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":586
 *             co = lua.lua_newthread(L)
 *             lua.lua_pushvalue(L, 1)
 *             lua.lua_xmove(L, co, 1)             # <<<<<<<<<<<<<<
 *             # create the coroutine object and initialise it
 *             assert lua.lua_isthread(L, -1)
 */
    lua_xmove(__pyx_v_L, __pyx_v_co, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":588
 *             lua.lua_xmove(L, co, 1)
 *             # create the coroutine object and initialise it
 *             assert lua.lua_isthread(L, -1)             # <<<<<<<<<<<<<<
 *             thread = new_lua_thread(self._runtime, L, -1)
 *             thread._arguments = args # always a tuple, not None !
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!lua_isthread(__pyx_v_L, -1))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L4;}
    }
    #endif

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":589
 *             # create the coroutine object and initialise it
 *             assert lua.lua_isthread(L, -1)
 *             thread = new_lua_thread(self._runtime, L, -1)             # <<<<<<<<<<<<<<
 *             thread._arguments = args # always a tuple, not None !
 *             return thread
 */
    __pyx_t_3 = ((PyObject *)__pyx_v_self->__pyx_base._runtime);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_6 = ((PyObject *)__pyx_f_3AKU_new_lua_thread(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3), __pyx_v_L, -1)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_thread = ((struct __pyx_obj_3AKU__LuaThread *)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":590
 *             assert lua.lua_isthread(L, -1)
 *             thread = new_lua_thread(self._runtime, L, -1)
 *             thread._arguments = args # always a tuple, not None !             # <<<<<<<<<<<<<<
 *             return thread
 *         finally:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_args));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_args));
    __Pyx_GOTREF(__pyx_v_thread->_arguments);
    __Pyx_DECREF(((PyObject *)__pyx_v_thread->_arguments));
    __pyx_v_thread->_arguments = __pyx_v_args;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":591
 *             thread = new_lua_thread(self._runtime, L, -1)
 *             thread._arguments = args # always a tuple, not None !
 *             return thread             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_thread));
    __pyx_r = ((PyObject *)__pyx_v_thread);
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":593
 *             return thread
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":594
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaFunction new_lua_function(LuaRuntime runtime, lua_State* L, int n):
 */
    __pyx_t_6 = ((PyObject *)__pyx_v_self->__pyx_base._runtime);
    __Pyx_INCREF(__pyx_t_6);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_6));
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("AKU._LuaFunction.coroutine", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_thread);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":596
 *             unlock_runtime(self._runtime)
 * 
 * cdef _LuaFunction new_lua_function(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     cdef _LuaFunction obj
 *     obj = <_LuaFunction> find_cahced_lua_object( L, n )
 */

static struct __pyx_obj_3AKU__LuaFunction *__pyx_f_3AKU_new_lua_function(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_obj_3AKU__LuaFunction *__pyx_v_obj = 0;
  struct __pyx_obj_3AKU__LuaFunction *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_function", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":598
 * cdef _LuaFunction new_lua_function(LuaRuntime runtime, lua_State* L, int n):
 *     cdef _LuaFunction obj
 *     obj = <_LuaFunction> find_cahced_lua_object( L, n )             # <<<<<<<<<<<<<<
 *     if obj: return obj
 *     #create new one
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_3AKU_find_cahced_lua_object(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaFunction *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":599
 *     cdef _LuaFunction obj
 *     obj = <_LuaFunction> find_cahced_lua_object( L, n )
 *     if obj: return obj             # <<<<<<<<<<<<<<
 *     #create new one
 *     obj = _LuaFunction.__new__(_LuaFunction)
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_obj)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":601
 *     if obj: return obj
 *     #create new one
 *     obj = _LuaFunction.__new__(_LuaFunction)             # <<<<<<<<<<<<<<
 *     init_lua_object(obj, runtime, L, n)
 *     return obj
 */
  __pyx_t_2 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__LuaFunction)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_3AKU__LuaFunction)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_obj));
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaFunction *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":602
 *     #create new one
 *     obj = _LuaFunction.__new__(_LuaFunction)
 *     init_lua_object(obj, runtime, L, n)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  __pyx_f_3AKU_init_lua_object(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_obj), __pyx_v_runtime, __pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":603
 *     obj = _LuaFunction.__new__(_LuaFunction)
 *     init_lua_object(obj, runtime, L, n)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaFunction *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.new_lua_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_21_LuaCoroutineFunction_1__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_21_LuaCoroutineFunction_1__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__call__", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_3AKU_21_LuaCoroutineFunction___call__(((struct __pyx_obj_3AKU__LuaCoroutineFunction *)__pyx_v_self), __pyx_v_args);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":609
 *     """A function that returns a new coroutine when called.
 *     """
 *     def __call__(self, *args):             # <<<<<<<<<<<<<<
 *         return self.coroutine(*args)
 * 
 */

static PyObject *__pyx_pf_3AKU_21_LuaCoroutineFunction___call__(struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_v_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":610
 *     """
 *     def __call__(self, *args):
 *         return self.coroutine(*args)             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaCoroutineFunction new_lua_coroutine_function(LuaRuntime runtime, lua_State* L, int n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__coroutine); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_Tuple(((PyObject *)__pyx_v_args)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU._LuaCoroutineFunction.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":612
 *         return self.coroutine(*args)
 * 
 * cdef _LuaCoroutineFunction new_lua_coroutine_function(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     cdef _LuaCoroutineFunction obj
 *     obj = <_LuaCoroutineFunction> find_cahced_lua_object( L, n )
 */

static struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_f_3AKU_new_lua_coroutine_function(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_v_obj = 0;
  struct __pyx_obj_3AKU__LuaCoroutineFunction *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_coroutine_function", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":614
 * cdef _LuaCoroutineFunction new_lua_coroutine_function(LuaRuntime runtime, lua_State* L, int n):
 *     cdef _LuaCoroutineFunction obj
 *     obj = <_LuaCoroutineFunction> find_cahced_lua_object( L, n )             # <<<<<<<<<<<<<<
 *     if obj: return obj
 *     #create new one
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_3AKU_find_cahced_lua_object(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaCoroutineFunction *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":615
 *     cdef _LuaCoroutineFunction obj
 *     obj = <_LuaCoroutineFunction> find_cahced_lua_object( L, n )
 *     if obj: return obj             # <<<<<<<<<<<<<<
 *     #create new one
 *     obj = _LuaCoroutineFunction.__new__(_LuaCoroutineFunction)
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_obj)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":617
 *     if obj: return obj
 *     #create new one
 *     obj = _LuaCoroutineFunction.__new__(_LuaCoroutineFunction)             # <<<<<<<<<<<<<<
 *     init_lua_object(obj, runtime, L, n)
 *     return obj
 */
  __pyx_t_2 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__LuaCoroutineFunction)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_3AKU__LuaCoroutineFunction)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_obj));
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaCoroutineFunction *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":618
 *     #create new one
 *     obj = _LuaCoroutineFunction.__new__(_LuaCoroutineFunction)
 *     init_lua_object(obj, runtime, L, n)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  __pyx_f_3AKU_init_lua_object(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_obj), __pyx_v_runtime, __pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":619
 *     obj = _LuaCoroutineFunction.__new__(_LuaCoroutineFunction)
 *     init_lua_object(obj, runtime, L, n)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaCoroutineFunction *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.new_lua_coroutine_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaThread_1__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaThread_1__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaThread___iter__(((struct __pyx_obj_3AKU__LuaThread *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":627
 *     cdef lua_State* _co_state
 *     cdef tuple _arguments
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

static PyObject *__pyx_pf_3AKU_10_LuaThread___iter__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":628
 *     cdef tuple _arguments
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaThread_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_10_LuaThread_3__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaThread_2__next__(((struct __pyx_obj_3AKU__LuaThread *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":630
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         assert self._runtime is not None
 *         cdef tuple args = self._arguments
 */

static PyObject *__pyx_pf_3AKU_10_LuaThread_2__next__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":631
 * 
 *     def __next__(self):
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef tuple args = self._arguments
 *         if args is not None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->__pyx_base._runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":632
 *     def __next__(self):
 *         assert self._runtime is not None
 *         cdef tuple args = self._arguments             # <<<<<<<<<<<<<<
 *         if args is not None:
 *             self._arguments = None
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_arguments);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_args = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":633
 *         assert self._runtime is not None
 *         cdef tuple args = self._arguments
 *         if args is not None:             # <<<<<<<<<<<<<<
 *             self._arguments = None
 *         return resume_lua_thread(self, args)
 */
  __pyx_t_1 = (__pyx_v_args != ((PyObject*)Py_None));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":634
 *         cdef tuple args = self._arguments
 *         if args is not None:
 *             self._arguments = None             # <<<<<<<<<<<<<<
 *         return resume_lua_thread(self, args)
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_arguments);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_arguments));
    __pyx_v_self->_arguments = ((PyObject*)Py_None);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":635
 *         if args is not None:
 *             self._arguments = None
 *         return resume_lua_thread(self, args)             # <<<<<<<<<<<<<<
 * 
 *     def send(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_3AKU_resume_lua_thread(__pyx_v_self, __pyx_v_args); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaThread.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_10_LuaThread_5send(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_3AKU_10_LuaThread_4send[] = "Send a value into the coroutine.  If the value is a tuple,\n        send the unpacked elements.\n        ";
static PyObject *__pyx_pw_3AKU_10_LuaThread_5send(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("send (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaThread_4send(((struct __pyx_obj_3AKU__LuaThread *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":637
 *         return resume_lua_thread(self, args)
 * 
 *     def send(self, value):             # <<<<<<<<<<<<<<
 *         """Send a value into the coroutine.  If the value is a tuple,
 *         send the unpacked elements.
 */

static PyObject *__pyx_pf_3AKU_10_LuaThread_4send(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("send", 0);
  __Pyx_INCREF(__pyx_v_value);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":641
 *         send the unpacked elements.
 *         """
 *         if value is not None:             # <<<<<<<<<<<<<<
 *             if self._arguments is not None:
 *                 raise TypeError("can't send non-None value to a just-started generator")
 */
  __pyx_t_1 = (__pyx_v_value != Py_None);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":642
 *         """
 *         if value is not None:
 *             if self._arguments is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("can't send non-None value to a just-started generator")
 *             if not isinstance(value, tuple):
 */
    __pyx_t_1 = (__pyx_v_self->_arguments != ((PyObject*)Py_None));
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":643
 *         if value is not None:
 *             if self._arguments is not None:
 *                 raise TypeError("can't send non-None value to a just-started generator")             # <<<<<<<<<<<<<<
 *             if not isinstance(value, tuple):
 *                 value = (value,)
 */
      __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_32), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":644
 *             if self._arguments is not None:
 *                 raise TypeError("can't send non-None value to a just-started generator")
 *             if not isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *                 value = (value,)
 *         elif self._arguments is not None:
 */
    __pyx_t_1 = PyTuple_Check(__pyx_v_value); 
    __pyx_t_3 = (!__pyx_t_1);
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":645
 *                 raise TypeError("can't send non-None value to a just-started generator")
 *             if not isinstance(value, tuple):
 *                 value = (value,)             # <<<<<<<<<<<<<<
 *         elif self._arguments is not None:
 *             value = self._arguments
 */
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_value);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      __Pyx_DECREF(__pyx_v_value);
      __pyx_v_value = ((PyObject *)__pyx_t_2);
      __pyx_t_2 = 0;
      goto __pyx_L5;
    }
    __pyx_L5:;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":646
 *             if not isinstance(value, tuple):
 *                 value = (value,)
 *         elif self._arguments is not None:             # <<<<<<<<<<<<<<
 *             value = self._arguments
 *             self._arguments = None
 */
  __pyx_t_3 = (__pyx_v_self->_arguments != ((PyObject*)Py_None));
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":647
 *                 value = (value,)
 *         elif self._arguments is not None:
 *             value = self._arguments             # <<<<<<<<<<<<<<
 *             self._arguments = None
 *         return resume_lua_thread(self, <tuple>value)
 */
    __pyx_t_2 = ((PyObject *)__pyx_v_self->_arguments);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_value);
    __pyx_v_value = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":648
 *         elif self._arguments is not None:
 *             value = self._arguments
 *             self._arguments = None             # <<<<<<<<<<<<<<
 *         return resume_lua_thread(self, <tuple>value)
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_arguments);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_arguments));
    __pyx_v_self->_arguments = ((PyObject*)Py_None);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":649
 *             value = self._arguments
 *             self._arguments = None
 *         return resume_lua_thread(self, <tuple>value)             # <<<<<<<<<<<<<<
 * 
 *     def __bool__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_3AKU_resume_lua_thread(__pyx_v_self, ((PyObject*)__pyx_v_value)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaThread.send", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_10_LuaThread_7__bool__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3AKU_10_LuaThread_7__bool__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__bool__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_10_LuaThread_6__bool__(((struct __pyx_obj_3AKU__LuaThread *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":651
 *         return resume_lua_thread(self, <tuple>value)
 * 
 *     def __bool__(self):             # <<<<<<<<<<<<<<
 *         cdef lua.lua_Debug dummy
 *         assert self._runtime is not None
 */

static int __pyx_pf_3AKU_10_LuaThread_6__bool__(struct __pyx_obj_3AKU__LuaThread *__pyx_v_self) {
  lua_Debug __pyx_v_dummy;
  int __pyx_v_status;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__bool__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":653
 *     def __bool__(self):
 *         cdef lua.lua_Debug dummy
 *         assert self._runtime is not None             # <<<<<<<<<<<<<<
 *         cdef int status = lua.lua_status(self._co_state)
 *         if status == lua.LUA_YIELD:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_self->__pyx_base._runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":654
 *         cdef lua.lua_Debug dummy
 *         assert self._runtime is not None
 *         cdef int status = lua.lua_status(self._co_state)             # <<<<<<<<<<<<<<
 *         if status == lua.LUA_YIELD:
 *             return True
 */
  __pyx_v_status = lua_status(__pyx_v_self->_co_state);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":655
 *         assert self._runtime is not None
 *         cdef int status = lua.lua_status(self._co_state)
 *         if status == lua.LUA_YIELD:             # <<<<<<<<<<<<<<
 *             return True
 *         if status == 0:
 */
  __pyx_t_1 = (__pyx_v_status == LUA_YIELD);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":656
 *         cdef int status = lua.lua_status(self._co_state)
 *         if status == lua.LUA_YIELD:
 *             return True             # <<<<<<<<<<<<<<
 *         if status == 0:
 *             # copied from Lua code: check for frames
 */
    __pyx_r = 1;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":657
 *         if status == lua.LUA_YIELD:
 *             return True
 *         if status == 0:             # <<<<<<<<<<<<<<
 *             # copied from Lua code: check for frames
 *             if lua.lua_getstack(self._co_state, 0, &dummy) > 0:
 */
  __pyx_t_1 = (__pyx_v_status == 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":659
 *         if status == 0:
 *             # copied from Lua code: check for frames
 *             if lua.lua_getstack(self._co_state, 0, &dummy) > 0:             # <<<<<<<<<<<<<<
 *                 return True # currently running
 *             elif lua.lua_gettop(self._co_state) > 0:
 */
    __pyx_t_1 = (lua_getstack(__pyx_v_self->_co_state, 0, (&__pyx_v_dummy)) > 0);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":660
 *             # copied from Lua code: check for frames
 *             if lua.lua_getstack(self._co_state, 0, &dummy) > 0:
 *                 return True # currently running             # <<<<<<<<<<<<<<
 *             elif lua.lua_gettop(self._co_state) > 0:
 *                 return True # not started yet
 */
      __pyx_r = 1;
      goto __pyx_L0;
      goto __pyx_L5;
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":661
 *             if lua.lua_getstack(self._co_state, 0, &dummy) > 0:
 *                 return True # currently running
 *             elif lua.lua_gettop(self._co_state) > 0:             # <<<<<<<<<<<<<<
 *                 return True # not started yet
 *         return False
 */
    __pyx_t_1 = (lua_gettop(__pyx_v_self->_co_state) > 0);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":662
 *                 return True # currently running
 *             elif lua.lua_gettop(self._co_state) > 0:
 *                 return True # not started yet             # <<<<<<<<<<<<<<
 *         return False
 * 
 */
      __pyx_r = 1;
      goto __pyx_L0;
      goto __pyx_L5;
    }
    __pyx_L5:;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":663
 *             elif lua.lua_gettop(self._co_state) > 0:
 *                 return True # not started yet
 *         return False             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaThread new_lua_thread(LuaRuntime runtime, lua_State* L, int n):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU._LuaThread.__bool__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":665
 *         return False
 * 
 * cdef _LuaThread new_lua_thread(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     cdef _LuaThread obj
 *     obj = <_LuaThread> find_cahced_lua_object( L, n )
 */

static struct __pyx_obj_3AKU__LuaThread *__pyx_f_3AKU_new_lua_thread(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_obj_3AKU__LuaThread *__pyx_v_obj = 0;
  struct __pyx_obj_3AKU__LuaThread *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_thread", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":667
 * cdef _LuaThread new_lua_thread(LuaRuntime runtime, lua_State* L, int n):
 *     cdef _LuaThread obj
 *     obj = <_LuaThread> find_cahced_lua_object( L, n )             # <<<<<<<<<<<<<<
 *     if obj: return obj
 *     #create new one
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_3AKU_find_cahced_lua_object(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaThread *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":668
 *     cdef _LuaThread obj
 *     obj = <_LuaThread> find_cahced_lua_object( L, n )
 *     if obj: return obj             # <<<<<<<<<<<<<<
 *     #create new one
 *     obj = _LuaThread.__new__(_LuaThread)
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_obj)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_obj));
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":670
 *     if obj: return obj
 *     #create new one
 *     obj = _LuaThread.__new__(_LuaThread)             # <<<<<<<<<<<<<<
 *     init_lua_object(obj, runtime, L, n)
 *     obj._co_state = lua.lua_tothread(L, n)
 */
  __pyx_t_2 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__LuaThread)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_3AKU__LuaThread)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_obj));
  __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaThread *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":671
 *     #create new one
 *     obj = _LuaThread.__new__(_LuaThread)
 *     init_lua_object(obj, runtime, L, n)             # <<<<<<<<<<<<<<
 *     obj._co_state = lua.lua_tothread(L, n)
 *     return obj
 */
  __pyx_f_3AKU_init_lua_object(((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_obj), __pyx_v_runtime, __pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":672
 *     obj = _LuaThread.__new__(_LuaThread)
 *     init_lua_object(obj, runtime, L, n)
 *     obj._co_state = lua.lua_tothread(L, n)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  __pyx_v_obj->_co_state = lua_tothread(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":673
 *     init_lua_object(obj, runtime, L, n)
 *     obj._co_state = lua.lua_tothread(L, n)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * cdef _LuaObject new_lua_thread_or_function(LuaRuntime runtime, lua_State* L, int n):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaThread *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.new_lua_thread", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":675
 *     return obj
 * 
 * cdef _LuaObject new_lua_thread_or_function(LuaRuntime runtime, lua_State* L, int n):             # <<<<<<<<<<<<<<
 *     # this is special - we replace a new (unstarted) thread by its
 *     # underlying function to better follow Python's own generator
 */

static struct __pyx_obj_3AKU__LuaObject *__pyx_f_3AKU_new_lua_thread_or_function(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  lua_State *__pyx_v_co;
  struct __pyx_obj_3AKU__LuaObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_lua_thread_or_function", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":679
 *     # underlying function to better follow Python's own generator
 *     # protocol
 *     cdef lua_State* co = lua.lua_tothread(L, n)             # <<<<<<<<<<<<<<
 *     assert co is not NULL
 *     if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 1:
 */
  __pyx_v_co = lua_tothread(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":680
 *     # protocol
 *     cdef lua_State* co = lua.lua_tothread(L, n)
 *     assert co is not NULL             # <<<<<<<<<<<<<<
 *     if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 1:
 *         # not started yet => get the function and return that
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!(__pyx_v_co != NULL))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":681
 *     cdef lua_State* co = lua.lua_tothread(L, n)
 *     assert co is not NULL
 *     if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 1:             # <<<<<<<<<<<<<<
 *         # not started yet => get the function and return that
 *         lua.lua_pushvalue(co, 1)
 */
  __pyx_t_1 = (lua_status(__pyx_v_co) == 0);
  if (__pyx_t_1) {
    __pyx_t_2 = (lua_gettop(__pyx_v_co) == 1);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":683
 *     if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 1:
 *         # not started yet => get the function and return that
 *         lua.lua_pushvalue(co, 1)             # <<<<<<<<<<<<<<
 *         lua.lua_xmove(co, L, 1)
 *         try:
 */
    lua_pushvalue(__pyx_v_co, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":684
 *         # not started yet => get the function and return that
 *         lua.lua_pushvalue(co, 1)
 *         lua.lua_xmove(co, L, 1)             # <<<<<<<<<<<<<<
 *         try:
 *             return new_lua_coroutine_function(runtime, L, -1)
 */
    lua_xmove(__pyx_v_co, __pyx_v_L, 1);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":685
 *         lua.lua_pushvalue(co, 1)
 *         lua.lua_xmove(co, L, 1)
 *         try:             # <<<<<<<<<<<<<<
 *             return new_lua_coroutine_function(runtime, L, -1)
 *         finally:
 */
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":686
 *         lua.lua_xmove(co, L, 1)
 *         try:
 *             return new_lua_coroutine_function(runtime, L, -1)             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_pop(L, 1)
 */
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __pyx_t_4 = ((PyObject *)__pyx_f_3AKU_new_lua_coroutine_function(__pyx_v_runtime, __pyx_v_L, -1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 686; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_4);
      __pyx_t_4 = 0;
      goto __pyx_L4;
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":688
 *             return new_lua_coroutine_function(runtime, L, -1)
 *         finally:
 *             lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *     else:
 *         # already started => wrap the thread
 */
    /*finally:*/ {
      int __pyx_why;
      PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
      int __pyx_exc_lineno;
      __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
      __pyx_why = 0; goto __pyx_L6;
      __pyx_L4: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
      __pyx_why = 3; goto __pyx_L6;
      __pyx_L5: {
        __pyx_why = 4;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
        __pyx_exc_lineno = __pyx_lineno;
        goto __pyx_L6;
      }
      __pyx_L6:;
      lua_pop(__pyx_v_L, 1);
      switch (__pyx_why) {
        case 3: goto __pyx_L0;
        case 4: {
          __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
          __pyx_lineno = __pyx_exc_lineno;
          __pyx_exc_type = 0;
          __pyx_exc_value = 0;
          __pyx_exc_tb = 0;
          goto __pyx_L1_error;
        }
      }
    }
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":691
 *     else:
 *         # already started => wrap the thread
 *         return new_lua_thread(runtime, L, n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __pyx_t_4 = ((PyObject *)__pyx_f_3AKU_new_lua_thread(__pyx_v_runtime, __pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = ((struct __pyx_obj_3AKU__LuaObject *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("AKU.new_lua_thread_or_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":694
 * 
 * 
 * cdef object resume_lua_thread(_LuaThread thread, tuple args):             # <<<<<<<<<<<<<<
 *     cdef lua_State* co = thread._co_state
 *     cdef int result, i, nargs = 0
 */

static PyObject *__pyx_f_3AKU_resume_lua_thread(struct __pyx_obj_3AKU__LuaThread *__pyx_v_thread, PyObject *__pyx_v_args) {
  lua_State *__pyx_v_co;
  int __pyx_v_result;
  int __pyx_v_nargs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("resume_lua_thread", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":695
 * 
 * cdef object resume_lua_thread(_LuaThread thread, tuple args):
 *     cdef lua_State* co = thread._co_state             # <<<<<<<<<<<<<<
 *     cdef int result, i, nargs = 0
 *     lock_runtime(thread._runtime)
 */
  __pyx_t_1 = __pyx_v_thread->_co_state;
  __pyx_v_co = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":696
 * cdef object resume_lua_thread(_LuaThread thread, tuple args):
 *     cdef lua_State* co = thread._co_state
 *     cdef int result, i, nargs = 0             # <<<<<<<<<<<<<<
 *     lock_runtime(thread._runtime)
 *     try:
 */
  __pyx_v_nargs = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":697
 *     cdef lua_State* co = thread._co_state
 *     cdef int result, i, nargs = 0
 *     lock_runtime(thread._runtime)             # <<<<<<<<<<<<<<
 *     try:
 *         if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 0:
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_thread->__pyx_base._runtime);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_2)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":698
 *     cdef int result, i, nargs = 0
 *     lock_runtime(thread._runtime)
 *     try:             # <<<<<<<<<<<<<<
 *         if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 0:
 *             # already terminated
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":699
 *     lock_runtime(thread._runtime)
 *     try:
 *         if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 0:             # <<<<<<<<<<<<<<
 *             # already terminated
 *             raise StopIteration
 */
    __pyx_t_4 = (lua_status(__pyx_v_co) == 0);
    if (__pyx_t_4) {
      __pyx_t_5 = (lua_gettop(__pyx_v_co) == 0);
      __pyx_t_6 = __pyx_t_5;
    } else {
      __pyx_t_6 = __pyx_t_4;
    }
    if (__pyx_t_6) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":701
 *         if lua.lua_status(co) == 0 and lua.lua_gettop(co) == 0:
 *             # already terminated
 *             raise StopIteration             # <<<<<<<<<<<<<<
 *         if args:
 *             nargs = len(args)
 */
      __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0, 0);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L4;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":702
 *             # already terminated
 *             raise StopIteration
 *         if args:             # <<<<<<<<<<<<<<
 *             nargs = len(args)
 *             push_lua_arguments(thread._runtime, co, args, 0)
 */
    __pyx_t_6 = (((PyObject *)__pyx_v_args) != Py_None) && (PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) != 0);
    if (__pyx_t_6) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":703
 *             raise StopIteration
 *         if args:
 *             nargs = len(args)             # <<<<<<<<<<<<<<
 *             push_lua_arguments(thread._runtime, co, args, 0)
 *         with nogil:
 */
      if (unlikely(((PyObject *)__pyx_v_args) == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L4;}
      }
      __pyx_t_7 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __pyx_v_nargs = __pyx_t_7;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":704
 *         if args:
 *             nargs = len(args)
 *             push_lua_arguments(thread._runtime, co, args, 0)             # <<<<<<<<<<<<<<
 *         with nogil:
 *             result = lua.lua_resume(co, nargs)
 */
      __pyx_t_2 = ((PyObject *)__pyx_v_thread->__pyx_base._runtime);
      __Pyx_INCREF(__pyx_t_2);
      __pyx_t_3 = __pyx_f_3AKU_push_lua_arguments(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_2), __pyx_v_co, __pyx_v_args, 0); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":705
 *             nargs = len(args)
 *             push_lua_arguments(thread._runtime, co, args, 0)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result = lua.lua_resume(co, nargs)
 *         if result != lua.LUA_YIELD:
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save = NULL;
        #endif
        Py_UNBLOCK_THREADS
        /*try:*/ {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":706
 *             push_lua_arguments(thread._runtime, co, args, 0)
 *         with nogil:
 *             result = lua.lua_resume(co, nargs)             # <<<<<<<<<<<<<<
 *         if result != lua.LUA_YIELD:
 *             if result == 0:
 */
          __pyx_v_result = lua_resume(__pyx_v_co, __pyx_v_nargs);
        }

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":705
 *             nargs = len(args)
 *             push_lua_arguments(thread._runtime, co, args, 0)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result = lua.lua_resume(co, nargs)
 *         if result != lua.LUA_YIELD:
 */
        /*finally:*/ {
          Py_BLOCK_THREADS
        }
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":707
 *         with nogil:
 *             result = lua.lua_resume(co, nargs)
 *         if result != lua.LUA_YIELD:             # <<<<<<<<<<<<<<
 *             if result == 0:
 *                 # terminated
 */
    __pyx_t_6 = (__pyx_v_result != LUA_YIELD);
    if (__pyx_t_6) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":708
 *             result = lua.lua_resume(co, nargs)
 *         if result != lua.LUA_YIELD:
 *             if result == 0:             # <<<<<<<<<<<<<<
 *                 # terminated
 *                 if lua.lua_gettop(co) == 0:
 */
      __pyx_t_6 = (__pyx_v_result == 0);
      if (__pyx_t_6) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":710
 *             if result == 0:
 *                 # terminated
 *                 if lua.lua_gettop(co) == 0:             # <<<<<<<<<<<<<<
 *                     # no values left to return
 *                     raise StopIteration
 */
        __pyx_t_6 = (lua_gettop(__pyx_v_co) == 0);
        if (__pyx_t_6) {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":712
 *                 if lua.lua_gettop(co) == 0:
 *                     # no values left to return
 *                     raise StopIteration             # <<<<<<<<<<<<<<
 *             else:
 *                 raise_lua_error(thread._runtime, co, result)
 */
          __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0, 0);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L4;}
          goto __pyx_L13;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":714
 *                     raise StopIteration
 *             else:
 *                 raise_lua_error(thread._runtime, co, result)             # <<<<<<<<<<<<<<
 *         return unpack_lua_results(thread._runtime, co)
 *     finally:
 */
        __pyx_t_2 = ((PyObject *)__pyx_v_thread->__pyx_base._runtime);
        __Pyx_INCREF(__pyx_t_2);
        __pyx_t_3 = __pyx_f_3AKU_raise_lua_error(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_2), __pyx_v_co, __pyx_v_result); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L4;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __pyx_L12:;
      goto __pyx_L11;
    }
    __pyx_L11:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":715
 *             else:
 *                 raise_lua_error(thread._runtime, co, result)
 *         return unpack_lua_results(thread._runtime, co)             # <<<<<<<<<<<<<<
 *     finally:
 *         lua.lua_settop(co, 0)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_v_thread->__pyx_base._runtime);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_8 = __pyx_f_3AKU_unpack_lua_results(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_2), __pyx_v_co); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":717
 *         return unpack_lua_results(thread._runtime, co)
 *     finally:
 *         lua.lua_settop(co, 0)             # <<<<<<<<<<<<<<
 *         unlock_runtime(thread._runtime)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_co, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":718
 *     finally:
 *         lua.lua_settop(co, 0)
 *         unlock_runtime(thread._runtime)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_8 = ((PyObject *)__pyx_v_thread->__pyx_base._runtime);
    __Pyx_INCREF(__pyx_t_8);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_8));
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("AKU.resume_lua_thread", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_8_LuaIter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_8_LuaIter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj = 0;
  int __pyx_v_what;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__obj,&__pyx_n_s__what,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__obj)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__what)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_obj = ((struct __pyx_obj_3AKU__LuaObject *)values[0]);
    __pyx_v_what = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_what == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU._LuaIter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_obj), __pyx_ptype_3AKU__LuaObject, 0, "obj", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3AKU_8_LuaIter___cinit__(((struct __pyx_obj_3AKU__LuaIter *)__pyx_v_self), __pyx_v_obj, __pyx_v_what);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":733
 *     cdef char _what
 * 
 *     def __cinit__(self, _LuaObject obj not None, int what):             # <<<<<<<<<<<<<<
 *         self._state = NULL
 *         assert obj._runtime is not None
 */

static int __pyx_pf_3AKU_8_LuaIter___cinit__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self, struct __pyx_obj_3AKU__LuaObject *__pyx_v_obj, int __pyx_v_what) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  lua_State *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":734
 * 
 *     def __cinit__(self, _LuaObject obj not None, int what):
 *         self._state = NULL             # <<<<<<<<<<<<<<
 *         assert obj._runtime is not None
 *         self._runtime = obj._runtime
 */
  __pyx_v_self->_state = NULL;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":735
 *     def __cinit__(self, _LuaObject obj not None, int what):
 *         self._state = NULL
 *         assert obj._runtime is not None             # <<<<<<<<<<<<<<
 *         self._runtime = obj._runtime
 *         # additional INCREF to keep runtime from disappearing in GC runs
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  __pyx_t_1 = (((PyObject *)__pyx_v_obj->_runtime) != Py_None);
  if (unlikely(!__pyx_t_1)) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":736
 *         self._state = NULL
 *         assert obj._runtime is not None
 *         self._runtime = obj._runtime             # <<<<<<<<<<<<<<
 *         # additional INCREF to keep runtime from disappearing in GC runs
 *         cpython.ref.Py_INCREF(self._runtime)
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_obj->_runtime);
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_runtime);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_runtime));
  __pyx_v_self->_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":738
 *         self._runtime = obj._runtime
 *         # additional INCREF to keep runtime from disappearing in GC runs
 *         cpython.ref.Py_INCREF(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *         self._obj = obj
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_2);
  Py_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":740
 *         cpython.ref.Py_INCREF(self._runtime)
 * 
 *         self._obj = obj             # <<<<<<<<<<<<<<
 *         self._state = obj._state
 *         self._refiter = 0
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_obj));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_obj));
  __Pyx_GOTREF(__pyx_v_self->_obj);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_obj));
  __pyx_v_self->_obj = __pyx_v_obj;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":741
 * 
 *         self._obj = obj
 *         self._state = obj._state             # <<<<<<<<<<<<<<
 *         self._refiter = 0
 *         self._what = what
 */
  __pyx_t_3 = __pyx_v_obj->_state;
  __pyx_v_self->_state = __pyx_t_3;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":742
 *         self._obj = obj
 *         self._state = obj._state
 *         self._refiter = 0             # <<<<<<<<<<<<<<
 *         self._what = what
 * 
 */
  __pyx_v_self->_refiter = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":743
 *         self._state = obj._state
 *         self._refiter = 0
 *         self._what = what             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->_what = __pyx_v_what;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU._LuaIter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_3AKU_8_LuaIter_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3AKU_8_LuaIter_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3AKU_8_LuaIter_2__dealloc__(((struct __pyx_obj_3AKU__LuaIter *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":745
 *         self._what = what
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return
 */

static void __pyx_pf_3AKU_8_LuaIter_2__dealloc__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self) {
  lua_State *__pyx_v_L;
  int __pyx_v_locked;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  lua_State *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":746
 * 
 *     def __dealloc__(self):
 *         if self._runtime is None or self._runtime._state ==NULL :             # <<<<<<<<<<<<<<
 *             return
 *         cdef lua_State* L = self._state
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_runtime) == Py_None);
  if (!__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_self->_runtime->_state == NULL);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":747
 *     def __dealloc__(self):
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._state
 *         if L is not NULL and self._refiter:
 */
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":748
 *         if self._runtime is None or self._runtime._state ==NULL :
 *             return
 *         cdef lua_State* L = self._state             # <<<<<<<<<<<<<<
 *         if L is not NULL and self._refiter:
 *             locked = False
 */
  __pyx_t_4 = __pyx_v_self->_state;
  __pyx_v_L = __pyx_t_4;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":749
 *             return
 *         cdef lua_State* L = self._state
 *         if L is not NULL and self._refiter:             # <<<<<<<<<<<<<<
 *             locked = False
 *             try:
 */
  __pyx_t_3 = (__pyx_v_L != NULL);
  if (__pyx_t_3) {
    __pyx_t_1 = __pyx_v_self->_refiter;
  } else {
    __pyx_t_1 = __pyx_t_3;
  }
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":750
 *         cdef lua_State* L = self._state
 *         if L is not NULL and self._refiter:
 *             locked = False             # <<<<<<<<<<<<<<
 *             try:
 *                 lock_runtime(self._runtime)
 */
    __pyx_v_locked = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":751
 *         if L is not NULL and self._refiter:
 *             locked = False
 *             try:             # <<<<<<<<<<<<<<
 *                 lock_runtime(self._runtime)
 *                 locked = True
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      /*try:*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":752
 *             locked = False
 *             try:
 *                 lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *                 locked = True
 *             except:
 */
        __pyx_t_8 = ((PyObject *)__pyx_v_self->_runtime);
        __Pyx_INCREF(__pyx_t_8);
        __pyx_t_9 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_8)); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 752; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":753
 *             try:
 *                 lock_runtime(self._runtime)
 *                 locked = True             # <<<<<<<<<<<<<<
 *             except:
 *                 pass
 */
        __pyx_v_locked = 1;
      }
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L12_try_end;
      __pyx_L5_error:;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":754
 *                 lock_runtime(self._runtime)
 *                 locked = True
 *             except:             # <<<<<<<<<<<<<<
 *                 pass
 *             lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 */
      /*except:*/ {
        PyErr_Restore(0,0,0);
        goto __pyx_L6_exception_handled;
      }
      __pyx_L6_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
      __pyx_L12_try_end:;
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":756
 *             except:
 *                 pass
 *             lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)             # <<<<<<<<<<<<<<
 *             if locked:
 *                 unlock_runtime(self._runtime)
 */
    luaL_unref(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_refiter);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":757
 *                 pass
 *             lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *             if locked:             # <<<<<<<<<<<<<<
 *                 unlock_runtime(self._runtime)
 *         # undo additional INCREF at instantiation time
 */
    if (__pyx_v_locked) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":758
 *             lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *             if locked:
 *                 unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         # undo additional INCREF at instantiation time
 *         cpython.ref.Py_DECREF(self._runtime)
 */
      __pyx_t_8 = ((PyObject *)__pyx_v_self->_runtime);
      __Pyx_INCREF(__pyx_t_8);
      __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_8));
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L13;
    }
    __pyx_L13:;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":760
 *                 unlock_runtime(self._runtime)
 *         # undo additional INCREF at instantiation time
 *         cpython.ref.Py_DECREF(self._runtime)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_8 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_8);
  Py_DECREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_8_LuaIter_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_8_LuaIter_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_8_LuaIter_4__repr__(((struct __pyx_obj_3AKU__LuaIter *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":762
 *         cpython.ref.Py_DECREF(self._runtime)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"LuaIter(%r)" % (self._obj)
 * 
 */

static PyObject *__pyx_pf_3AKU_8_LuaIter_4__repr__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":763
 * 
 *     def __repr__(self):
 *         return u"LuaIter(%r)" % (self._obj)             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_33), ((PyObject *)__pyx_v_self->_obj)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU._LuaIter.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_8_LuaIter_7__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_8_LuaIter_7__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_8_LuaIter_6__iter__(((struct __pyx_obj_3AKU__LuaIter *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":765
 *         return u"LuaIter(%r)" % (self._obj)
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

static PyObject *__pyx_pf_3AKU_8_LuaIter_6__iter__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":766
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_8_LuaIter_9__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3AKU_8_LuaIter_9__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_8_LuaIter_8__next__(((struct __pyx_obj_3AKU__LuaIter *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":768
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         if self._obj is None:
 *             raise StopIteration
 */

static PyObject *__pyx_pf_3AKU_8_LuaIter_8__next__(struct __pyx_obj_3AKU__LuaIter *__pyx_v_self) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_v_retval = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  lua_State *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":769
 * 
 *     def __next__(self):
 *         if self._obj is None:             # <<<<<<<<<<<<<<
 *             raise StopIteration
 *         cdef lua_State* L = self._obj._state
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_obj) == Py_None);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":770
 *     def __next__(self):
 *         if self._obj is None:
 *             raise StopIteration             # <<<<<<<<<<<<<<
 *         cdef lua_State* L = self._obj._state
 *         lock_runtime(self._runtime)
 */
    __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":771
 *         if self._obj is None:
 *             raise StopIteration
 *         cdef lua_State* L = self._obj._state             # <<<<<<<<<<<<<<
 *         lock_runtime(self._runtime)
 *         try:
 */
  __pyx_t_2 = __pyx_v_self->_obj->_state;
  __pyx_v_L = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":772
 *             raise StopIteration
 *         cdef lua_State* L = self._obj._state
 *         lock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         try:
 *             if self._obj is None:
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_3AKU_lock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":773
 *         cdef lua_State* L = self._obj._state
 *         lock_runtime(self._runtime)
 *         try:             # <<<<<<<<<<<<<<
 *             if self._obj is None:
 *                 raise StopIteration
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":774
 *         lock_runtime(self._runtime)
 *         try:
 *             if self._obj is None:             # <<<<<<<<<<<<<<
 *                 raise StopIteration
 *             # iterable object
 */
    __pyx_t_1 = (((PyObject *)__pyx_v_self->_obj) == Py_None);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":775
 *         try:
 *             if self._obj is None:
 *                 raise StopIteration             # <<<<<<<<<<<<<<
 *             # iterable object
 *             lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._obj._ref)
 */
      __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0, 0);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L5;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":777
 *                 raise StopIteration
 *             # iterable object
 *             lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._obj._ref)             # <<<<<<<<<<<<<<
 *             if not lua.lua_istable(L, -1):
 *                 if lua.lua_isnil(L, -1):
 */
    lua_rawgeti(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_obj->_ref);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":778
 *             # iterable object
 *             lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._obj._ref)
 *             if not lua.lua_istable(L, -1):             # <<<<<<<<<<<<<<
 *                 if lua.lua_isnil(L, -1):
 *                     lua.lua_pop(L, 1)
 */
    __pyx_t_1 = (!lua_istable(__pyx_v_L, -1));
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":779
 *             lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._obj._ref)
 *             if not lua.lua_istable(L, -1):
 *                 if lua.lua_isnil(L, -1):             # <<<<<<<<<<<<<<
 *                     lua.lua_pop(L, 1)
 *                     raise LuaError("lost reference")
 */
      __pyx_t_1 = lua_isnil(__pyx_v_L, -1);
      if (__pyx_t_1) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":780
 *             if not lua.lua_istable(L, -1):
 *                 if lua.lua_isnil(L, -1):
 *                     lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                     raise LuaError("lost reference")
 *                 raise TypeError(cpython.bytes.PyBytes_FromFormat(
 */
        lua_pop(__pyx_v_L, 1);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":781
 *                 if lua.lua_isnil(L, -1):
 *                     lua.lua_pop(L, 1)
 *                     raise LuaError("lost reference")             # <<<<<<<<<<<<<<
 *                 raise TypeError(cpython.bytes.PyBytes_FromFormat(
 *                     "cannot iterate over non-table (found Lua %s)",
 */
        __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L5;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_34), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L5;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L5;}
        goto __pyx_L9;
      }
      __pyx_L9:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":784
 *                 raise TypeError(cpython.bytes.PyBytes_FromFormat(
 *                     "cannot iterate over non-table (found Lua %s)",
 *                     lua.lua_typename(L, lua.lua_type(L, -1))))             # <<<<<<<<<<<<<<
 *             if not self._refiter:
 *                 # initial key
 */
      __pyx_t_5 = ((PyObject *)PyBytes_FromFormat(__pyx_k_35, lua_typename(__pyx_v_L, lua_type(__pyx_v_L, -1)))); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L5;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L5;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":785
 *                     "cannot iterate over non-table (found Lua %s)",
 *                     lua.lua_typename(L, lua.lua_type(L, -1))))
 *             if not self._refiter:             # <<<<<<<<<<<<<<
 *                 # initial key
 *                 lua.lua_pushnil(L)
 */
    __pyx_t_1 = (!__pyx_v_self->_refiter);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":787
 *             if not self._refiter:
 *                 # initial key
 *                 lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *             else:
 *                 # last key
 */
      lua_pushnil(__pyx_v_L);
      goto __pyx_L10;
    }
    /*else*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":790
 *             else:
 *                 # last key
 *                 lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._refiter)             # <<<<<<<<<<<<<<
 *             if lua.lua_next(L, -2):
 *                 try:
 */
      lua_rawgeti(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_refiter);
    }
    __pyx_L10:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":791
 *                 # last key
 *                 lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *             if lua.lua_next(L, -2):             # <<<<<<<<<<<<<<
 *                 try:
 *                     if self._what == KEYS:
 */
    __pyx_t_4 = lua_next(__pyx_v_L, -2);
    if (__pyx_t_4) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":792
 *                 lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *             if lua.lua_next(L, -2):
 *                 try:             # <<<<<<<<<<<<<<
 *                     if self._what == KEYS:
 *                         retval = py_from_lua(self._runtime, L, -2)
 */
      /*try:*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":795
 *                     if self._what == KEYS:
 *                         retval = py_from_lua(self._runtime, L, -2)
 *                     elif self._what == VALUES:             # <<<<<<<<<<<<<<
 *                         retval = py_from_lua(self._runtime, L, -1)
 *                     else: # ITEMS
 */
        switch (__pyx_v_self->_what) {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":793
 *             if lua.lua_next(L, -2):
 *                 try:
 *                     if self._what == KEYS:             # <<<<<<<<<<<<<<
 *                         retval = py_from_lua(self._runtime, L, -2)
 *                     elif self._what == VALUES:
 */
          case __pyx_e_3AKU_KEYS:

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":794
 *                 try:
 *                     if self._what == KEYS:
 *                         retval = py_from_lua(self._runtime, L, -2)             # <<<<<<<<<<<<<<
 *                     elif self._what == VALUES:
 *                         retval = py_from_lua(self._runtime, L, -1)
 */
          __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
          __Pyx_INCREF(__pyx_t_5);
          __pyx_t_3 = __pyx_f_3AKU_py_from_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, -2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L13;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_retval = __pyx_t_3;
          __pyx_t_3 = 0;
          break;

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":795
 *                     if self._what == KEYS:
 *                         retval = py_from_lua(self._runtime, L, -2)
 *                     elif self._what == VALUES:             # <<<<<<<<<<<<<<
 *                         retval = py_from_lua(self._runtime, L, -1)
 *                     else: # ITEMS
 */
          case __pyx_e_3AKU_VALUES:

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":796
 *                         retval = py_from_lua(self._runtime, L, -2)
 *                     elif self._what == VALUES:
 *                         retval = py_from_lua(self._runtime, L, -1)             # <<<<<<<<<<<<<<
 *                     else: # ITEMS
 *                         retval = (py_from_lua(self._runtime, L, -2), py_from_lua(self._runtime, L, -1))
 */
          __pyx_t_3 = ((PyObject *)__pyx_v_self->_runtime);
          __Pyx_INCREF(__pyx_t_3);
          __pyx_t_5 = __pyx_f_3AKU_py_from_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_3), __pyx_v_L, -1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L13;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_retval = __pyx_t_5;
          __pyx_t_5 = 0;
          break;
          default:

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":798
 *                         retval = py_from_lua(self._runtime, L, -1)
 *                     else: # ITEMS
 *                         retval = (py_from_lua(self._runtime, L, -2), py_from_lua(self._runtime, L, -1))             # <<<<<<<<<<<<<<
 *                 finally:
 *                     # pop value
 */
          __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
          __Pyx_INCREF(__pyx_t_5);
          __pyx_t_3 = __pyx_f_3AKU_py_from_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, -2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L13;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
          __Pyx_INCREF(__pyx_t_5);
          __pyx_t_6 = __pyx_f_3AKU_py_from_lua(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5), __pyx_v_L, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L13;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L13;}
          __Pyx_GOTREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
          __Pyx_GIVEREF(__pyx_t_6);
          __pyx_t_3 = 0;
          __pyx_t_6 = 0;
          __pyx_v_retval = ((PyObject *)__pyx_t_5);
          __pyx_t_5 = 0;
          break;
        }
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":801
 *                 finally:
 *                     # pop value
 *                     lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                     # pop and store key
 *                     if not self._refiter:
 */
      /*finally:*/ {
        int __pyx_why;
        PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
        int __pyx_exc_lineno;
        __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
        __pyx_why = 0; goto __pyx_L14;
        __pyx_L13: {
          __pyx_why = 4;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
          __pyx_exc_lineno = __pyx_lineno;
          goto __pyx_L14;
        }
        __pyx_L14:;
        lua_pop(__pyx_v_L, 1);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":803
 *                     lua.lua_pop(L, 1)
 *                     # pop and store key
 *                     if not self._refiter:             # <<<<<<<<<<<<<<
 *                         self._refiter = lua.luaL_ref(L, lua.LUA_REGISTRYINDEX)
 *                     else:
 */
        __pyx_t_1 = (!__pyx_v_self->_refiter);
        if (__pyx_t_1) {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":804
 *                     # pop and store key
 *                     if not self._refiter:
 *                         self._refiter = lua.luaL_ref(L, lua.LUA_REGISTRYINDEX)             # <<<<<<<<<<<<<<
 *                     else:
 *                         lua.lua_rawseti(L, lua.LUA_REGISTRYINDEX, self._refiter)
 */
          __pyx_v_self->_refiter = luaL_ref(__pyx_v_L, LUA_REGISTRYINDEX);
          goto __pyx_L16;
        }
        /*else*/ {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":806
 *                         self._refiter = lua.luaL_ref(L, lua.LUA_REGISTRYINDEX)
 *                     else:
 *                         lua.lua_rawseti(L, lua.LUA_REGISTRYINDEX, self._refiter)             # <<<<<<<<<<<<<<
 *                 return retval
 *             # iteration done, clean up
 */
          lua_rawseti(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_refiter);
        }
        __pyx_L16:;
        switch (__pyx_why) {
          case 4: {
            __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
            __pyx_lineno = __pyx_exc_lineno;
            __pyx_exc_type = 0;
            __pyx_exc_value = 0;
            __pyx_exc_tb = 0;
            goto __pyx_L5;
          }
        }
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":807
 *                     else:
 *                         lua.lua_rawseti(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *                 return retval             # <<<<<<<<<<<<<<
 *             # iteration done, clean up
 *             if self._refiter:
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_retval);
      __pyx_r = __pyx_v_retval;
      goto __pyx_L4;
      goto __pyx_L11;
    }
    __pyx_L11:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":809
 *                 return retval
 *             # iteration done, clean up
 *             if self._refiter:             # <<<<<<<<<<<<<<
 *                 lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *                 self._refiter = 0
 */
    if (__pyx_v_self->_refiter) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":810
 *             # iteration done, clean up
 *             if self._refiter:
 *                 lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)             # <<<<<<<<<<<<<<
 *                 self._refiter = 0
 *             self._obj = None
 */
      luaL_unref(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_v_self->_refiter);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":811
 *             if self._refiter:
 *                 lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *                 self._refiter = 0             # <<<<<<<<<<<<<<
 *             self._obj = None
 *         finally:
 */
      __pyx_v_self->_refiter = 0;
      goto __pyx_L17;
    }
    __pyx_L17:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":812
 *                 lua.luaL_unref(L, lua.LUA_REGISTRYINDEX, self._refiter)
 *                 self._refiter = 0
 *             self._obj = None             # <<<<<<<<<<<<<<
 *         finally:
 *             lua.lua_settop(L, 0)
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_obj);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_obj));
    __pyx_v_self->_obj = ((struct __pyx_obj_3AKU__LuaObject *)Py_None);
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":814
 *             self._obj = None
 *         finally:
 *             lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *             unlock_runtime(self._runtime)
 *         raise StopIteration
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L6;
    __pyx_L4: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L6;
    __pyx_L5: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L6;
    }
    __pyx_L6:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":815
 *         finally:
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)             # <<<<<<<<<<<<<<
 *         raise StopIteration
 * 
 */
    __pyx_t_5 = ((PyObject *)__pyx_v_self->_runtime);
    __Pyx_INCREF(__pyx_t_5);
    __pyx_f_3AKU_unlock_runtime(((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_5));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":816
 *             lua.lua_settop(L, 0)
 *             unlock_runtime(self._runtime)
 *         raise StopIteration             # <<<<<<<<<<<<<<
 * 
 * # type conversions and protocol adaptations
 */
  __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("AKU._LuaIter.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_retval);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":820
 * # type conversions and protocol adaptations
 * 
 * cdef int py_asfunc_call(lua_State *L) nogil:             # <<<<<<<<<<<<<<
 *     if lua.lua_gettop(L) == 1 and lua.lua_islightuserdata(L, 1) \
 *        and lua.lua_topointer(L, 1) == <void*>unpack_wrapped_pyfunction:
 */

static int __pyx_f_3AKU_py_asfunc_call(lua_State *__pyx_v_L) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":821
 * 
 * cdef int py_asfunc_call(lua_State *L) nogil:
 *     if lua.lua_gettop(L) == 1 and lua.lua_islightuserdata(L, 1) \             # <<<<<<<<<<<<<<
 *        and lua.lua_topointer(L, 1) == <void*>unpack_wrapped_pyfunction:
 *         # special case: unwrap_lua_object() calls this to find out the Python object
 */
  __pyx_t_1 = (lua_gettop(__pyx_v_L) == 1);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":822
 * cdef int py_asfunc_call(lua_State *L) nogil:
 *     if lua.lua_gettop(L) == 1 and lua.lua_islightuserdata(L, 1) \
 *        and lua.lua_topointer(L, 1) == <void*>unpack_wrapped_pyfunction:             # <<<<<<<<<<<<<<
 *         # special case: unwrap_lua_object() calls this to find out the Python object
 *         lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 */
    __pyx_t_2 = lua_islightuserdata(__pyx_v_L, 1);
    if (__pyx_t_2) {
      __pyx_t_3 = (lua_topointer(__pyx_v_L, 1) == ((void *)__pyx_f_3AKU_unpack_wrapped_pyfunction));
      __pyx_t_4 = __pyx_t_3;
    } else {
      __pyx_t_4 = __pyx_t_2;
    }
    __pyx_t_2 = __pyx_t_4;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":824
 *        and lua.lua_topointer(L, 1) == <void*>unpack_wrapped_pyfunction:
 *         # special case: unwrap_lua_object() calls this to find out the Python object
 *         lua.lua_pushvalue(L, lua.lua_upvalueindex(1))             # <<<<<<<<<<<<<<
 *         return 1
 *     lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 */
    lua_pushvalue(__pyx_v_L, lua_upvalueindex(1));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":825
 *         # special case: unwrap_lua_object() calls this to find out the Python object
 *         lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 *         return 1             # <<<<<<<<<<<<<<
 *     lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 *     lua.lua_insert(L, 1)
 */
    __pyx_r = 1;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":826
 *         lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 *         return 1
 *     lua.lua_pushvalue(L, lua.lua_upvalueindex(1))             # <<<<<<<<<<<<<<
 *     lua.lua_insert(L, 1)
 *     return py_object_call(L)
 */
  lua_pushvalue(__pyx_v_L, lua_upvalueindex(1));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":827
 *         return 1
 *     lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 *     lua.lua_insert(L, 1)             # <<<<<<<<<<<<<<
 *     return py_object_call(L)
 * 
 */
  lua_insert(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":828
 *     lua.lua_pushvalue(L, lua.lua_upvalueindex(1))
 *     lua.lua_insert(L, 1)
 *     return py_object_call(L)             # <<<<<<<<<<<<<<
 * 
 * cdef py_object* unpack_wrapped_pyfunction(lua_State* L, int n) nogil:
 */
  __pyx_r = __pyx_f_3AKU_py_object_call(__pyx_v_L);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":830
 *     return py_object_call(L)
 * 
 * cdef py_object* unpack_wrapped_pyfunction(lua_State* L, int n) nogil:             # <<<<<<<<<<<<<<
 *     cdef lua.lua_CFunction cfunction = lua.lua_tocfunction(L, n)
 *     if cfunction is <lua.lua_CFunction>py_asfunc_call:
 */

static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unpack_wrapped_pyfunction(lua_State *__pyx_v_L, int __pyx_v_n) {
  lua_CFunction __pyx_v_cfunction;
  struct __pyx_t_3AKU_py_object *__pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":831
 * 
 * cdef py_object* unpack_wrapped_pyfunction(lua_State* L, int n) nogil:
 *     cdef lua.lua_CFunction cfunction = lua.lua_tocfunction(L, n)             # <<<<<<<<<<<<<<
 *     if cfunction is <lua.lua_CFunction>py_asfunc_call:
 *         lua.lua_pushvalue(L, n)
 */
  __pyx_v_cfunction = lua_tocfunction(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":832
 * cdef py_object* unpack_wrapped_pyfunction(lua_State* L, int n) nogil:
 *     cdef lua.lua_CFunction cfunction = lua.lua_tocfunction(L, n)
 *     if cfunction is <lua.lua_CFunction>py_asfunc_call:             # <<<<<<<<<<<<<<
 *         lua.lua_pushvalue(L, n)
 *         lua.lua_pushlightuserdata(L, <void*>unpack_wrapped_pyfunction)
 */
  __pyx_t_1 = (__pyx_v_cfunction == ((lua_CFunction)__pyx_f_3AKU_py_asfunc_call));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":833
 *     cdef lua.lua_CFunction cfunction = lua.lua_tocfunction(L, n)
 *     if cfunction is <lua.lua_CFunction>py_asfunc_call:
 *         lua.lua_pushvalue(L, n)             # <<<<<<<<<<<<<<
 *         lua.lua_pushlightuserdata(L, <void*>unpack_wrapped_pyfunction)
 *         if lua.lua_pcall(L, 1, 1, 0) == 0:
 */
    lua_pushvalue(__pyx_v_L, __pyx_v_n);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":834
 *     if cfunction is <lua.lua_CFunction>py_asfunc_call:
 *         lua.lua_pushvalue(L, n)
 *         lua.lua_pushlightuserdata(L, <void*>unpack_wrapped_pyfunction)             # <<<<<<<<<<<<<<
 *         if lua.lua_pcall(L, 1, 1, 0) == 0:
 *             return <py_object*> lua.luaL_checkudata(L, -1, POBJECT) # doesn't return on error!
 */
    lua_pushlightuserdata(__pyx_v_L, ((void *)__pyx_f_3AKU_unpack_wrapped_pyfunction));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":835
 *         lua.lua_pushvalue(L, n)
 *         lua.lua_pushlightuserdata(L, <void*>unpack_wrapped_pyfunction)
 *         if lua.lua_pcall(L, 1, 1, 0) == 0:             # <<<<<<<<<<<<<<
 *             return <py_object*> lua.luaL_checkudata(L, -1, POBJECT) # doesn't return on error!
 *     return NULL
 */
    __pyx_t_1 = (lua_pcall(__pyx_v_L, 1, 1, 0) == 0);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":836
 *         lua.lua_pushlightuserdata(L, <void*>unpack_wrapped_pyfunction)
 *         if lua.lua_pcall(L, 1, 1, 0) == 0:
 *             return <py_object*> lua.luaL_checkudata(L, -1, POBJECT) # doesn't return on error!             # <<<<<<<<<<<<<<
 *     return NULL
 * 
 */
      __pyx_r = ((struct __pyx_t_3AKU_py_object *)luaL_checkudata(__pyx_v_L, -1, __pyx_k__POBJECT));
      goto __pyx_L0;
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":837
 *         if lua.lua_pcall(L, 1, 1, 0) == 0:
 *             return <py_object*> lua.luaL_checkudata(L, -1, POBJECT) # doesn't return on error!
 *     return NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _PyProtocolWrapper:
 */
  __pyx_r = NULL;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_18_PyProtocolWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_18_PyProtocolWrapper_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3AKU_18_PyProtocolWrapper___cinit__(((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":842
 *     cdef object _obj
 *     cdef int _type_flags
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self._type_flags = 0
 *     def __init__(self):
 */

static int __pyx_pf_3AKU_18_PyProtocolWrapper___cinit__(struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":843
 *     cdef int _type_flags
 *     def __cinit__(self):
 *         self._type_flags = 0             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         raise TypeError("Type cannot be instantiated from Python")
 */
  __pyx_v_self->_type_flags = 0;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3AKU_18_PyProtocolWrapper_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_18_PyProtocolWrapper_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_3AKU_18_PyProtocolWrapper_2__init__(((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":844
 *     def __cinit__(self):
 *         self._type_flags = 0
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         raise TypeError("Type cannot be instantiated from Python")
 * 
 */

static int __pyx_pf_3AKU_18_PyProtocolWrapper_2__init__(CYTHON_UNUSED struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":845
 *         self._type_flags = 0
 *     def __init__(self):
 *         raise TypeError("Type cannot be instantiated from Python")             # <<<<<<<<<<<<<<
 * 
 * def as_attrgetter(obj):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_37), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU._PyProtocolWrapper.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_1as_attrgetter(PyObject *__pyx_self, PyObject *__pyx_v_obj); /*proto*/
static PyMethodDef __pyx_mdef_3AKU_1as_attrgetter = {__Pyx_NAMESTR("as_attrgetter"), (PyCFunction)__pyx_pw_3AKU_1as_attrgetter, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_3AKU_1as_attrgetter(PyObject *__pyx_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_attrgetter (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_as_attrgetter(__pyx_self, ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":847
 *         raise TypeError("Type cannot be instantiated from Python")
 * 
 * def as_attrgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */

static PyObject *__pyx_pf_3AKU_as_attrgetter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_obj) {
  struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_wrap = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_attrgetter", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":848
 * 
 * def as_attrgetter(obj):
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)             # <<<<<<<<<<<<<<
 *     wrap._obj = obj
 *     wrap._type_flags = 0
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__PyProtocolWrapper)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_3AKU__PyProtocolWrapper)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_wrap = ((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":849
 * def as_attrgetter(obj):
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj             # <<<<<<<<<<<<<<
 *     wrap._type_flags = 0
 *     return wrap
 */
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  __Pyx_GOTREF(__pyx_v_wrap->_obj);
  __Pyx_DECREF(__pyx_v_wrap->_obj);
  __pyx_v_wrap->_obj = __pyx_v_obj;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":850
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 *     wrap._type_flags = 0             # <<<<<<<<<<<<<<
 *     return wrap
 * 
 */
  __pyx_v_wrap->_type_flags = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":851
 *     wrap._obj = obj
 *     wrap._type_flags = 0
 *     return wrap             # <<<<<<<<<<<<<<
 * 
 * def as_itemgetter(obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrap));
  __pyx_r = ((PyObject *)__pyx_v_wrap);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.as_attrgetter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_wrap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3as_itemgetter(PyObject *__pyx_self, PyObject *__pyx_v_obj); /*proto*/
static PyMethodDef __pyx_mdef_3AKU_3as_itemgetter = {__Pyx_NAMESTR("as_itemgetter"), (PyCFunction)__pyx_pw_3AKU_3as_itemgetter, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_3AKU_3as_itemgetter(PyObject *__pyx_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_itemgetter (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_2as_itemgetter(__pyx_self, ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":853
 *     return wrap
 * 
 * def as_itemgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */

static PyObject *__pyx_pf_3AKU_2as_itemgetter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_obj) {
  struct __pyx_obj_3AKU__PyProtocolWrapper *__pyx_v_wrap = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_itemgetter", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":854
 * 
 * def as_itemgetter(obj):
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)             # <<<<<<<<<<<<<<
 *     wrap._obj = obj
 *     wrap._type_flags = OBJ_AS_INDEX
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_3AKU__PyProtocolWrapper)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_3AKU__PyProtocolWrapper)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_wrap = ((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":855
 * def as_itemgetter(obj):
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj             # <<<<<<<<<<<<<<
 *     wrap._type_flags = OBJ_AS_INDEX
 *     return wrap
 */
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  __Pyx_GOTREF(__pyx_v_wrap->_obj);
  __Pyx_DECREF(__pyx_v_wrap->_obj);
  __pyx_v_wrap->_obj = __pyx_v_obj;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":856
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 *     wrap._type_flags = OBJ_AS_INDEX             # <<<<<<<<<<<<<<
 *     return wrap
 * 
 */
  __pyx_v_wrap->_type_flags = __pyx_e_3AKU_OBJ_AS_INDEX;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":857
 *     wrap._obj = obj
 *     wrap._type_flags = OBJ_AS_INDEX
 *     return wrap             # <<<<<<<<<<<<<<
 * 
 * cdef object py_from_lua(LuaRuntime runtime, lua_State *L, int n):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_wrap));
  __pyx_r = ((PyObject *)__pyx_v_wrap);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.as_itemgetter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_wrap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":859
 *     return wrap
 * 
 * cdef object py_from_lua(LuaRuntime runtime, lua_State *L, int n):             # <<<<<<<<<<<<<<
 *     cdef size_t size
 *     cdef const_char_ptr s
 */

static PyObject *__pyx_f_3AKU_py_from_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_n) {
  size_t __pyx_v_size;
  const char* __pyx_v_s;
  lua_Number __pyx_v_number;
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_lua_type;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("py_from_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":865
 *     cdef py_object* py_obj
 * 
 *     if n < 0 :             # <<<<<<<<<<<<<<
 *         n = lua.lua_gettop(L) + n + 1
 *     cdef int lua_type = lua.lua_type(L, n)
 */
  __pyx_t_1 = (__pyx_v_n < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":866
 * 
 *     if n < 0 :
 *         n = lua.lua_gettop(L) + n + 1             # <<<<<<<<<<<<<<
 *     cdef int lua_type = lua.lua_type(L, n)
 * 
 */
    __pyx_v_n = ((lua_gettop(__pyx_v_L) + __pyx_v_n) + 1);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":867
 *     if n < 0 :
 *         n = lua.lua_gettop(L) + n + 1
 *     cdef int lua_type = lua.lua_type(L, n)             # <<<<<<<<<<<<<<
 * 
 *     if lua_type == lua.LUA_TNIL:
 */
  __pyx_v_lua_type = lua_type(__pyx_v_L, __pyx_v_n);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":898
 *     elif lua_type == lua.LUA_TTHREAD:
 *         return new_lua_thread_or_function(runtime, L, n)
 *     elif lua_type == lua.LUA_TFUNCTION:             # <<<<<<<<<<<<<<
 *         py_obj = unpack_wrapped_pyfunction(L, n)
 *         if py_obj:
 */
  switch (__pyx_v_lua_type) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":869
 *     cdef int lua_type = lua.lua_type(L, n)
 * 
 *     if lua_type == lua.LUA_TNIL:             # <<<<<<<<<<<<<<
 *         return None
 *     elif lua_type == lua.LUA_TNUMBER:
 */
    case LUA_TNIL:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":870
 * 
 *     if lua_type == lua.LUA_TNIL:
 *         return None             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TNUMBER:
 *         number = lua.lua_tonumber(L, n)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":871
 *     if lua_type == lua.LUA_TNIL:
 *         return None
 *     elif lua_type == lua.LUA_TNUMBER:             # <<<<<<<<<<<<<<
 *         number = lua.lua_tonumber(L, n)
 *         if number != <long>number:
 */
    case LUA_TNUMBER:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":872
 *         return None
 *     elif lua_type == lua.LUA_TNUMBER:
 *         number = lua.lua_tonumber(L, n)             # <<<<<<<<<<<<<<
 *         if number != <long>number:
 *             return <double>number
 */
    __pyx_v_number = lua_tonumber(__pyx_v_L, __pyx_v_n);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":873
 *     elif lua_type == lua.LUA_TNUMBER:
 *         number = lua.lua_tonumber(L, n)
 *         if number != <long>number:             # <<<<<<<<<<<<<<
 *             return <double>number
 *         else:
 */
    __pyx_t_1 = (__pyx_v_number != ((long)__pyx_v_number));
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":874
 *         number = lua.lua_tonumber(L, n)
 *         if number != <long>number:
 *             return <double>number             # <<<<<<<<<<<<<<
 *         else:
 *             return <long>number
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyFloat_FromDouble(((double)__pyx_v_number)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L0;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":876
 *             return <double>number
 *         else:
 *             return <long>number             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TSTRING:
 *         s = lua.lua_tolstring(L, n, &size)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(((long)__pyx_v_number)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L0;
    }
    __pyx_L4:;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":877
 *         else:
 *             return <long>number
 *     elif lua_type == lua.LUA_TSTRING:             # <<<<<<<<<<<<<<
 *         s = lua.lua_tolstring(L, n, &size)
 *         if runtime._encoding is not None:
 */
    case LUA_TSTRING:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":878
 *             return <long>number
 *     elif lua_type == lua.LUA_TSTRING:
 *         s = lua.lua_tolstring(L, n, &size)             # <<<<<<<<<<<<<<
 *         if runtime._encoding is not None:
 *             return s[:size].decode(runtime._encoding)
 */
    __pyx_v_s = lua_tolstring(__pyx_v_L, __pyx_v_n, (&__pyx_v_size));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":879
 *     elif lua_type == lua.LUA_TSTRING:
 *         s = lua.lua_tolstring(L, n, &size)
 *         if runtime._encoding is not None:             # <<<<<<<<<<<<<<
 *             return s[:size].decode(runtime._encoding)
 *         else:
 */
    __pyx_t_1 = (__pyx_v_runtime->_encoding != ((PyObject*)Py_None));
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":880
 *         s = lua.lua_tolstring(L, n, &size)
 *         if runtime._encoding is not None:
 *             return s[:size].decode(runtime._encoding)             # <<<<<<<<<<<<<<
 *         else:
 *             return s[:size]
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyBytes_AsString(((PyObject *)__pyx_v_runtime->_encoding)); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_2 = ((PyObject *)__Pyx_decode_c_string(__pyx_v_s, 0, __pyx_v_size, __pyx_t_3, NULL, NULL)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __pyx_r = ((PyObject *)__pyx_t_2);
      __pyx_t_2 = 0;
      goto __pyx_L0;
      goto __pyx_L5;
    }
    /*else*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":882
 *             return s[:size].decode(runtime._encoding)
 *         else:
 *             return s[:size]             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TBOOLEAN:
 *         return lua.lua_toboolean(L, n)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyBytes_FromStringAndSize(((const char*)__pyx_v_s) + 0, __pyx_v_size - 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __pyx_r = ((PyObject *)__pyx_t_2);
      __pyx_t_2 = 0;
      goto __pyx_L0;
    }
    __pyx_L5:;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":883
 *         else:
 *             return s[:size]
 *     elif lua_type == lua.LUA_TBOOLEAN:             # <<<<<<<<<<<<<<
 *         return lua.lua_toboolean(L, n)
 *     elif lua_type == lua.LUA_TUSERDATA:
 */
    case LUA_TBOOLEAN:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":884
 *             return s[:size]
 *     elif lua_type == lua.LUA_TBOOLEAN:
 *         return lua.lua_toboolean(L, n)             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TUSERDATA:
 *         if lua.lua_getmetatable(L,n):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyBool_FromLong(lua_toboolean(__pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":885
 *     elif lua_type == lua.LUA_TBOOLEAN:
 *         return lua.lua_toboolean(L, n)
 *     elif lua_type == lua.LUA_TUSERDATA:             # <<<<<<<<<<<<<<
 *         if lua.lua_getmetatable(L,n):
 *             lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, POBJECT)
 */
    case LUA_TUSERDATA:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":886
 *         return lua.lua_toboolean(L, n)
 *     elif lua_type == lua.LUA_TUSERDATA:
 *         if lua.lua_getmetatable(L,n):             # <<<<<<<<<<<<<<
 *             lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, POBJECT)
 *             if lua.lua_equal(L, -1, -2):
 */
    __pyx_t_1 = lua_getmetatable(__pyx_v_L, __pyx_v_n);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":887
 *     elif lua_type == lua.LUA_TUSERDATA:
 *         if lua.lua_getmetatable(L,n):
 *             lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, POBJECT)             # <<<<<<<<<<<<<<
 *             if lua.lua_equal(L, -1, -2):
 *                 lua.lua_pop(L,2)
 */
      lua_getfield(__pyx_v_L, LUA_REGISTRYINDEX, __pyx_k__POBJECT);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":888
 *         if lua.lua_getmetatable(L,n):
 *             lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, POBJECT)
 *             if lua.lua_equal(L, -1, -2):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L,2)
 *                 py_obj = <py_object*>lua.lua_touserdata(L, n)#, POBJECT) # FIXME: doesn't return on error!
 */
      __pyx_t_4 = lua_equal(__pyx_v_L, -1, -2);
      if (__pyx_t_4) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":889
 *             lua.lua_getfield(L, lua.LUA_REGISTRYINDEX, POBJECT)
 *             if lua.lua_equal(L, -1, -2):
 *                 lua.lua_pop(L,2)             # <<<<<<<<<<<<<<
 *                 py_obj = <py_object*>lua.lua_touserdata(L, n)#, POBJECT) # FIXME: doesn't return on error!
 *                 if py_obj:
 */
        lua_pop(__pyx_v_L, 2);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":890
 *             if lua.lua_equal(L, -1, -2):
 *                 lua.lua_pop(L,2)
 *                 py_obj = <py_object*>lua.lua_touserdata(L, n)#, POBJECT) # FIXME: doesn't return on error!             # <<<<<<<<<<<<<<
 *                 if py_obj:
 *                     return <object>py_obj.obj
 */
        __pyx_v_py_obj = ((struct __pyx_t_3AKU_py_object *)lua_touserdata(__pyx_v_L, __pyx_v_n));

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":891
 *                 lua.lua_pop(L,2)
 *                 py_obj = <py_object*>lua.lua_touserdata(L, n)#, POBJECT) # FIXME: doesn't return on error!
 *                 if py_obj:             # <<<<<<<<<<<<<<
 *                     return <object>py_obj.obj
 *         return new_lua_object(runtime, L, n)
 */
        __pyx_t_1 = (__pyx_v_py_obj != 0);
        if (__pyx_t_1) {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":892
 *                 py_obj = <py_object*>lua.lua_touserdata(L, n)#, POBJECT) # FIXME: doesn't return on error!
 *                 if py_obj:
 *                     return <object>py_obj.obj             # <<<<<<<<<<<<<<
 *         return new_lua_object(runtime, L, n)
 *     elif lua_type == lua.LUA_TTABLE:
 */
          __Pyx_XDECREF(__pyx_r);
          __Pyx_INCREF(((PyObject *)__pyx_v_py_obj->obj));
          __pyx_r = ((PyObject *)__pyx_v_py_obj->obj);
          goto __pyx_L0;
          goto __pyx_L8;
        }
        __pyx_L8:;
        goto __pyx_L7;
      }
      __pyx_L7:;
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":893
 *                 if py_obj:
 *                     return <object>py_obj.obj
 *         return new_lua_object(runtime, L, n)             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TTABLE:
 *         return new_lua_table(runtime, L, n)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_3AKU_new_lua_object(__pyx_v_runtime, __pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":894
 *                     return <object>py_obj.obj
 *         return new_lua_object(runtime, L, n)
 *     elif lua_type == lua.LUA_TTABLE:             # <<<<<<<<<<<<<<
 *         return new_lua_table(runtime, L, n)
 *     elif lua_type == lua.LUA_TTHREAD:
 */
    case LUA_TTABLE:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":895
 *         return new_lua_object(runtime, L, n)
 *     elif lua_type == lua.LUA_TTABLE:
 *         return new_lua_table(runtime, L, n)             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TTHREAD:
 *         return new_lua_thread_or_function(runtime, L, n)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_3AKU_new_lua_table(__pyx_v_runtime, __pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":896
 *     elif lua_type == lua.LUA_TTABLE:
 *         return new_lua_table(runtime, L, n)
 *     elif lua_type == lua.LUA_TTHREAD:             # <<<<<<<<<<<<<<
 *         return new_lua_thread_or_function(runtime, L, n)
 *     elif lua_type == lua.LUA_TFUNCTION:
 */
    case LUA_TTHREAD:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":897
 *         return new_lua_table(runtime, L, n)
 *     elif lua_type == lua.LUA_TTHREAD:
 *         return new_lua_thread_or_function(runtime, L, n)             # <<<<<<<<<<<<<<
 *     elif lua_type == lua.LUA_TFUNCTION:
 *         py_obj = unpack_wrapped_pyfunction(L, n)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_3AKU_new_lua_thread_or_function(__pyx_v_runtime, __pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":898
 *     elif lua_type == lua.LUA_TTHREAD:
 *         return new_lua_thread_or_function(runtime, L, n)
 *     elif lua_type == lua.LUA_TFUNCTION:             # <<<<<<<<<<<<<<
 *         py_obj = unpack_wrapped_pyfunction(L, n)
 *         if py_obj:
 */
    case LUA_TFUNCTION:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":899
 *         return new_lua_thread_or_function(runtime, L, n)
 *     elif lua_type == lua.LUA_TFUNCTION:
 *         py_obj = unpack_wrapped_pyfunction(L, n)             # <<<<<<<<<<<<<<
 *         if py_obj:
 *             return <object>py_obj.obj
 */
    __pyx_v_py_obj = __pyx_f_3AKU_unpack_wrapped_pyfunction(__pyx_v_L, __pyx_v_n);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":900
 *     elif lua_type == lua.LUA_TFUNCTION:
 *         py_obj = unpack_wrapped_pyfunction(L, n)
 *         if py_obj:             # <<<<<<<<<<<<<<
 *             return <object>py_obj.obj
 *         return new_lua_function(runtime, L, n)
 */
    __pyx_t_1 = (__pyx_v_py_obj != 0);
    if (__pyx_t_1) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":901
 *         py_obj = unpack_wrapped_pyfunction(L, n)
 *         if py_obj:
 *             return <object>py_obj.obj             # <<<<<<<<<<<<<<
 *         return new_lua_function(runtime, L, n)
 *     else:
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(((PyObject *)__pyx_v_py_obj->obj));
      __pyx_r = ((PyObject *)__pyx_v_py_obj->obj);
      goto __pyx_L0;
      goto __pyx_L9;
    }
    __pyx_L9:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":902
 *         if py_obj:
 *             return <object>py_obj.obj
 *         return new_lua_function(runtime, L, n)             # <<<<<<<<<<<<<<
 *     else:
 *         raise LuaError("unkown lua value type")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_3AKU_new_lua_function(__pyx_v_runtime, __pyx_v_L, __pyx_v_n)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;
    default:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":904
 *         return new_lua_function(runtime, L, n)
 *     else:
 *         raise LuaError("unkown lua value type")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_39), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("AKU.py_from_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":907
 * 
 * 
 * cdef int py_to_lua(LuaRuntime runtime, lua_State *L, object o, bint withnone) except -1:             # <<<<<<<<<<<<<<
 *     cdef int pushed_values_count = 0
 *     cdef int type_flags = 0
 */

static int __pyx_f_3AKU_py_to_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_o, int __pyx_v_withnone) {
  int __pyx_v_pushed_values_count;
  int __pyx_v_type_flags;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  long __pyx_t_5;
  char *__pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("py_to_lua", 0);
  __Pyx_INCREF(__pyx_v_o);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":908
 * 
 * cdef int py_to_lua(LuaRuntime runtime, lua_State *L, object o, bint withnone) except -1:
 *     cdef int pushed_values_count = 0             # <<<<<<<<<<<<<<
 *     cdef int type_flags = 0
 * 
 */
  __pyx_v_pushed_values_count = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":909
 * cdef int py_to_lua(LuaRuntime runtime, lua_State *L, object o, bint withnone) except -1:
 *     cdef int pushed_values_count = 0
 *     cdef int type_flags = 0             # <<<<<<<<<<<<<<
 * 
 *     if o is None:
 */
  __pyx_v_type_flags = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":911
 *     cdef int type_flags = 0
 * 
 *     if o is None:             # <<<<<<<<<<<<<<
 *         if withnone:
 *             lua.lua_pushlstring(L, "Py_None", 7)
 */
  __pyx_t_1 = (__pyx_v_o == Py_None);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":912
 * 
 *     if o is None:
 *         if withnone:             # <<<<<<<<<<<<<<
 *             lua.lua_pushlstring(L, "Py_None", 7)
 *             lua.lua_rawget(L, lua.LUA_REGISTRYINDEX)
 */
    if (__pyx_v_withnone) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":913
 *     if o is None:
 *         if withnone:
 *             lua.lua_pushlstring(L, "Py_None", 7)             # <<<<<<<<<<<<<<
 *             lua.lua_rawget(L, lua.LUA_REGISTRYINDEX)
 *             if lua.lua_isnil(L, -1):
 */
      lua_pushlstring(__pyx_v_L, __pyx_k__Py_None, 7);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":914
 *         if withnone:
 *             lua.lua_pushlstring(L, "Py_None", 7)
 *             lua.lua_rawget(L, lua.LUA_REGISTRYINDEX)             # <<<<<<<<<<<<<<
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 */
      lua_rawget(__pyx_v_L, LUA_REGISTRYINDEX);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":915
 *             lua.lua_pushlstring(L, "Py_None", 7)
 *             lua.lua_rawget(L, lua.LUA_REGISTRYINDEX)
 *             if lua.lua_isnil(L, -1):             # <<<<<<<<<<<<<<
 *                 lua.lua_pop(L, 1)
 *                 return 0
 */
      __pyx_t_1 = lua_isnil(__pyx_v_L, -1);
      if (__pyx_t_1) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":916
 *             lua.lua_rawget(L, lua.LUA_REGISTRYINDEX)
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)             # <<<<<<<<<<<<<<
 *                 return 0
 *             pushed_values_count = 1
 */
        lua_pop(__pyx_v_L, 1);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":917
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 return 0             # <<<<<<<<<<<<<<
 *             pushed_values_count = 1
 *         else:
 */
        __pyx_r = 0;
        goto __pyx_L0;
        goto __pyx_L5;
      }
      __pyx_L5:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":918
 *                 lua.lua_pop(L, 1)
 *                 return 0
 *             pushed_values_count = 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Not really needed, but this way we may check for errors
 */
      __pyx_v_pushed_values_count = 1;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":922
 *             # Not really needed, but this way we may check for errors
 *             # with pushed_values_count == 0.
 *             lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *             pushed_values_count = 1
 *     elif type(o) is bool:
 */
      lua_pushnil(__pyx_v_L);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":923
 *             # with pushed_values_count == 0.
 *             lua.lua_pushnil(L)
 *             pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif type(o) is bool:
 *         lua.lua_pushboolean(L, <bint>o)
 */
      __pyx_v_pushed_values_count = 1;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":924
 *             lua.lua_pushnil(L)
 *             pushed_values_count = 1
 *     elif type(o) is bool:             # <<<<<<<<<<<<<<
 *         lua.lua_pushboolean(L, <bint>o)
 *         pushed_values_count = 1
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_o)) == ((PyObject*)&PyBool_Type));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":925
 *             pushed_values_count = 1
 *     elif type(o) is bool:
 *         lua.lua_pushboolean(L, <bint>o)             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif type(o) is float:
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_o); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushboolean(__pyx_v_L, ((int)__pyx_t_1));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":926
 *     elif type(o) is bool:
 *         lua.lua_pushboolean(L, <bint>o)
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif type(o) is float:
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.float.PyFloat_AS_DOUBLE(o))
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":927
 *         lua.lua_pushboolean(L, <bint>o)
 *         pushed_values_count = 1
 *     elif type(o) is float:             # <<<<<<<<<<<<<<
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.float.PyFloat_AS_DOUBLE(o))
 *         pushed_values_count = 1
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_o)) == ((PyObject *)((PyObject*)(&PyFloat_Type))));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":928
 *         pushed_values_count = 1
 *     elif type(o) is float:
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.float.PyFloat_AS_DOUBLE(o))             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif isinstance(o, long):
 */
    __pyx_t_2 = PyFloat_AS_DOUBLE(__pyx_v_o); if (unlikely(__pyx_t_2 == -1.0 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushnumber(__pyx_v_L, ((lua_Number)__pyx_t_2));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":929
 *     elif type(o) is float:
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.float.PyFloat_AS_DOUBLE(o))
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif isinstance(o, long):
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.long.PyLong_AsDouble(o))
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":930
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.float.PyFloat_AS_DOUBLE(o))
 *         pushed_values_count = 1
 *     elif isinstance(o, long):             # <<<<<<<<<<<<<<
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.long.PyLong_AsDouble(o))
 *         pushed_values_count = 1
 */
  __pyx_t_1 = PyLong_Check(__pyx_v_o); 
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":931
 *         pushed_values_count = 1
 *     elif isinstance(o, long):
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.long.PyLong_AsDouble(o))             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif PY_MAJOR_VERSION < 3 and isinstance(o, int):
 */
    __pyx_t_2 = PyLong_AsDouble(__pyx_v_o); if (unlikely(__pyx_t_2 == (-1.0) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushnumber(__pyx_v_L, ((lua_Number)__pyx_t_2));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":932
 *     elif isinstance(o, long):
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.long.PyLong_AsDouble(o))
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif PY_MAJOR_VERSION < 3 and isinstance(o, int):
 *         lua.lua_pushnumber(L, <lua.lua_Number><long>o)
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":933
 *         lua.lua_pushnumber(L, <lua.lua_Number>cpython.long.PyLong_AsDouble(o))
 *         pushed_values_count = 1
 *     elif PY_MAJOR_VERSION < 3 and isinstance(o, int):             # <<<<<<<<<<<<<<
 *         lua.lua_pushnumber(L, <lua.lua_Number><long>o)
 *         pushed_values_count = 1
 */
  __pyx_t_1 = (PY_MAJOR_VERSION < 3);
  if (__pyx_t_1) {
    __pyx_t_3 = PyInt_Check(__pyx_v_o); 
    __pyx_t_4 = __pyx_t_3;
  } else {
    __pyx_t_4 = __pyx_t_1;
  }
  if (__pyx_t_4) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":934
 *         pushed_values_count = 1
 *     elif PY_MAJOR_VERSION < 3 and isinstance(o, int):
 *         lua.lua_pushnumber(L, <lua.lua_Number><long>o)             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif isinstance(o, bytes):
 */
    __pyx_t_5 = __Pyx_PyInt_AsLong(__pyx_v_o); if (unlikely((__pyx_t_5 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushnumber(__pyx_v_L, ((lua_Number)((long)__pyx_t_5)));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":935
 *     elif PY_MAJOR_VERSION < 3 and isinstance(o, int):
 *         lua.lua_pushnumber(L, <lua.lua_Number><long>o)
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif isinstance(o, bytes):
 *         lua.lua_pushlstring(L, <char*>(<bytes>o), len(<bytes>o))
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":936
 *         lua.lua_pushnumber(L, <lua.lua_Number><long>o)
 *         pushed_values_count = 1
 *     elif isinstance(o, bytes):             # <<<<<<<<<<<<<<
 *         lua.lua_pushlstring(L, <char*>(<bytes>o), len(<bytes>o))
 *         pushed_values_count = 1
 */
  __pyx_t_4 = PyBytes_Check(__pyx_v_o); 
  if (__pyx_t_4) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":937
 *         pushed_values_count = 1
 *     elif isinstance(o, bytes):
 *         lua.lua_pushlstring(L, <char*>(<bytes>o), len(<bytes>o))             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif isinstance(o, unicode) and runtime._encoding is not None:
 */
    __pyx_t_6 = PyBytes_AsString(__pyx_v_o); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (unlikely(__pyx_v_o == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_7 = PyBytes_GET_SIZE(((PyObject *)((PyObject*)__pyx_v_o))); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushlstring(__pyx_v_L, ((char *)__pyx_t_6), __pyx_t_7);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":938
 *     elif isinstance(o, bytes):
 *         lua.lua_pushlstring(L, <char*>(<bytes>o), len(<bytes>o))
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif isinstance(o, unicode) and runtime._encoding is not None:
 *         pushed_values_count = push_encoded_unicode_string(runtime, L, <unicode>o)
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":939
 *         lua.lua_pushlstring(L, <char*>(<bytes>o), len(<bytes>o))
 *         pushed_values_count = 1
 *     elif isinstance(o, unicode) and runtime._encoding is not None:             # <<<<<<<<<<<<<<
 *         pushed_values_count = push_encoded_unicode_string(runtime, L, <unicode>o)
 *     elif isinstance(o, _LuaObject):
 */
  __pyx_t_4 = PyUnicode_Check(__pyx_v_o); 
  if (__pyx_t_4) {
    __pyx_t_1 = (__pyx_v_runtime->_encoding != ((PyObject*)Py_None));
    __pyx_t_3 = __pyx_t_1;
  } else {
    __pyx_t_3 = __pyx_t_4;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":940
 *         pushed_values_count = 1
 *     elif isinstance(o, unicode) and runtime._encoding is not None:
 *         pushed_values_count = push_encoded_unicode_string(runtime, L, <unicode>o)             # <<<<<<<<<<<<<<
 *     elif isinstance(o, _LuaObject):
 *         if (<_LuaObject>o)._runtime is not runtime:
 */
    __pyx_t_8 = __pyx_f_3AKU_push_encoded_unicode_string(__pyx_v_runtime, __pyx_v_L, ((PyObject*)__pyx_v_o)); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_pushed_values_count = __pyx_t_8;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":941
 *     elif isinstance(o, unicode) and runtime._encoding is not None:
 *         pushed_values_count = push_encoded_unicode_string(runtime, L, <unicode>o)
 *     elif isinstance(o, _LuaObject):             # <<<<<<<<<<<<<<
 *         if (<_LuaObject>o)._runtime is not runtime:
 *             raise LuaError("cannot mix objects from different Lua runtimes")
 */
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_o, ((PyObject*)__pyx_ptype_3AKU__LuaObject)); 
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":942
 *         pushed_values_count = push_encoded_unicode_string(runtime, L, <unicode>o)
 *     elif isinstance(o, _LuaObject):
 *         if (<_LuaObject>o)._runtime is not runtime:             # <<<<<<<<<<<<<<
 *             raise LuaError("cannot mix objects from different Lua runtimes")
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)
 */
    __pyx_t_3 = (((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_o)->_runtime != __pyx_v_runtime);
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":943
 *     elif isinstance(o, _LuaObject):
 *         if (<_LuaObject>o)._runtime is not runtime:
 *             raise LuaError("cannot mix objects from different Lua runtimes")             # <<<<<<<<<<<<<<
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)
 *         pushed_values_count = 1
 */
      __pyx_t_9 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyObject_Call(__pyx_t_9, ((PyObject *)__pyx_k_tuple_41), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_Raise(__pyx_t_10, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":944
 *         if (<_LuaObject>o)._runtime is not runtime:
 *             raise LuaError("cannot mix objects from different Lua runtimes")
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     elif isinstance(o, float):
 */
    lua_rawgeti(__pyx_v_L, LUA_REGISTRYINDEX, ((struct __pyx_obj_3AKU__LuaObject *)__pyx_v_o)->_ref);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":945
 *             raise LuaError("cannot mix objects from different Lua runtimes")
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     elif isinstance(o, float):
 *         lua.lua_pushnumber(L, <lua.lua_Number><double>o)
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":946
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)
 *         pushed_values_count = 1
 *     elif isinstance(o, float):             # <<<<<<<<<<<<<<
 *         lua.lua_pushnumber(L, <lua.lua_Number><double>o)
 *         pushed_values_count = 1
 */
  __pyx_t_3 = PyFloat_Check(__pyx_v_o); 
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":947
 *         pushed_values_count = 1
 *     elif isinstance(o, float):
 *         lua.lua_pushnumber(L, <lua.lua_Number><double>o)             # <<<<<<<<<<<<<<
 *         pushed_values_count = 1
 *     else:
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_o); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    lua_pushnumber(__pyx_v_L, ((lua_Number)((double)__pyx_t_2)));

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":948
 *     elif isinstance(o, float):
 *         lua.lua_pushnumber(L, <lua.lua_Number><double>o)
 *         pushed_values_count = 1             # <<<<<<<<<<<<<<
 *     else:
 *         if isinstance(o, _PyProtocolWrapper):
 */
    __pyx_v_pushed_values_count = 1;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":950
 *         pushed_values_count = 1
 *     else:
 *         if isinstance(o, _PyProtocolWrapper):             # <<<<<<<<<<<<<<
 *             type_flags = (<_PyProtocolWrapper>o)._type_flags
 *             o = (<_PyProtocolWrapper>o)._obj
 */
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_o, ((PyObject*)__pyx_ptype_3AKU__PyProtocolWrapper)); 
    if (__pyx_t_3) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":951
 *     else:
 *         if isinstance(o, _PyProtocolWrapper):
 *             type_flags = (<_PyProtocolWrapper>o)._type_flags             # <<<<<<<<<<<<<<
 *             o = (<_PyProtocolWrapper>o)._obj
 *         else:
 */
      __pyx_t_8 = ((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_v_o)->_type_flags;
      __pyx_v_type_flags = __pyx_t_8;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":952
 *         if isinstance(o, _PyProtocolWrapper):
 *             type_flags = (<_PyProtocolWrapper>o)._type_flags
 *             o = (<_PyProtocolWrapper>o)._obj             # <<<<<<<<<<<<<<
 *         else:
 *             # prefer __getitem__ over __getattr__ by default
 */
      __pyx_t_10 = ((struct __pyx_obj_3AKU__PyProtocolWrapper *)__pyx_v_o)->_obj;
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_v_o);
      __pyx_v_o = __pyx_t_10;
      __pyx_t_10 = 0;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":955
 *         else:
 *             # prefer __getitem__ over __getattr__ by default
 *             if hasattr( o, '__func__' ): o = o.__func__             # <<<<<<<<<<<<<<
 *             type_flags = OBJ_AS_INDEX if hasattr(o, '__getitem__') else 0
 *         pushed_values_count = py_to_lua_custom(runtime, L, o, type_flags)
 */
      __pyx_t_3 = PyObject_HasAttr(__pyx_v_o, ((PyObject *)__pyx_n_s____func__)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_3) {
        __pyx_t_10 = PyObject_GetAttr(__pyx_v_o, __pyx_n_s____func__); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_v_o);
        __pyx_v_o = __pyx_t_10;
        __pyx_t_10 = 0;
        goto __pyx_L8;
      }
      __pyx_L8:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":956
 *             # prefer __getitem__ over __getattr__ by default
 *             if hasattr( o, '__func__' ): o = o.__func__
 *             type_flags = OBJ_AS_INDEX if hasattr(o, '__getitem__') else 0             # <<<<<<<<<<<<<<
 *         pushed_values_count = py_to_lua_custom(runtime, L, o, type_flags)
 *     return pushed_values_count
 */
      __pyx_t_3 = PyObject_HasAttr(__pyx_v_o, ((PyObject *)__pyx_n_s____getitem__)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_3) {
        __pyx_t_5 = __pyx_e_3AKU_OBJ_AS_INDEX;
      } else {
        __pyx_t_5 = 0;
      }
      __pyx_v_type_flags = __pyx_t_5;
    }
    __pyx_L7:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":957
 *             if hasattr( o, '__func__' ): o = o.__func__
 *             type_flags = OBJ_AS_INDEX if hasattr(o, '__getitem__') else 0
 *         pushed_values_count = py_to_lua_custom(runtime, L, o, type_flags)             # <<<<<<<<<<<<<<
 *     return pushed_values_count
 * 
 */
    __pyx_v_pushed_values_count = __pyx_f_3AKU_py_to_lua_custom(__pyx_v_runtime, __pyx_v_L, __pyx_v_o, __pyx_v_type_flags);
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":958
 *             type_flags = OBJ_AS_INDEX if hasattr(o, '__getitem__') else 0
 *         pushed_values_count = py_to_lua_custom(runtime, L, o, type_flags)
 *     return pushed_values_count             # <<<<<<<<<<<<<<
 * 
 * cdef int push_encoded_unicode_string(LuaRuntime runtime, lua_State *L, unicode ustring) except -1:
 */
  __pyx_r = __pyx_v_pushed_values_count;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("AKU.py_to_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":960
 *     return pushed_values_count
 * 
 * cdef int push_encoded_unicode_string(LuaRuntime runtime, lua_State *L, unicode ustring) except -1:             # <<<<<<<<<<<<<<
 *     cdef bytes bytes_string = ustring.encode(runtime._encoding)
 *     lua.lua_pushlstring(L, <char*>bytes_string, len(bytes_string))
 */

static int __pyx_f_3AKU_push_encoded_unicode_string(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_ustring) {
  PyObject *__pyx_v_bytes_string = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_encoded_unicode_string", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":961
 * 
 * cdef int push_encoded_unicode_string(LuaRuntime runtime, lua_State *L, unicode ustring) except -1:
 *     cdef bytes bytes_string = ustring.encode(runtime._encoding)             # <<<<<<<<<<<<<<
 *     lua.lua_pushlstring(L, <char*>bytes_string, len(bytes_string))
 *     return 1
 */
  if (unlikely(((PyObject *)__pyx_v_ustring) == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_runtime->_encoding)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((PyObject *)PyUnicode_AsEncodedString(__pyx_v_ustring, __pyx_t_1, NULL)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (!(likely(PyBytes_CheckExact(((PyObject *)__pyx_t_2)))||(PyErr_Format(PyExc_TypeError, "Expected bytes, got %.200s", Py_TYPE(((PyObject *)__pyx_t_2))->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_bytes_string = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":962
 * cdef int push_encoded_unicode_string(LuaRuntime runtime, lua_State *L, unicode ustring) except -1:
 *     cdef bytes bytes_string = ustring.encode(runtime._encoding)
 *     lua.lua_pushlstring(L, <char*>bytes_string, len(bytes_string))             # <<<<<<<<<<<<<<
 *     return 1
 * 
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_bytes_string)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_bytes_string) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_bytes_string)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  lua_pushlstring(__pyx_v_L, ((char *)__pyx_t_1), __pyx_t_3);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":963
 *     cdef bytes bytes_string = ustring.encode(runtime._encoding)
 *     lua.lua_pushlstring(L, <char*>bytes_string, len(bytes_string))
 *     return 1             # <<<<<<<<<<<<<<
 * 
 * cdef bint py_to_lua_custom(LuaRuntime runtime, lua_State *L, object o, int type_flags):
 */
  __pyx_r = 1;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.push_encoded_unicode_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bytes_string);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":965
 *     return 1
 * 
 * cdef bint py_to_lua_custom(LuaRuntime runtime, lua_State *L, object o, int type_flags):             # <<<<<<<<<<<<<<
 *     cdef py_object *py_obj = <py_object*> lua.lua_newuserdata(L, sizeof(py_object))
 *     if not py_obj:
 */

static int __pyx_f_3AKU_py_to_lua_custom(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_o, int __pyx_v_type_flags) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("py_to_lua_custom", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":966
 * 
 * cdef bint py_to_lua_custom(LuaRuntime runtime, lua_State *L, object o, int type_flags):
 *     cdef py_object *py_obj = <py_object*> lua.lua_newuserdata(L, sizeof(py_object))             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return 0 # values pushed
 */
  __pyx_v_py_obj = ((struct __pyx_t_3AKU_py_object *)lua_newuserdata(__pyx_v_L, (sizeof(struct __pyx_t_3AKU_py_object))));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":967
 * cdef bint py_to_lua_custom(LuaRuntime runtime, lua_State *L, object o, int type_flags):
 *     cdef py_object *py_obj = <py_object*> lua.lua_newuserdata(L, sizeof(py_object))
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return 0 # values pushed
 *     cpython.ref.Py_INCREF(o)
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":968
 *     cdef py_object *py_obj = <py_object*> lua.lua_newuserdata(L, sizeof(py_object))
 *     if not py_obj:
 *         return 0 # values pushed             # <<<<<<<<<<<<<<
 *     cpython.ref.Py_INCREF(o)
 *     py_obj.obj = <PyObject*>o
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":969
 *     if not py_obj:
 *         return 0 # values pushed
 *     cpython.ref.Py_INCREF(o)             # <<<<<<<<<<<<<<
 *     py_obj.obj = <PyObject*>o
 *     py_obj.runtime = <PyObject*>runtime
 */
  Py_INCREF(__pyx_v_o);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":970
 *         return 0 # values pushed
 *     cpython.ref.Py_INCREF(o)
 *     py_obj.obj = <PyObject*>o             # <<<<<<<<<<<<<<
 *     py_obj.runtime = <PyObject*>runtime
 *     py_obj.type_flags = type_flags
 */
  __pyx_v_py_obj->obj = ((PyObject *)__pyx_v_o);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":971
 *     cpython.ref.Py_INCREF(o)
 *     py_obj.obj = <PyObject*>o
 *     py_obj.runtime = <PyObject*>runtime             # <<<<<<<<<<<<<<
 *     py_obj.type_flags = type_flags
 *     lua.luaL_getmetatable(L, POBJECT)
 */
  __pyx_v_py_obj->runtime = ((PyObject *)__pyx_v_runtime);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":972
 *     py_obj.obj = <PyObject*>o
 *     py_obj.runtime = <PyObject*>runtime
 *     py_obj.type_flags = type_flags             # <<<<<<<<<<<<<<
 *     lua.luaL_getmetatable(L, POBJECT)
 *     lua.lua_setmetatable(L, -2)
 */
  __pyx_v_py_obj->type_flags = __pyx_v_type_flags;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":973
 *     py_obj.runtime = <PyObject*>runtime
 *     py_obj.type_flags = type_flags
 *     lua.luaL_getmetatable(L, POBJECT)             # <<<<<<<<<<<<<<
 *     lua.lua_setmetatable(L, -2)
 *     return 1 # values pushed
 */
  luaL_getmetatable(__pyx_v_L, __pyx_k__POBJECT);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":974
 *     py_obj.type_flags = type_flags
 *     lua.luaL_getmetatable(L, POBJECT)
 *     lua.lua_setmetatable(L, -2)             # <<<<<<<<<<<<<<
 *     return 1 # values pushed
 * 
 */
  lua_setmetatable(__pyx_v_L, -2);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":975
 *     lua.luaL_getmetatable(L, POBJECT)
 *     lua.lua_setmetatable(L, -2)
 *     return 1 # values pushed             # <<<<<<<<<<<<<<
 * 
 * # error handling
 */
  __pyx_r = 1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":979
 * # error handling
 * 
 * cdef int raise_lua_error(LuaRuntime runtime, lua_State* L, int result) except -1:             # <<<<<<<<<<<<<<
 *     if result == 0:
 *         return 0
 */

static int __pyx_f_3AKU_raise_lua_error(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_result) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raise_lua_error", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":982
 *     if result == 0:
 *         return 0
 *     elif result == lua.LUA_ERRMEM:             # <<<<<<<<<<<<<<
 *         cpython.exc.PyErr_NoMemory()
 *     else:
 */
  switch (__pyx_v_result) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":980
 * 
 * cdef int raise_lua_error(LuaRuntime runtime, lua_State* L, int result) except -1:
 *     if result == 0:             # <<<<<<<<<<<<<<
 *         return 0
 *     elif result == lua.LUA_ERRMEM:
 */
    case 0:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":981
 * cdef int raise_lua_error(LuaRuntime runtime, lua_State* L, int result) except -1:
 *     if result == 0:
 *         return 0             # <<<<<<<<<<<<<<
 *     elif result == lua.LUA_ERRMEM:
 *         cpython.exc.PyErr_NoMemory()
 */
    __pyx_r = 0;
    goto __pyx_L0;
    break;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":982
 *     if result == 0:
 *         return 0
 *     elif result == lua.LUA_ERRMEM:             # <<<<<<<<<<<<<<
 *         cpython.exc.PyErr_NoMemory()
 *     else:
 */
    case LUA_ERRMEM:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":983
 *         return 0
 *     elif result == lua.LUA_ERRMEM:
 *         cpython.exc.PyErr_NoMemory()             # <<<<<<<<<<<<<<
 *     else:
 *         raise LuaError( build_lua_error_message(runtime, L, None, -1) )
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__cpython); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__exc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__PyErr_NoMemory); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    break;
    default:

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":985
 *         cpython.exc.PyErr_NoMemory()
 *     else:
 *         raise LuaError( build_lua_error_message(runtime, L, None, -1) )             # <<<<<<<<<<<<<<
 * 
 * cdef build_lua_error_message(LuaRuntime runtime, lua_State* L, unicode err_message, int n):
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_f_3AKU_build_lua_error_message(__pyx_v_runtime, __pyx_v_L, ((PyObject*)Py_None), -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.raise_lua_error", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":987
 *         raise LuaError( build_lua_error_message(runtime, L, None, -1) )
 * 
 * cdef build_lua_error_message(LuaRuntime runtime, lua_State* L, unicode err_message, int n):             # <<<<<<<<<<<<<<
 *     cdef size_t size
 *     cdef const_char_ptr s = lua.lua_tolstring(L, n, &size)
 */

static PyObject *__pyx_f_3AKU_build_lua_error_message(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_err_message, int __pyx_v_n) {
  size_t __pyx_v_size;
  const char* __pyx_v_s;
  PyObject *__pyx_v_py_ustring = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  char *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build_lua_error_message", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":989
 * cdef build_lua_error_message(LuaRuntime runtime, lua_State* L, unicode err_message, int n):
 *     cdef size_t size
 *     cdef const_char_ptr s = lua.lua_tolstring(L, n, &size)             # <<<<<<<<<<<<<<
 *     if runtime._encoding is not None:
 *         try:
 */
  __pyx_v_s = lua_tolstring(__pyx_v_L, __pyx_v_n, (&__pyx_v_size));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":990
 *     cdef size_t size
 *     cdef const_char_ptr s = lua.lua_tolstring(L, n, &size)
 *     if runtime._encoding is not None:             # <<<<<<<<<<<<<<
 *         try:
 *             py_ustring = s[:size].decode(runtime._encoding)
 */
  __pyx_t_1 = (__pyx_v_runtime->_encoding != ((PyObject*)Py_None));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":991
 *     cdef const_char_ptr s = lua.lua_tolstring(L, n, &size)
 *     if runtime._encoding is not None:
 *         try:             # <<<<<<<<<<<<<<
 *             py_ustring = s[:size].decode(runtime._encoding)
 *         except UnicodeDecodeError:
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      /*try:*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":992
 *     if runtime._encoding is not None:
 *         try:
 *             py_ustring = s[:size].decode(runtime._encoding)             # <<<<<<<<<<<<<<
 *         except UnicodeDecodeError:
 *             py_ustring = s[:size].decode('ISO-8859-1') # safe 'fake' decoding
 */
        __pyx_t_5 = PyBytes_AsString(((PyObject *)__pyx_v_runtime->_encoding)); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __pyx_t_6 = ((PyObject *)__Pyx_decode_c_string(__pyx_v_s, 0, __pyx_v_size, __pyx_t_5, NULL, NULL)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_6));
        __pyx_v_py_ustring = ((PyObject *)__pyx_t_6);
        __pyx_t_6 = 0;
      }
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L11_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":993
 *         try:
 *             py_ustring = s[:size].decode(runtime._encoding)
 *         except UnicodeDecodeError:             # <<<<<<<<<<<<<<
 *             py_ustring = s[:size].decode('ISO-8859-1') # safe 'fake' decoding
 *     else:
 */
      __pyx_t_7 = PyErr_ExceptionMatches(__pyx_builtin_UnicodeDecodeError);
      if (__pyx_t_7) {
        __Pyx_AddTraceback("AKU.build_lua_error_message", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_8, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_9);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":994
 *             py_ustring = s[:size].decode(runtime._encoding)
 *         except UnicodeDecodeError:
 *             py_ustring = s[:size].decode('ISO-8859-1') # safe 'fake' decoding             # <<<<<<<<<<<<<<
 *     else:
 *         py_ustring = s[:size].decode('ISO-8859-1')
 */
        __pyx_t_10 = ((PyObject *)__Pyx_decode_c_string(__pyx_v_s, 0, __pyx_v_size, NULL, NULL, PyUnicode_DecodeLatin1)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 994; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_10));
        __Pyx_XDECREF(__pyx_v_py_ustring);
        __pyx_v_py_ustring = ((PyObject *)__pyx_t_10);
        __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L5_exception_handled;
      }
      __pyx_L6_except_error:;
      __Pyx_XGIVEREF(__pyx_t_2);
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
      goto __pyx_L1_error;
      __pyx_L5_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_2);
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
      __pyx_L11_try_end:;
    }
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":996
 *             py_ustring = s[:size].decode('ISO-8859-1') # safe 'fake' decoding
 *     else:
 *         py_ustring = s[:size].decode('ISO-8859-1')             # <<<<<<<<<<<<<<
 *     if err_message is None:
 *         return py_ustring
 */
    __pyx_t_9 = ((PyObject *)__Pyx_decode_c_string(__pyx_v_s, 0, __pyx_v_size, NULL, NULL, PyUnicode_DecodeLatin1)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_9));
    __pyx_v_py_ustring = ((PyObject *)__pyx_t_9);
    __pyx_t_9 = 0;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":997
 *     else:
 *         py_ustring = s[:size].decode('ISO-8859-1')
 *     if err_message is None:             # <<<<<<<<<<<<<<
 *         return py_ustring
 *     else:
 */
  __pyx_t_1 = (__pyx_v_err_message == ((PyObject*)Py_None));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":998
 *         py_ustring = s[:size].decode('ISO-8859-1')
 *     if err_message is None:
 *         return py_ustring             # <<<<<<<<<<<<<<
 *     else:
 *         return err_message % py_ustring
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_py_ustring);
    __pyx_r = __pyx_v_py_ustring;
    goto __pyx_L0;
    goto __pyx_L14;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1000
 *         return py_ustring
 *     else:
 *         return err_message % py_ustring             # <<<<<<<<<<<<<<
 * 
 * # calling into Lua
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_9 = PyNumber_Remainder(((PyObject *)__pyx_v_err_message), __pyx_v_py_ustring); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_9));
    __pyx_r = ((PyObject *)__pyx_t_9);
    __pyx_t_9 = 0;
    goto __pyx_L0;
  }
  __pyx_L14:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("AKU.build_lua_error_message", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_py_ustring);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1004
 * # calling into Lua
 * 
 * cdef run_lua(LuaRuntime runtime, bytes lua_code):             # <<<<<<<<<<<<<<
 *     # locks the runtime
 *     cdef lua_State* L = runtime._state
 */

static PyObject *__pyx_f_3AKU_run_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, PyObject *__pyx_v_lua_code) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  lua_State *__pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("run_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1006
 * cdef run_lua(LuaRuntime runtime, bytes lua_code):
 *     # locks the runtime
 *     cdef lua_State* L = runtime._state             # <<<<<<<<<<<<<<
 *     cdef bint result
 *     lock_runtime(runtime)
 */
  __pyx_t_1 = __pyx_v_runtime->_state;
  __pyx_v_L = __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1008
 *     cdef lua_State* L = runtime._state
 *     cdef bint result
 *     lock_runtime(runtime)             # <<<<<<<<<<<<<<
 *     try:
 *         if lua.luaL_loadbuffer(L, lua_code, len(lua_code), '<python>'):
 */
  __pyx_t_2 = __pyx_f_3AKU_lock_runtime(__pyx_v_runtime); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1009
 *     cdef bint result
 *     lock_runtime(runtime)
 *     try:             # <<<<<<<<<<<<<<
 *         if lua.luaL_loadbuffer(L, lua_code, len(lua_code), '<python>'):
 *             raise LuaSyntaxError(build_lua_error_message(
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1010
 *     lock_runtime(runtime)
 *     try:
 *         if lua.luaL_loadbuffer(L, lua_code, len(lua_code), '<python>'):             # <<<<<<<<<<<<<<
 *             raise LuaSyntaxError(build_lua_error_message(
 *                 runtime, L, u"error loading code: %s", -1))
 */
    __pyx_t_3 = PyBytes_AsString(((PyObject *)__pyx_v_lua_code)); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L4;}
    if (unlikely(((PyObject *)__pyx_v_lua_code) == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L4;}
    }
    __pyx_t_4 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_lua_code)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __pyx_t_2 = luaL_loadbuffer(__pyx_v_L, __pyx_t_3, __pyx_t_4, __pyx_k_42);
    if (__pyx_t_2) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1011
 *     try:
 *         if lua.luaL_loadbuffer(L, lua_code, len(lua_code), '<python>'):
 *             raise LuaSyntaxError(build_lua_error_message(             # <<<<<<<<<<<<<<
 *                 runtime, L, u"error loading code: %s", -1))
 *         return execute_lua_call(runtime, L, 0)
 */
      __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaSyntaxError); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_5);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1012
 *         if lua.luaL_loadbuffer(L, lua_code, len(lua_code), '<python>'):
 *             raise LuaSyntaxError(build_lua_error_message(
 *                 runtime, L, u"error loading code: %s", -1))             # <<<<<<<<<<<<<<
 *         return execute_lua_call(runtime, L, 0)
 *     finally:
 */
      __pyx_t_6 = __pyx_f_3AKU_build_lua_error_message(__pyx_v_runtime, __pyx_v_L, __pyx_kp_u_43, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L4;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L4;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1013
 *             raise LuaSyntaxError(build_lua_error_message(
 *                 runtime, L, u"error loading code: %s", -1))
 *         return execute_lua_call(runtime, L, 0)             # <<<<<<<<<<<<<<
 *     finally:
 *         # resetting the stack is required in case of a syntax error
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __pyx_f_3AKU_execute_lua_call(__pyx_v_runtime, __pyx_v_L, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1018
 *         # above, so we repeat it here even if execute_lua_call() also
 *         # does it
 *         lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *         unlock_runtime(runtime)
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1019
 *         # does it
 *         lua.lua_settop(L, 0)
 *         unlock_runtime(runtime)             # <<<<<<<<<<<<<<
 * 
 * cdef call_lua(LuaRuntime runtime, lua_State *L, tuple args):
 */
    __pyx_f_3AKU_unlock_runtime(__pyx_v_runtime);
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU.run_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1021
 *         unlock_runtime(runtime)
 * 
 * cdef call_lua(LuaRuntime runtime, lua_State *L, tuple args):             # <<<<<<<<<<<<<<
 *     # does not lock the runtime!
 *     push_lua_arguments(runtime, L, args, 0)
 */

static PyObject *__pyx_f_3AKU_call_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_args) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("call_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1023
 * cdef call_lua(LuaRuntime runtime, lua_State *L, tuple args):
 *     # does not lock the runtime!
 *     push_lua_arguments(runtime, L, args, 0)             # <<<<<<<<<<<<<<
 *     return execute_lua_call(runtime, L, len(args))
 * 
 */
  __pyx_t_1 = __pyx_f_3AKU_push_lua_arguments(__pyx_v_runtime, __pyx_v_L, __pyx_v_args, 0); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1024
 *     # does not lock the runtime!
 *     push_lua_arguments(runtime, L, args, 0)
 *     return execute_lua_call(runtime, L, len(args))             # <<<<<<<<<<<<<<
 * 
 * cdef object execute_lua_call(LuaRuntime runtime, lua_State *L, Py_ssize_t nargs):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(((PyObject *)__pyx_v_args) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_f_3AKU_execute_lua_call(__pyx_v_runtime, __pyx_v_L, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.call_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1026
 *     return execute_lua_call(runtime, L, len(args))
 * 
 * cdef object execute_lua_call(LuaRuntime runtime, lua_State *L, Py_ssize_t nargs):             # <<<<<<<<<<<<<<
 *     cdef int result_status
 *     try:
 */

static PyObject *__pyx_f_3AKU_execute_lua_call(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, Py_ssize_t __pyx_v_nargs) {
  int __pyx_v_result_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("execute_lua_call", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1028
 * cdef object execute_lua_call(LuaRuntime runtime, lua_State *L, Py_ssize_t nargs):
 *     cdef int result_status
 *     try:             # <<<<<<<<<<<<<<
 *         # call into Lua
 *         with nogil:
 */
  /*try:*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1030
 *     try:
 *         # call into Lua
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result_status = lua.lua_pcall(L, nargs, lua.LUA_MULTRET, 0)
 *         runtime.reraise_on_exception()
 */
    {
        #ifdef WITH_THREAD
        PyThreadState *_save = NULL;
        #endif
        Py_UNBLOCK_THREADS
        /*try:*/ {

          /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1031
 *         # call into Lua
 *         with nogil:
 *             result_status = lua.lua_pcall(L, nargs, lua.LUA_MULTRET, 0)             # <<<<<<<<<<<<<<
 *         runtime.reraise_on_exception()
 *         if result_status:
 */
          __pyx_v_result_status = lua_pcall(__pyx_v_L, __pyx_v_nargs, LUA_MULTRET, 0);
        }

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1030
 *     try:
 *         # call into Lua
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result_status = lua.lua_pcall(L, nargs, lua.LUA_MULTRET, 0)
 *         runtime.reraise_on_exception()
 */
        /*finally:*/ {
          Py_BLOCK_THREADS
        }
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1032
 *         with nogil:
 *             result_status = lua.lua_pcall(L, nargs, lua.LUA_MULTRET, 0)
 *         runtime.reraise_on_exception()             # <<<<<<<<<<<<<<
 *         if result_status:
 *             raise_lua_error(runtime, L, result_status)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->reraise_on_exception(__pyx_v_runtime); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L4;}

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1033
 *             result_status = lua.lua_pcall(L, nargs, lua.LUA_MULTRET, 0)
 *         runtime.reraise_on_exception()
 *         if result_status:             # <<<<<<<<<<<<<<
 *             raise_lua_error(runtime, L, result_status)
 *         return unpack_lua_results(runtime, L)
 */
    if (__pyx_v_result_status) {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1034
 *         runtime.reraise_on_exception()
 *         if result_status:
 *             raise_lua_error(runtime, L, result_status)             # <<<<<<<<<<<<<<
 *         return unpack_lua_results(runtime, L)
 *     finally:
 */
      __pyx_t_1 = __pyx_f_3AKU_raise_lua_error(__pyx_v_runtime, __pyx_v_L, __pyx_v_result_status); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L4;}
      goto __pyx_L9;
    }
    __pyx_L9:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1035
 *         if result_status:
 *             raise_lua_error(runtime, L, result_status)
 *         return unpack_lua_results(runtime, L)             # <<<<<<<<<<<<<<
 *     finally:
 *         lua.lua_settop(L, 0)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_3AKU_unpack_lua_results(__pyx_v_runtime, __pyx_v_L); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L4;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1037
 *         return unpack_lua_results(runtime, L)
 *     finally:
 *         lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 * 
 * cdef int push_lua_arguments(LuaRuntime runtime, lua_State *L, tuple args, int withnone) except -1:
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L5;
    __pyx_L3: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L5;
    __pyx_L4: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L5;
    }
    __pyx_L5:;
    lua_settop(__pyx_v_L, 0);
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.execute_lua_call", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1039
 *         lua.lua_settop(L, 0)
 * 
 * cdef int push_lua_arguments(LuaRuntime runtime, lua_State *L, tuple args, int withnone) except -1:             # <<<<<<<<<<<<<<
 *     cdef int i
 *     if args:
 */

static int __pyx_f_3AKU_push_lua_arguments(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_args, int __pyx_v_withnone) {
  int __pyx_v_i;
  PyObject *__pyx_v_arg = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_lua_arguments", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1041
 * cdef int push_lua_arguments(LuaRuntime runtime, lua_State *L, tuple args, int withnone) except -1:
 *     cdef int i
 *     if args:             # <<<<<<<<<<<<<<
 *         for i, arg in enumerate(args):
 *             if not py_to_lua(runtime, L, arg, withnone):
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_args) != Py_None) && (PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) != 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1042
 *     cdef int i
 *     if args:
 *         for i, arg in enumerate(args):             # <<<<<<<<<<<<<<
 *             if not py_to_lua(runtime, L, arg, withnone):
 *                 lua.lua_settop(L, 0)
 */
    __pyx_t_2 = 0;
    __pyx_t_3 = ((PyObject *)__pyx_v_args); __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_5); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
      __Pyx_XDECREF(__pyx_v_arg);
      __pyx_v_arg = __pyx_t_5;
      __pyx_t_5 = 0;
      __pyx_v_i = __pyx_t_2;
      __pyx_t_2 = (__pyx_t_2 + 1);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1043
 *     if args:
 *         for i, arg in enumerate(args):
 *             if not py_to_lua(runtime, L, arg, withnone):             # <<<<<<<<<<<<<<
 *                 lua.lua_settop(L, 0)
 *                 raise TypeError("failed to convert argument at index %d" % i)
 */
      __pyx_t_6 = __pyx_f_3AKU_py_to_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_arg, __pyx_v_withnone); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = (!__pyx_t_6);
      if (__pyx_t_1) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1044
 *         for i, arg in enumerate(args):
 *             if not py_to_lua(runtime, L, arg, withnone):
 *                 lua.lua_settop(L, 0)             # <<<<<<<<<<<<<<
 *                 raise TypeError("failed to convert argument at index %d" % i)
 *     return 0
 */
        lua_settop(__pyx_v_L, 0);

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1045
 *             if not py_to_lua(runtime, L, arg, withnone):
 *                 lua.lua_settop(L, 0)
 *                 raise TypeError("failed to convert argument at index %d" % i)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
        __pyx_t_5 = PyInt_FromLong(__pyx_v_i); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_44), __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_7));
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_7));
        __Pyx_GIVEREF(((PyObject *)__pyx_t_7));
        __pyx_t_7 = 0;
        __pyx_t_7 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_7, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1046
 *                 lua.lua_settop(L, 0)
 *                 raise TypeError("failed to convert argument at index %d" % i)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * cdef inline object unpack_lua_results(LuaRuntime runtime, lua_State *L):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("AKU.push_lua_arguments", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1048
 *     return 0
 * 
 * cdef inline object unpack_lua_results(LuaRuntime runtime, lua_State *L):             # <<<<<<<<<<<<<<
 *     cdef int nargs = lua.lua_gettop(L)
 *     if nargs == 1:
 */

static CYTHON_INLINE PyObject *__pyx_f_3AKU_unpack_lua_results(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L) {
  int __pyx_v_nargs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("unpack_lua_results", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1049
 * 
 * cdef inline object unpack_lua_results(LuaRuntime runtime, lua_State *L):
 *     cdef int nargs = lua.lua_gettop(L)             # <<<<<<<<<<<<<<
 *     if nargs == 1:
 *         return py_from_lua(runtime, L, 1)
 */
  __pyx_v_nargs = lua_gettop(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1050
 * cdef inline object unpack_lua_results(LuaRuntime runtime, lua_State *L):
 *     cdef int nargs = lua.lua_gettop(L)
 *     if nargs == 1:             # <<<<<<<<<<<<<<
 *         return py_from_lua(runtime, L, 1)
 *     if nargs == 0:
 */
  __pyx_t_1 = (__pyx_v_nargs == 1);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1051
 *     cdef int nargs = lua.lua_gettop(L)
 *     if nargs == 1:
 *         return py_from_lua(runtime, L, 1)             # <<<<<<<<<<<<<<
 *     if nargs == 0:
 *         return None
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1052
 *     if nargs == 1:
 *         return py_from_lua(runtime, L, 1)
 *     if nargs == 0:             # <<<<<<<<<<<<<<
 *         return None
 *     return unpack_multiple_lua_results(runtime, L, nargs)
 */
  __pyx_t_1 = (__pyx_v_nargs == 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1053
 *         return py_from_lua(runtime, L, 1)
 *     if nargs == 0:
 *         return None             # <<<<<<<<<<<<<<
 *     return unpack_multiple_lua_results(runtime, L, nargs)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1054
 *     if nargs == 0:
 *         return None
 *     return unpack_multiple_lua_results(runtime, L, nargs)             # <<<<<<<<<<<<<<
 * 
 * cdef tuple unpack_multiple_lua_results(LuaRuntime runtime, lua_State *L, int nargs):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_3AKU_unpack_multiple_lua_results(__pyx_v_runtime, __pyx_v_L, __pyx_v_nargs)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.unpack_lua_results", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1056
 *     return unpack_multiple_lua_results(runtime, L, nargs)
 * 
 * cdef tuple unpack_multiple_lua_results(LuaRuntime runtime, lua_State *L, int nargs):             # <<<<<<<<<<<<<<
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 *     cdef int i
 */

static PyObject *__pyx_f_3AKU_unpack_multiple_lua_results(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, int __pyx_v_nargs) {
  PyObject *__pyx_v_args = 0;
  int __pyx_v_i;
  PyObject *__pyx_v_arg = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("unpack_multiple_lua_results", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1057
 * 
 * cdef tuple unpack_multiple_lua_results(LuaRuntime runtime, lua_State *L, int nargs):
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)             # <<<<<<<<<<<<<<
 *     cdef int i
 *     for i in range(nargs):
 */
  __pyx_t_1 = ((PyObject *)PyTuple_New(__pyx_v_nargs)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_args = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1059
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 *     cdef int i
 *     for i in range(nargs):             # <<<<<<<<<<<<<<
 *         arg = py_from_lua(runtime, L, i+1)
 *         cpython.ref.Py_INCREF(arg)
 */
  __pyx_t_2 = __pyx_v_nargs;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1060
 *     cdef int i
 *     for i in range(nargs):
 *         arg = py_from_lua(runtime, L, i+1)             # <<<<<<<<<<<<<<
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 */
    __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, (__pyx_v_i + 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF(__pyx_v_arg);
    __pyx_v_arg = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1061
 *     for i in range(nargs):
 *         arg = py_from_lua(runtime, L, i+1)
 *         cpython.ref.Py_INCREF(arg)             # <<<<<<<<<<<<<<
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 *     return args
 */
    Py_INCREF(__pyx_v_arg);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1062
 *         arg = py_from_lua(runtime, L, i+1)
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)             # <<<<<<<<<<<<<<
 *     return args
 * 
 */
    PyTuple_SET_ITEM(((PyObject *)__pyx_v_args), __pyx_v_i, __pyx_v_arg);
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1063
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 *     return args             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_args));
  __pyx_r = __pyx_v_args;
  goto __pyx_L0;

  __pyx_r = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.unpack_multiple_lua_results", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1089
 * # ref-counting support for Python objects
 * 
 * cdef void decref_with_gil(py_object *py_obj) with gil:             # <<<<<<<<<<<<<<
 *     cpython.ref.Py_XDECREF(py_obj.obj)
 * 
 */

static void __pyx_f_3AKU_decref_with_gil(struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  __Pyx_RefNannyDeclarations
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("decref_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1090
 * 
 * cdef void decref_with_gil(py_object *py_obj) with gil:
 *     cpython.ref.Py_XDECREF(py_obj.obj)             # <<<<<<<<<<<<<<
 * 
 * cdef int py_object_gc(lua_State* L) nogil:
 */
  Py_XDECREF(__pyx_v_py_obj->obj);

  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1092
 *     cpython.ref.Py_XDECREF(py_obj.obj)
 * 
 * cdef int py_object_gc(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     if not lua.lua_isuserdata(L, 1):
 *         return 0
 */

static int __pyx_f_3AKU_py_object_gc(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1093
 * 
 * cdef int py_object_gc(lua_State* L) nogil:
 *     if not lua.lua_isuserdata(L, 1):             # <<<<<<<<<<<<<<
 *         return 0
 *     cdef py_object* py_obj = <py_object*> lua.luaL_checkudata(L, 1, POBJECT) # doesn't return on error!
 */
  __pyx_t_1 = (!lua_isuserdata(__pyx_v_L, 1));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1094
 * cdef int py_object_gc(lua_State* L) nogil:
 *     if not lua.lua_isuserdata(L, 1):
 *         return 0             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = <py_object*> lua.luaL_checkudata(L, 1, POBJECT) # doesn't return on error!
 *     if py_obj is not NULL and py_obj.obj is not NULL:
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1095
 *     if not lua.lua_isuserdata(L, 1):
 *         return 0
 *     cdef py_object* py_obj = <py_object*> lua.luaL_checkudata(L, 1, POBJECT) # doesn't return on error!             # <<<<<<<<<<<<<<
 *     if py_obj is not NULL and py_obj.obj is not NULL:
 *         decref_with_gil(py_obj)
 */
  __pyx_v_py_obj = ((struct __pyx_t_3AKU_py_object *)luaL_checkudata(__pyx_v_L, 1, __pyx_k__POBJECT));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1096
 *         return 0
 *     cdef py_object* py_obj = <py_object*> lua.luaL_checkudata(L, 1, POBJECT) # doesn't return on error!
 *     if py_obj is not NULL and py_obj.obj is not NULL:             # <<<<<<<<<<<<<<
 *         decref_with_gil(py_obj)
 *     return 0
 */
  __pyx_t_1 = (__pyx_v_py_obj != NULL);
  if (__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_py_obj->obj != NULL);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1097
 *     cdef py_object* py_obj = <py_object*> lua.luaL_checkudata(L, 1, POBJECT) # doesn't return on error!
 *     if py_obj is not NULL and py_obj.obj is not NULL:
 *         decref_with_gil(py_obj)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
    __pyx_f_3AKU_decref_with_gil(__pyx_v_py_obj);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1098
 *     if py_obj is not NULL and py_obj.obj is not NULL:
 *         decref_with_gil(py_obj)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * # calling Python objects
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1102
 * # calling Python objects
 * 
 * cdef bint call_python(LuaRuntime runtime, lua_State *L, py_object* py_obj) except -1:             # <<<<<<<<<<<<<<
 *     cdef int i, nargs = lua.lua_gettop(L) - 1
 *     cdef bint ret = 0
 */

static int __pyx_f_3AKU_call_python(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  int __pyx_v_i;
  int __pyx_v_nargs;
  int __pyx_v_ret;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_arg = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("call_python", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1103
 * 
 * cdef bint call_python(LuaRuntime runtime, lua_State *L, py_object* py_obj) except -1:
 *     cdef int i, nargs = lua.lua_gettop(L) - 1             # <<<<<<<<<<<<<<
 *     cdef bint ret = 0
 * 
 */
  __pyx_v_nargs = (lua_gettop(__pyx_v_L) - 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1104
 * cdef bint call_python(LuaRuntime runtime, lua_State *L, py_object* py_obj) except -1:
 *     cdef int i, nargs = lua.lua_gettop(L) - 1
 *     cdef bint ret = 0             # <<<<<<<<<<<<<<
 * 
 *     if not py_obj:
 */
  __pyx_v_ret = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1106
 *     cdef bint ret = 0
 * 
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         raise TypeError("not a python object")
 * 
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1107
 * 
 *     if not py_obj:
 *         raise TypeError("not a python object")             # <<<<<<<<<<<<<<
 * 
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_46), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1109
 *         raise TypeError("not a python object")
 * 
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)             # <<<<<<<<<<<<<<
 *     for i in range(nargs):
 *         arg = py_from_lua(runtime, L, i+2)
 */
  __pyx_t_2 = ((PyObject *)PyTuple_New(__pyx_v_nargs)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_args = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1110
 * 
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 *     for i in range(nargs):             # <<<<<<<<<<<<<<
 *         arg = py_from_lua(runtime, L, i+2)
 *         cpython.ref.Py_INCREF(arg)
 */
  __pyx_t_3 = __pyx_v_nargs;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1111
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 *     for i in range(nargs):
 *         arg = py_from_lua(runtime, L, i+2)             # <<<<<<<<<<<<<<
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 */
    __pyx_t_2 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, (__pyx_v_i + 2)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_v_arg);
    __pyx_v_arg = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1112
 *     for i in range(nargs):
 *         arg = py_from_lua(runtime, L, i+2)
 *         cpython.ref.Py_INCREF(arg)             # <<<<<<<<<<<<<<
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 *     ret =  py_to_lua(runtime, L, (<object>py_obj.obj)(*args), 0)
 */
    Py_INCREF(__pyx_v_arg);

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1113
 *         arg = py_from_lua(runtime, L, i+2)
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)             # <<<<<<<<<<<<<<
 *     ret =  py_to_lua(runtime, L, (<object>py_obj.obj)(*args), 0)
 *     return ret
 */
    PyTuple_SET_ITEM(((PyObject *)__pyx_v_args), __pyx_v_i, __pyx_v_arg);
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1114
 *         cpython.ref.Py_INCREF(arg)
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 *     ret =  py_to_lua(runtime, L, (<object>py_obj.obj)(*args), 0)             # <<<<<<<<<<<<<<
 *     return ret
 * 
 */
  __pyx_t_2 = PySequence_Tuple(((PyObject *)__pyx_v_args)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_5 = PyObject_Call(((PyObject *)__pyx_v_py_obj->obj), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_3 = __pyx_f_3AKU_py_to_lua(__pyx_v_runtime, __pyx_v_L, __pyx_t_5, 0); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_ret = __pyx_t_3;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1115
 *         cpython.tuple.PyTuple_SET_ITEM(args, i, arg)
 *     ret =  py_to_lua(runtime, L, (<object>py_obj.obj)(*args), 0)
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * cdef int py_call_with_gil(lua_State* L, py_object *py_obj) with gil:
 */
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("AKU.call_python", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1117
 *     return ret
 * 
 * cdef int py_call_with_gil(lua_State* L, py_object *py_obj) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime = None
 *     try:
 */

static int __pyx_f_3AKU_py_call_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_call_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1118
 * 
 * cdef int py_call_with_gil(lua_State* L, py_object *py_obj) with gil:
 *     cdef LuaRuntime runtime = None             # <<<<<<<<<<<<<<
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1119
 * cdef int py_call_with_gil(lua_State* L, py_object *py_obj) with gil:
 *     cdef LuaRuntime runtime = None
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return call_python(runtime, L, py_obj)
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1120
 *     cdef LuaRuntime runtime = None
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         return call_python(runtime, L, py_obj)
 *     except:
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __Pyx_DECREF(((PyObject *)__pyx_v_runtime));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1121
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return call_python(runtime, L, py_obj)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_t_4 = __pyx_f_3AKU_call_python(__pyx_v_runtime, __pyx_v_L, __pyx_v_py_obj); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1121; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_r = __pyx_t_4;
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1122
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return call_python(runtime, L, py_obj)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_call_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1122; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1123
 *         return call_python(runtime, L, py_obj)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        /*try:*/ {
          __pyx_t_11 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L13_error;}
        }
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L20_try_end;
        __pyx_L13_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1124
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L14_exception_handled;
        }
        __pyx_L14_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        __pyx_L20_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1125
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_object_call(lua_State* L) nogil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("AKU.py_call_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1127
 *         return -1
 * 
 * cdef int py_object_call(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 */

static int __pyx_f_3AKU_py_object_call(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1128
 * 
 * cdef int py_object_call(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")  # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1129
 * cdef int py_object_call(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return lua.luaL_argerror(L, 1, "not a python object")  # never returns!
 * 
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1130
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")  # never returns!             # <<<<<<<<<<<<<<
 * 
 *     result = py_call_with_gil(L, py_obj)
 */
    __pyx_r = luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1132
 *         return lua.luaL_argerror(L, 1, "not a python object")  # never returns!
 * 
 *     result = py_call_with_gil(L, py_obj)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python call')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_call_with_gil(__pyx_v_L, __pyx_v_py_obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1133
 * 
 *     result = py_call_with_gil(L, py_obj)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error during Python call')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1134
 *     result = py_call_with_gil(L, py_obj)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python call')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_47);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1135
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python call')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # str() support for Python objects
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1139
 * # str() support for Python objects
 * 
 * cdef int py_str_with_gil(lua_State* L, py_object* py_obj) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_str_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  PyObject *__pyx_v_s = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  char *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_str_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1141
 * cdef int py_str_with_gil(lua_State* L, py_object* py_obj) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         s = str(<object>py_obj.obj)
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1142
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         s = str(<object>py_obj.obj)
 *         if isinstance(s, unicode):
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1143
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         s = str(<object>py_obj.obj)             # <<<<<<<<<<<<<<
 *         if isinstance(s, unicode):
 *             s = (<unicode>s).encode(runtime._encoding)
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1143; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(((PyObject *)__pyx_v_py_obj->obj));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_py_obj->obj));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_py_obj->obj));
      __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1143; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_v_s = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1144
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         s = str(<object>py_obj.obj)
 *         if isinstance(s, unicode):             # <<<<<<<<<<<<<<
 *             s = (<unicode>s).encode(runtime._encoding)
 *         else:
 */
      __pyx_t_6 = PyUnicode_Check(__pyx_v_s); 
      if (__pyx_t_6) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1145
 *         s = str(<object>py_obj.obj)
 *         if isinstance(s, unicode):
 *             s = (<unicode>s).encode(runtime._encoding)             # <<<<<<<<<<<<<<
 *         else:
 *             assert isinstance(s, bytes)
 */
        if (unlikely(__pyx_v_s == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "encode");
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        __pyx_t_7 = PyBytes_AsString(((PyObject *)__pyx_v_runtime->_encoding)); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_t_5 = ((PyObject *)PyUnicode_AsEncodedString(((PyObject*)__pyx_v_s), __pyx_t_7, NULL)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        __Pyx_DECREF(__pyx_v_s);
        __pyx_v_s = ((PyObject *)__pyx_t_5);
        __pyx_t_5 = 0;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1147
 *             s = (<unicode>s).encode(runtime._encoding)
 *         else:
 *             assert isinstance(s, bytes)             # <<<<<<<<<<<<<<
 *         lua.lua_pushlstring(L, <bytes>s, len(<bytes>s))
 *         return 1 # returning 1 value
 */
        #ifndef CYTHON_WITHOUT_ASSERTIONS
        __pyx_t_6 = PyBytes_Check(__pyx_v_s); 
        if (unlikely(!__pyx_t_6)) {
          PyErr_SetNone(PyExc_AssertionError);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        #endif
      }
      __pyx_L11:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1148
 *         else:
 *             assert isinstance(s, bytes)
 *         lua.lua_pushlstring(L, <bytes>s, len(<bytes>s))             # <<<<<<<<<<<<<<
 *         return 1 # returning 1 value
 *     except:
 */
      __pyx_t_7 = PyBytes_AsString(__pyx_v_s); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      if (unlikely(__pyx_v_s == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      __pyx_t_8 = PyBytes_GET_SIZE(((PyObject *)((PyObject*)__pyx_v_s))); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      lua_pushlstring(__pyx_v_L, __pyx_t_7, __pyx_t_8);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1149
 *             assert isinstance(s, bytes)
 *         lua.lua_pushlstring(L, <bytes>s, len(<bytes>s))
 *         return 1 # returning 1 value             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_r = 1;
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1150
 *         lua.lua_pushlstring(L, <bytes>s, len(<bytes>s))
 *         return 1 # returning 1 value
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_str_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_9);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1151
 *         return 1 # returning 1 value
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L14_error;} }
          __pyx_t_13 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_13 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L14_error;}
        }
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L21_try_end;
        __pyx_L14_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1152
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L15_exception_handled;
        }
        __pyx_L15_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
        __pyx_L21_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1153
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_object_str(lua_State* L) nogil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_WriteUnraisable("AKU.py_str_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1155
 *         return -1
 * 
 * cdef int py_object_str(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 */

static int __pyx_f_3AKU_py_object_str(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1156
 * 
 * cdef int py_object_str(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1157
 * cdef int py_object_str(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_str_with_gil(L, py_obj)
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1158
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     result = py_str_with_gil(L, py_obj)
 *     if result < 0:
 */
    __pyx_r = luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1159
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_str_with_gil(L, py_obj)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_str_with_gil(__pyx_v_L, __pyx_v_py_obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1160
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_str_with_gil(L, py_obj)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1161
 *     result = py_str_with_gil(L, py_obj)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_48);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1162
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # item access for Python objects
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1166
 * # item access for Python objects
 * 
 * cdef int getitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:             # <<<<<<<<<<<<<<
 *     return py_to_lua(runtime, L,
 *                      (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ], 1)
 */

static int __pyx_f_3AKU_getitem_for_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_key_n) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getitem_for_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1168
 * cdef int getitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:
 *     return py_to_lua(runtime, L,
 *                      (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ], 1)             # <<<<<<<<<<<<<<
 * 
 * cdef int setitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 */
  __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_key_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetItem(((PyObject *)__pyx_v_py_obj->obj), __pyx_t_1); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_f_3AKU_py_to_lua(__pyx_v_runtime, __pyx_v_L, __pyx_t_2, 1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.getitem_for_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1170
 *                      (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ], 1)
 * 
 * cdef int setitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:             # <<<<<<<<<<<<<<
 *     (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ] = py_from_lua(runtime, L, value_n)
 *     return 0
 */

static int __pyx_f_3AKU_setitem_for_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_key_n, int __pyx_v_value_n) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_for_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1171
 * 
 * cdef int setitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 *     (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ] = py_from_lua(runtime, L, value_n)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_value_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_key_n); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetItem(((PyObject *)__pyx_v_py_obj->obj), __pyx_t_2, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1172
 * cdef int setitem_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 *     (<object>py_obj.obj)[ py_from_lua(runtime, L, key_n) ] = py_from_lua(runtime, L, value_n)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * cdef int getattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.setitem_for_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1174
 *     return 0
 * 
 * cdef int getattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:             # <<<<<<<<<<<<<<
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)
 */

static int __pyx_f_3AKU_getattr_for_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_key_n) {
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_v_attr_name = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getattr_for_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1175
 * 
 * cdef int getattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:
 *     obj = <object>py_obj.obj             # <<<<<<<<<<<<<<
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_py_obj->obj));
  __pyx_v_obj = ((PyObject *)__pyx_v_py_obj->obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1176
 * cdef int getattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n) except -1:
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)             # <<<<<<<<<<<<<<
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, False)
 */
  __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_key_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1177
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:             # <<<<<<<<<<<<<<
 *         attr_name = runtime._attribute_filter(obj, attr_name, False)
 *     return py_to_lua(runtime, L, getattr(obj, attr_name), 1)
 */
  __pyx_t_2 = (__pyx_v_runtime->_attribute_filter != Py_None);
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1178
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, False)             # <<<<<<<<<<<<<<
 *     return py_to_lua(runtime, L, getattr(obj, attr_name), 1)
 * 
 */
    __pyx_t_1 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __Pyx_INCREF(__pyx_v_attr_name);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_attr_name);
    __Pyx_GIVEREF(__pyx_v_attr_name);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_v_runtime->_attribute_filter, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_attr_name);
    __pyx_v_attr_name = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1179
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, False)
 *     return py_to_lua(runtime, L, getattr(obj, attr_name), 1)             # <<<<<<<<<<<<<<
 * 
 * cdef int setattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_obj, __pyx_v_attr_name); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __pyx_f_3AKU_py_to_lua(__pyx_v_runtime, __pyx_v_L, __pyx_t_1, 1); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.getattr_for_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_attr_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1181
 *     return py_to_lua(runtime, L, getattr(obj, attr_name), 1)
 * 
 * cdef int setattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:             # <<<<<<<<<<<<<<
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)
 */

static int __pyx_f_3AKU_setattr_for_lua(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_key_n, int __pyx_v_value_n) {
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_v_attr_name = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setattr_for_lua", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1182
 * 
 * cdef int setattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 *     obj = <object>py_obj.obj             # <<<<<<<<<<<<<<
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_py_obj->obj));
  __pyx_v_obj = ((PyObject *)__pyx_v_py_obj->obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1183
 * cdef int setattr_for_lua(LuaRuntime runtime, lua_State* L, py_object* py_obj, int key_n, int value_n) except -1:
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)             # <<<<<<<<<<<<<<
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, True)
 */
  __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_key_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_attr_name = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1184
 *     obj = <object>py_obj.obj
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:             # <<<<<<<<<<<<<<
 *         attr_name = runtime._attribute_filter(obj, attr_name, True)
 *     setattr(obj, attr_name, py_from_lua(runtime, L, value_n))
 */
  __pyx_t_2 = (__pyx_v_runtime->_attribute_filter != Py_None);
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1185
 *     attr_name = py_from_lua(runtime, L, key_n)
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, True)             # <<<<<<<<<<<<<<
 *     setattr(obj, attr_name, py_from_lua(runtime, L, value_n))
 *     return 0
 */
    __pyx_t_1 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __Pyx_INCREF(__pyx_v_attr_name);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_attr_name);
    __Pyx_GIVEREF(__pyx_v_attr_name);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_v_runtime->_attribute_filter, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_attr_name);
    __pyx_v_attr_name = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1186
 *     if runtime._attribute_filter is not None:
 *         attr_name = runtime._attribute_filter(obj, attr_name, True)
 *     setattr(obj, attr_name, py_from_lua(runtime, L, value_n))             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  __pyx_t_1 = __pyx_f_3AKU_py_from_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_value_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_SetAttr(__pyx_v_obj, __pyx_v_attr_name, __pyx_t_1); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1187
 *         attr_name = runtime._attribute_filter(obj, attr_name, True)
 *     setattr(obj, attr_name, py_from_lua(runtime, L, value_n))
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.setattr_for_lua", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_attr_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1190
 * 
 * 
 * cdef int py_object_getindex_with_gil(lua_State* L, py_object* py_obj) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_object_getindex_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_object_getindex_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1192
 * cdef int py_object_getindex_with_gil(lua_State* L, py_object* py_obj) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1193
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 *             return getitem_for_lua(runtime, L, py_obj, 2)
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1194
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:             # <<<<<<<<<<<<<<
 *             return getitem_for_lua(runtime, L, py_obj, 2)
 *         else:
 */
      __pyx_t_4 = (__pyx_v_py_obj->type_flags & __pyx_e_3AKU_OBJ_AS_INDEX);
      if (__pyx_t_4) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1195
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 *             return getitem_for_lua(runtime, L, py_obj, 2)             # <<<<<<<<<<<<<<
 *         else:
 *             return getattr_for_lua(runtime, L, py_obj, 2)
 */
        __pyx_t_4 = __pyx_f_3AKU_getitem_for_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_py_obj, 2); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_r = __pyx_t_4;
        goto __pyx_L7_try_return;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1197
 *             return getitem_for_lua(runtime, L, py_obj, 2)
 *         else:
 *             return getattr_for_lua(runtime, L, py_obj, 2)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
        __pyx_t_4 = __pyx_f_3AKU_getattr_for_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_py_obj, 2); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1197; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_r = __pyx_t_4;
        goto __pyx_L7_try_return;
      }
      __pyx_L11:;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1198
 *         else:
 *             return getattr_for_lua(runtime, L, py_obj, 2)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_object_getindex_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1199
 *             return getattr_for_lua(runtime, L, py_obj, 2)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L14_error;} }
          __pyx_t_4 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L14_error;}
        }
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L21_try_end;
        __pyx_L14_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1200
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L15_exception_handled;
        }
        __pyx_L15_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        __pyx_L21_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1201
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_object_getindex(lua_State* L) nogil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("AKU.py_object_getindex_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1203
 *         return -1
 * 
 * cdef int py_object_getindex(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 */

static int __pyx_f_3AKU_py_object_getindex(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1204
 * 
 * cdef int py_object_getindex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1205
 * cdef int py_object_getindex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_getindex_with_gil(L, py_obj)
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1206
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     result = py_object_getindex_with_gil(L, py_obj)
 *     if result < 0:
 */
    __pyx_r = luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1207
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_getindex_with_gil(L, py_obj)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_object_getindex_with_gil(__pyx_v_L, __pyx_v_py_obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1208
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_getindex_with_gil(L, py_obj)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1209
 *     result = py_object_getindex_with_gil(L, py_obj)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_48);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1210
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1213
 * 
 * 
 * cdef int py_object_setindex_with_gil(lua_State* L, py_object* py_obj) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_object_setindex_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_object_setindex_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1215
 * cdef int py_object_setindex_with_gil(lua_State* L, py_object* py_obj) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1216
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 *             return setitem_for_lua(runtime, L, py_obj, 2, 3)
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1217
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:             # <<<<<<<<<<<<<<
 *             return setitem_for_lua(runtime, L, py_obj, 2, 3)
 *         else:
 */
      __pyx_t_4 = (__pyx_v_py_obj->type_flags & __pyx_e_3AKU_OBJ_AS_INDEX);
      if (__pyx_t_4) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1218
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         if py_obj.type_flags & OBJ_AS_INDEX:
 *             return setitem_for_lua(runtime, L, py_obj, 2, 3)             # <<<<<<<<<<<<<<
 *         else:
 *             return setattr_for_lua(runtime, L, py_obj, 2, 3)
 */
        __pyx_t_4 = __pyx_f_3AKU_setitem_for_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_py_obj, 2, 3); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_r = __pyx_t_4;
        goto __pyx_L7_try_return;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1220
 *             return setitem_for_lua(runtime, L, py_obj, 2, 3)
 *         else:
 *             return setattr_for_lua(runtime, L, py_obj, 2, 3)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
        __pyx_t_4 = __pyx_f_3AKU_setattr_for_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_py_obj, 2, 3); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_r = __pyx_t_4;
        goto __pyx_L7_try_return;
      }
      __pyx_L11:;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1221
 *         else:
 *             return setattr_for_lua(runtime, L, py_obj, 2, 3)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_object_setindex_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1222
 *             return setattr_for_lua(runtime, L, py_obj, 2, 3)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1222; __pyx_clineno = __LINE__; goto __pyx_L14_error;} }
          __pyx_t_4 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1222; __pyx_clineno = __LINE__; goto __pyx_L14_error;}
        }
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L21_try_end;
        __pyx_L14_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1223
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L15_exception_handled;
        }
        __pyx_L15_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        __pyx_L21_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1224
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_object_setindex(lua_State* L) nogil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("AKU.py_object_setindex_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1226
 *         return -1
 * 
 * cdef int py_object_setindex(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 */

static int __pyx_f_3AKU_py_object_setindex(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1227
 * 
 * cdef int py_object_setindex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1228
 * cdef int py_object_setindex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_setindex_with_gil(L, py_obj)
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1229
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1) # may not return on error!
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     result = py_object_setindex_with_gil(L, py_obj)
 *     if result < 0:
 */
    __pyx_r = luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1230
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_setindex_with_gil(L, py_obj)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_object_setindex_with_gil(__pyx_v_L, __pyx_v_py_obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1231
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_object_setindex_with_gil(L, py_obj)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1232
 *     result = py_object_setindex_with_gil(L, py_obj)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_48);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1233
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during Python str() call')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * # special methods for Lua wrapped Python objects
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1247
 * ## # Python helper functions for Lua
 * 
 * cdef inline py_object* unpack_single_python_argument_or_jump(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     if lua.lua_gettop(L) > 1:
 *         lua.luaL_argerror(L, 2, "invalid arguments")   # never returns!
 */

static CYTHON_INLINE struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unpack_single_python_argument_or_jump(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  struct __pyx_t_3AKU_py_object *__pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1248
 * 
 * cdef inline py_object* unpack_single_python_argument_or_jump(lua_State* L) nogil:
 *     if lua.lua_gettop(L) > 1:             # <<<<<<<<<<<<<<
 *         lua.luaL_argerror(L, 2, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 */
  __pyx_t_1 = (lua_gettop(__pyx_v_L) > 1);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1249
 * cdef inline py_object* unpack_single_python_argument_or_jump(lua_State* L) nogil:
 *     if lua.lua_gettop(L) > 1:
 *         lua.luaL_argerror(L, 2, "invalid arguments")   # never returns!             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:
 */
    luaL_argerror(__pyx_v_L, 2, __pyx_k_49);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1250
 *     if lua.lua_gettop(L) > 1:
 *         lua.luaL_argerror(L, 2, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1251
 *         lua.luaL_argerror(L, 2, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     return py_obj
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1252
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     return py_obj
 * 
 */
    luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1253
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     return py_obj             # <<<<<<<<<<<<<<
 * 
 * cdef py_object* unwrap_lua_object(lua_State* L, int n) nogil:
 */
  __pyx_r = __pyx_v_py_obj;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1255
 *     return py_obj
 * 
 * cdef py_object* unwrap_lua_object(lua_State* L, int n) nogil:             # <<<<<<<<<<<<<<
 *     if lua.lua_isuserdata(L, n):
 *         return <py_object*> lua.luaL_checkudata(L, n, POBJECT) # doesn't return on error!
 */

static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unwrap_lua_object(lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_t_3AKU_py_object *__pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1256
 * 
 * cdef py_object* unwrap_lua_object(lua_State* L, int n) nogil:
 *     if lua.lua_isuserdata(L, n):             # <<<<<<<<<<<<<<
 *         return <py_object*> lua.luaL_checkudata(L, n, POBJECT) # doesn't return on error!
 *     else:
 */
  __pyx_t_1 = lua_isuserdata(__pyx_v_L, __pyx_v_n);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1257
 * cdef py_object* unwrap_lua_object(lua_State* L, int n) nogil:
 *     if lua.lua_isuserdata(L, n):
 *         return <py_object*> lua.luaL_checkudata(L, n, POBJECT) # doesn't return on error!             # <<<<<<<<<<<<<<
 *     else:
 *         return unpack_wrapped_pyfunction(L, n)
 */
    __pyx_r = ((struct __pyx_t_3AKU_py_object *)luaL_checkudata(__pyx_v_L, __pyx_v_n, __pyx_k__POBJECT));
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1259
 *         return <py_object*> lua.luaL_checkudata(L, n, POBJECT) # doesn't return on error!
 *     else:
 *         return unpack_wrapped_pyfunction(L, n)             # <<<<<<<<<<<<<<
 * 
 * cdef py_object* unwrap_lua_object_from_cclosure(lua_State* L, int n) nogil:
 */
    __pyx_r = __pyx_f_3AKU_unpack_wrapped_pyfunction(__pyx_v_L, __pyx_v_n);
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1261
 *         return unpack_wrapped_pyfunction(L, n)
 * 
 * cdef py_object* unwrap_lua_object_from_cclosure(lua_State* L, int n) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* userdata = <py_object*> lua.lua_touserdata(L, lua.lua_upvalueindex(n))
 *     if userdata:
 */

static struct __pyx_t_3AKU_py_object *__pyx_f_3AKU_unwrap_lua_object_from_cclosure(lua_State *__pyx_v_L, int __pyx_v_n) {
  struct __pyx_t_3AKU_py_object *__pyx_v_userdata;
  struct __pyx_t_3AKU_py_object *__pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1262
 * 
 * cdef py_object* unwrap_lua_object_from_cclosure(lua_State* L, int n) nogil:
 *     cdef py_object* userdata = <py_object*> lua.lua_touserdata(L, lua.lua_upvalueindex(n))             # <<<<<<<<<<<<<<
 *     if userdata:
 *         return userdata
 */
  __pyx_v_userdata = ((struct __pyx_t_3AKU_py_object *)lua_touserdata(__pyx_v_L, lua_upvalueindex(__pyx_v_n)));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1263
 * cdef py_object* unwrap_lua_object_from_cclosure(lua_State* L, int n) nogil:
 *     cdef py_object* userdata = <py_object*> lua.lua_touserdata(L, lua.lua_upvalueindex(n))
 *     if userdata:             # <<<<<<<<<<<<<<
 *         return userdata
 *     else:
 */
  __pyx_t_1 = (__pyx_v_userdata != 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1264
 *     cdef py_object* userdata = <py_object*> lua.lua_touserdata(L, lua.lua_upvalueindex(n))
 *     if userdata:
 *         return userdata             # <<<<<<<<<<<<<<
 *     else:
 *         return unpack_wrapped_pyfunction(L, lua.lua_upvalueindex(n))
 */
    __pyx_r = __pyx_v_userdata;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1266
 *         return userdata
 *     else:
 *         return unpack_wrapped_pyfunction(L, lua.lua_upvalueindex(n))             # <<<<<<<<<<<<<<
 * 
 * cdef int py_wrap_object_protocol_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:
 */
    __pyx_r = __pyx_f_3AKU_unpack_wrapped_pyfunction(__pyx_v_L, lua_upvalueindex(__pyx_v_n));
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1268
 *         return unpack_wrapped_pyfunction(L, lua.lua_upvalueindex(n))
 * 
 * cdef int py_wrap_object_protocol_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_wrap_object_protocol_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_type_flags) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_wrap_object_protocol_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1270
 * cdef int py_wrap_object_protocol_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return py_to_lua_custom(runtime, L, <object>py_obj.obj, type_flags)
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1271
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         return py_to_lua_custom(runtime, L, <object>py_obj.obj, type_flags)
 *     except:
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1272
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return py_to_lua_custom(runtime, L, <object>py_obj.obj, type_flags)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_t_4 = ((PyObject *)__pyx_v_py_obj->obj);
      __Pyx_INCREF(__pyx_t_4);
      __pyx_r = __pyx_f_3AKU_py_to_lua_custom(__pyx_v_runtime, __pyx_v_L, __pyx_t_4, __pyx_v_type_flags);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1273
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         return py_to_lua_custom(runtime, L, <object>py_obj.obj, type_flags)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_wrap_object_protocol_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1274
 *         return py_to_lua_custom(runtime, L, <object>py_obj.obj, type_flags)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L13_error;} }
          __pyx_t_10 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L13_error;}
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L20_try_end;
        __pyx_L13_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1275
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L14_exception_handled;
        }
        __pyx_L14_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L20_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1276
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_wrap_object_protocol(lua_State* L, int type_flags) nogil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("AKU.py_wrap_object_protocol_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1278
 *         return -1
 * 
 * cdef int py_wrap_object_protocol(lua_State* L, int type_flags) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_wrap_object_protocol_with_gil(L, py_obj, type_flags)
 */

static int __pyx_f_3AKU_py_wrap_object_protocol(lua_State *__pyx_v_L, int __pyx_v_type_flags) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1279
 * 
 * cdef int py_wrap_object_protocol(lua_State* L, int type_flags) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!             # <<<<<<<<<<<<<<
 *     result = py_wrap_object_protocol_with_gil(L, py_obj, type_flags)
 *     if result < 0:
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unpack_single_python_argument_or_jump(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1280
 * cdef int py_wrap_object_protocol(lua_State* L, int type_flags) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_wrap_object_protocol_with_gil(L, py_obj, type_flags)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during type adaptation')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_wrap_object_protocol_with_gil(__pyx_v_L, __pyx_v_py_obj, __pyx_v_type_flags);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1281
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_wrap_object_protocol_with_gil(L, py_obj, type_flags)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error during type adaptation')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1282
 *     result = py_wrap_object_protocol_with_gil(L, py_obj, type_flags)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during type adaptation')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_50);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1283
 *     if result < 0:
 *         return lua.luaL_error(L, 'error during type adaptation')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef int py_as_attrgetter(lua_State* L) nogil:
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1285
 *     return result
 * 
 * cdef int py_as_attrgetter(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     return py_wrap_object_protocol(L, 0)
 * 
 */

static int __pyx_f_3AKU_py_as_attrgetter(lua_State *__pyx_v_L) {
  int __pyx_r;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1286
 * 
 * cdef int py_as_attrgetter(lua_State* L) nogil:
 *     return py_wrap_object_protocol(L, 0)             # <<<<<<<<<<<<<<
 * 
 * cdef int py_as_itemgetter(lua_State* L) nogil:
 */
  __pyx_r = __pyx_f_3AKU_py_wrap_object_protocol(__pyx_v_L, 0);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1288
 *     return py_wrap_object_protocol(L, 0)
 * 
 * cdef int py_as_itemgetter(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     return py_wrap_object_protocol(L, OBJ_AS_INDEX)
 * 
 */

static int __pyx_f_3AKU_py_as_itemgetter(lua_State *__pyx_v_L) {
  int __pyx_r;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1289
 * 
 * cdef int py_as_itemgetter(lua_State* L) nogil:
 *     return py_wrap_object_protocol(L, OBJ_AS_INDEX)             # <<<<<<<<<<<<<<
 * 
 * cdef int py_as_function(lua_State* L) nogil:
 */
  __pyx_r = __pyx_f_3AKU_py_wrap_object_protocol(__pyx_v_L, __pyx_e_3AKU_OBJ_AS_INDEX);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1291
 *     return py_wrap_object_protocol(L, OBJ_AS_INDEX)
 * 
 * cdef int py_as_function(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_asfunc_call, 1)
 */

static int __pyx_f_3AKU_py_as_function(lua_State *__pyx_v_L) {
  CYTHON_UNUSED struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_r;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1292
 * 
 * cdef int py_as_function(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!             # <<<<<<<<<<<<<<
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_asfunc_call, 1)
 *     return 1
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unpack_single_python_argument_or_jump(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1293
 * cdef int py_as_function(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_asfunc_call, 1)             # <<<<<<<<<<<<<<
 *     return 1
 * 
 */
  lua_pushcclosure(__pyx_v_L, ((lua_CFunction)__pyx_f_3AKU_py_asfunc_call), 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1294
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_asfunc_call, 1)
 *     return 1             # <<<<<<<<<<<<<<
 * 
 * # iteration support for Python objects in Lua
 */
  __pyx_r = 1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1298
 * # iteration support for Python objects in Lua
 * 
 * cdef int py_iter(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, 0)
 */

static int __pyx_f_3AKU_py_iter(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1299
 * 
 * cdef int py_iter(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!             # <<<<<<<<<<<<<<
 *     result = py_iter_with_gil(L, py_obj, 0)
 *     if result < 0:
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unpack_single_python_argument_or_jump(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1300
 * cdef int py_iter(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, 0)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_iter_with_gil(__pyx_v_L, __pyx_v_py_obj, 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1301
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, 0)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1302
 *     result = py_iter_with_gil(L, py_obj, 0)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_51);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1303
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef int py_iterex(lua_State* L) nogil:
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1305
 *     return result
 * 
 * cdef int py_iterex(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, OBJ_UNPACK_TUPLE)
 */

static int __pyx_f_3AKU_py_iterex(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1306
 * 
 * cdef int py_iterex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!             # <<<<<<<<<<<<<<
 *     result = py_iter_with_gil(L, py_obj, OBJ_UNPACK_TUPLE)
 *     if result < 0:
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unpack_single_python_argument_or_jump(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1307
 * cdef int py_iterex(lua_State* L) nogil:
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, OBJ_UNPACK_TUPLE)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_iter_with_gil(__pyx_v_L, __pyx_v_py_obj, __pyx_e_3AKU_OBJ_UNPACK_TUPLE);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1308
 *     cdef py_object* py_obj = unpack_single_python_argument_or_jump(L) # never returns on error!
 *     result = py_iter_with_gil(L, py_obj, OBJ_UNPACK_TUPLE)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1309
 *     result = py_iter_with_gil(L, py_obj, OBJ_UNPACK_TUPLE)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_51);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1310
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef int py_enumerate(lua_State* L) nogil:
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1312
 *     return result
 * 
 * cdef int py_enumerate(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     if lua.lua_gettop(L) > 2:
 *         lua.luaL_argerror(L, 3, "invalid arguments")   # never returns!
 */

static int __pyx_f_3AKU_py_enumerate(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  double __pyx_v_start;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;
  double __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1313
 * 
 * cdef int py_enumerate(lua_State* L) nogil:
 *     if lua.lua_gettop(L) > 2:             # <<<<<<<<<<<<<<
 *         lua.luaL_argerror(L, 3, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 */
  __pyx_t_1 = (lua_gettop(__pyx_v_L) > 2);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1314
 * cdef int py_enumerate(lua_State* L) nogil:
 *     if lua.lua_gettop(L) > 2:
 *         lua.luaL_argerror(L, 3, "invalid arguments")   # never returns!             # <<<<<<<<<<<<<<
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:
 */
    luaL_argerror(__pyx_v_L, 3, __pyx_k_49);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1315
 *     if lua.lua_gettop(L) > 2:
 *         lua.luaL_argerror(L, 3, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1316
 *         lua.luaL_argerror(L, 3, "invalid arguments")   # never returns!
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     cdef double start = lua.lua_tonumber(L, -1) if lua.lua_gettop(L) == 2 else 0.0
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1317
 *     cdef py_object* py_obj = unwrap_lua_object(L, 1)
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     cdef double start = lua.lua_tonumber(L, -1) if lua.lua_gettop(L) == 2 else 0.0
 *     result = py_enumerate_with_gil(L, py_obj, start)
 */
    luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1318
 *     if not py_obj:
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     cdef double start = lua.lua_tonumber(L, -1) if lua.lua_gettop(L) == 2 else 0.0             # <<<<<<<<<<<<<<
 *     result = py_enumerate_with_gil(L, py_obj, start)
 *     if result < 0:
 */
  if ((lua_gettop(__pyx_v_L) == 2)) {
    __pyx_t_2 = lua_tonumber(__pyx_v_L, -1);
  } else {
    __pyx_t_2 = 0.0;
  }
  __pyx_v_start = __pyx_t_2;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1319
 *         lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     cdef double start = lua.lua_tonumber(L, -1) if lua.lua_gettop(L) == 2 else 0.0
 *     result = py_enumerate_with_gil(L, py_obj, start)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator with enumerate()')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_enumerate_with_gil(__pyx_v_L, __pyx_v_py_obj, __pyx_v_start);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1320
 *     cdef double start = lua.lua_tonumber(L, -1) if lua.lua_gettop(L) == 2 else 0.0
 *     result = py_enumerate_with_gil(L, py_obj, start)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error creating an iterator with enumerate()')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1321
 *     result = py_enumerate_with_gil(L, py_obj, start)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator with enumerate()')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_52);
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1322
 *     if result < 0:
 *         return lua.luaL_error(L, 'error creating an iterator with enumerate()')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1325
 * 
 * 
 * cdef int py_enumerate_with_gil(lua_State* L, py_object* py_obj, double start) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_enumerate_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, double __pyx_v_start) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  PyObject *__pyx_v_obj = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_enumerate_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1327
 * cdef int py_enumerate_with_gil(lua_State* L, py_object* py_obj, double start) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1328
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, OBJ_ENUMERATOR, start - 1.0)
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1329
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)             # <<<<<<<<<<<<<<
 *         return py_push_iterator(runtime, L, obj, OBJ_ENUMERATOR, start - 1.0)
 *     except:
 */
      __pyx_t_4 = ((PyObject *)__pyx_v_py_obj->obj);
      __Pyx_INCREF(__pyx_t_4);
      __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_obj = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1330
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, OBJ_ENUMERATOR, start - 1.0)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_r = __pyx_f_3AKU_py_push_iterator(__pyx_v_runtime, __pyx_v_L, __pyx_v_obj, __pyx_e_3AKU_OBJ_ENUMERATOR, (__pyx_v_start - 1.0));
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1331
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, OBJ_ENUMERATOR, start - 1.0)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_enumerate_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_6);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1332
 *         return py_push_iterator(runtime, L, obj, OBJ_ENUMERATOR, start - 1.0)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L13_error;} }
          __pyx_t_10 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L13_error;}
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L20_try_end;
        __pyx_L13_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1333
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L14_exception_handled;
        }
        __pyx_L14_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L20_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1334
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_iter_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("AKU.py_enumerate_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1336
 *         return -1
 * 
 * cdef int py_iter_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_iter_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_obj, int __pyx_v_type_flags) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  PyObject *__pyx_v_obj = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_iter_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1338
 * cdef int py_iter_with_gil(lua_State* L, py_object* py_obj, int type_flags) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1339
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime             # <<<<<<<<<<<<<<
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, type_flags, 0.0)
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_obj->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1340
 *     try:
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)             # <<<<<<<<<<<<<<
 *         return py_push_iterator(runtime, L, obj, type_flags, 0.0)
 *     except:
 */
      __pyx_t_4 = ((PyObject *)__pyx_v_py_obj->obj);
      __Pyx_INCREF(__pyx_t_4);
      __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1340; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_obj = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1341
 *         runtime = <LuaRuntime?>py_obj.runtime
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, type_flags, 0.0)             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_r = __pyx_f_3AKU_py_push_iterator(__pyx_v_runtime, __pyx_v_L, __pyx_v_obj, __pyx_v_type_flags, 0.0);
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1342
 *         obj = iter(<object>py_obj.obj)
 *         return py_push_iterator(runtime, L, obj, type_flags, 0.0)
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_iter_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1342; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_6);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1343
 *         return py_push_iterator(runtime, L, obj, type_flags, 0.0)
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L13_error;} }
          __pyx_t_10 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L13_error;}
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L20_try_end;
        __pyx_L13_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1344
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L14_exception_handled;
        }
        __pyx_L14_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L20_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1345
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cdef int py_push_iterator(LuaRuntime runtime, lua_State* L, iterator, int type_flags, double initial_value):
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("AKU.py_iter_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1347
 *         return -1
 * 
 * cdef int py_push_iterator(LuaRuntime runtime, lua_State* L, iterator, int type_flags, double initial_value):             # <<<<<<<<<<<<<<
 *     # push the wrapped iterator object into the C closure
 *     if py_to_lua_custom(runtime, L, iterator, type_flags) < 1:
 */

static int __pyx_f_3AKU_py_push_iterator(struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime, lua_State *__pyx_v_L, PyObject *__pyx_v_iterator, int __pyx_v_type_flags, double __pyx_v_initial_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("py_push_iterator", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1349
 * cdef int py_push_iterator(LuaRuntime runtime, lua_State* L, iterator, int type_flags, double initial_value):
 *     # push the wrapped iterator object into the C closure
 *     if py_to_lua_custom(runtime, L, iterator, type_flags) < 1:             # <<<<<<<<<<<<<<
 *         return -1
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_iter_next, 1)
 */
  __pyx_t_1 = (__pyx_f_3AKU_py_to_lua_custom(__pyx_v_runtime, __pyx_v_L, __pyx_v_iterator, __pyx_v_type_flags) < 1);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1350
 *     # push the wrapped iterator object into the C closure
 *     if py_to_lua_custom(runtime, L, iterator, type_flags) < 1:
 *         return -1             # <<<<<<<<<<<<<<
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_iter_next, 1)
 *     # Lua needs three values: iterator C function + state + last iter value
 */
    __pyx_r = -1;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1351
 *     if py_to_lua_custom(runtime, L, iterator, type_flags) < 1:
 *         return -1
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_iter_next, 1)             # <<<<<<<<<<<<<<
 *     # Lua needs three values: iterator C function + state + last iter value
 *     lua.lua_pushnil(L)
 */
  lua_pushcclosure(__pyx_v_L, ((lua_CFunction)__pyx_f_3AKU_py_iter_next), 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1353
 *     lua.lua_pushcclosure(L, <lua.lua_CFunction>py_iter_next, 1)
 *     # Lua needs three values: iterator C function + state + last iter value
 *     lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *     if (type_flags & OBJ_ENUMERATOR):
 *         lua.lua_pushnumber(L, initial_value)
 */
  lua_pushnil(__pyx_v_L);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1354
 *     # Lua needs three values: iterator C function + state + last iter value
 *     lua.lua_pushnil(L)
 *     if (type_flags & OBJ_ENUMERATOR):             # <<<<<<<<<<<<<<
 *         lua.lua_pushnumber(L, initial_value)
 *     else:
 */
  __pyx_t_2 = (__pyx_v_type_flags & __pyx_e_3AKU_OBJ_ENUMERATOR);
  if (__pyx_t_2) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1355
 *     lua.lua_pushnil(L)
 *     if (type_flags & OBJ_ENUMERATOR):
 *         lua.lua_pushnumber(L, initial_value)             # <<<<<<<<<<<<<<
 *     else:
 *         lua.lua_pushnil(L)
 */
    lua_pushnumber(__pyx_v_L, __pyx_v_initial_value);
    goto __pyx_L4;
  }
  /*else*/ {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1357
 *         lua.lua_pushnumber(L, initial_value)
 *     else:
 *         lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *     return 3
 * 
 */
    lua_pushnil(__pyx_v_L);
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1358
 *     else:
 *         lua.lua_pushnil(L)
 *     return 3             # <<<<<<<<<<<<<<
 * 
 * cdef int py_iter_next(lua_State* L) nogil:
 */
  __pyx_r = 3;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1360
 *     return 3
 * 
 * cdef int py_iter_next(lua_State* L) nogil:             # <<<<<<<<<<<<<<
 *     # first value in the C closure: the Python iterator object
 *     cdef py_object* py_obj = unwrap_lua_object_from_cclosure(L, 1)
 */

static int __pyx_f_3AKU_py_iter_next(lua_State *__pyx_v_L) {
  struct __pyx_t_3AKU_py_object *__pyx_v_py_obj;
  int __pyx_v_result;
  int __pyx_r;
  int __pyx_t_1;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1362
 * cdef int py_iter_next(lua_State* L) nogil:
 *     # first value in the C closure: the Python iterator object
 *     cdef py_object* py_obj = unwrap_lua_object_from_cclosure(L, 1)             # <<<<<<<<<<<<<<
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 */
  __pyx_v_py_obj = __pyx_f_3AKU_unwrap_lua_object_from_cclosure(__pyx_v_L, 1);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1363
 *     # first value in the C closure: the Python iterator object
 *     cdef py_object* py_obj = unwrap_lua_object_from_cclosure(L, 1)
 *     if not py_obj:             # <<<<<<<<<<<<<<
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_iter_next_with_gil(L, py_obj)
 */
  __pyx_t_1 = (!(__pyx_v_py_obj != 0));
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1364
 *     cdef py_object* py_obj = unwrap_lua_object_from_cclosure(L, 1)
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!             # <<<<<<<<<<<<<<
 *     result = py_iter_next_with_gil(L, py_obj)
 *     if result < 0:
 */
    __pyx_r = luaL_argerror(__pyx_v_L, 1, __pyx_k_45);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1365
 *     if not py_obj:
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_iter_next_with_gil(L, py_obj)             # <<<<<<<<<<<<<<
 *     if result < 0:
 *         return lua.luaL_error(L, 'error while calling next(iterator)')  # never returns!
 */
  __pyx_v_result = __pyx_f_3AKU_py_iter_next_with_gil(__pyx_v_L, __pyx_v_py_obj);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1366
 *         return lua.luaL_argerror(L, 1, "not a python object")   # never returns!
 *     result = py_iter_next_with_gil(L, py_obj)
 *     if result < 0:             # <<<<<<<<<<<<<<
 *         return lua.luaL_error(L, 'error while calling next(iterator)')  # never returns!
 *     return result
 */
  __pyx_t_1 = (__pyx_v_result < 0);
  if (__pyx_t_1) {

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1367
 *     result = py_iter_next_with_gil(L, py_obj)
 *     if result < 0:
 *         return lua.luaL_error(L, 'error while calling next(iterator)')  # never returns!             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_r = luaL_error(__pyx_v_L, __pyx_k_53);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1368
 *     if result < 0:
 *         return lua.luaL_error(L, 'error while calling next(iterator)')  # never returns!
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef int py_iter_next_with_gil(lua_State* L, py_object* py_iter) with gil:
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1370
 *     return result
 * 
 * cdef int py_iter_next_with_gil(lua_State* L, py_object* py_iter) with gil:             # <<<<<<<<<<<<<<
 *     cdef LuaRuntime runtime
 *     try:
 */

static int __pyx_f_3AKU_py_iter_next_with_gil(lua_State *__pyx_v_L, struct __pyx_t_3AKU_py_object *__pyx_v_py_iter) {
  struct __pyx_obj_3AKU_LuaRuntime *__pyx_v_runtime = 0;
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_v_result = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("py_iter_next_with_gil", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1372
 * cdef int py_iter_next_with_gil(lua_State* L, py_object* py_iter) with gil:
 *     cdef LuaRuntime runtime
 *     try:             # <<<<<<<<<<<<<<
 *         runtime = <LuaRuntime?>py_iter.runtime
 *         if PY_VERSION_HEX >= 0x02060000:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1373
 *     cdef LuaRuntime runtime
 *     try:
 *         runtime = <LuaRuntime?>py_iter.runtime             # <<<<<<<<<<<<<<
 *         if PY_VERSION_HEX >= 0x02060000:
 *             obj = next(<object>py_iter.obj)
 */
      __Pyx_INCREF(((PyObject *)((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_iter->runtime)));
      __pyx_v_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_v_py_iter->runtime);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1374
 *     try:
 *         runtime = <LuaRuntime?>py_iter.runtime
 *         if PY_VERSION_HEX >= 0x02060000:             # <<<<<<<<<<<<<<
 *             obj = next(<object>py_iter.obj)
 *         else:
 */
      __pyx_t_4 = (PY_VERSION_HEX >= 0x02060000);
      if (__pyx_t_4) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1375
 *         runtime = <LuaRuntime?>py_iter.runtime
 *         if PY_VERSION_HEX >= 0x02060000:
 *             obj = next(<object>py_iter.obj)             # <<<<<<<<<<<<<<
 *         else:
 *             obj = (<object>py_iter.obj).next()
 */
        __pyx_t_5 = ((PyObject *)__pyx_v_py_iter->obj);
        __Pyx_INCREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyIter_Next(__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1375; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_obj = __pyx_t_6;
        __pyx_t_6 = 0;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1377
 *             obj = next(<object>py_iter.obj)
 *         else:
 *             obj = (<object>py_iter.obj).next()             # <<<<<<<<<<<<<<
 *         if (py_iter.type_flags & OBJ_UNPACK_TUPLE) and isinstance(obj, tuple):
 *             # special case: when the iterable returns a tuple, unpack it
 */
        __pyx_t_6 = PyObject_GetAttr(((PyObject *)__pyx_v_py_iter->obj), __pyx_n_s__next); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1377; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = PyObject_Call(__pyx_t_6, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1377; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_v_obj = __pyx_t_5;
        __pyx_t_5 = 0;
      }
      __pyx_L11:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1378
 *         else:
 *             obj = (<object>py_iter.obj).next()
 *         if (py_iter.type_flags & OBJ_UNPACK_TUPLE) and isinstance(obj, tuple):             # <<<<<<<<<<<<<<
 *             # special case: when the iterable returns a tuple, unpack it
 *             push_lua_arguments(runtime, L, <tuple>obj, 1)
 */
      if ((__pyx_v_py_iter->type_flags & __pyx_e_3AKU_OBJ_UNPACK_TUPLE)) {
        __pyx_t_4 = PyTuple_Check(__pyx_v_obj); 
        __pyx_t_7 = __pyx_t_4;
      } else {
        __pyx_t_7 = (__pyx_v_py_iter->type_flags & __pyx_e_3AKU_OBJ_UNPACK_TUPLE);
      }
      if (__pyx_t_7) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1380
 *         if (py_iter.type_flags & OBJ_UNPACK_TUPLE) and isinstance(obj, tuple):
 *             # special case: when the iterable returns a tuple, unpack it
 *             push_lua_arguments(runtime, L, <tuple>obj, 1)             # <<<<<<<<<<<<<<
 *             return len(<tuple>obj)
 *         elif (py_iter.type_flags & OBJ_ENUMERATOR):
 */
        __pyx_t_8 = __pyx_f_3AKU_push_lua_arguments(__pyx_v_runtime, __pyx_v_L, ((PyObject*)__pyx_v_obj), 1); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1380; __pyx_clineno = __LINE__; goto __pyx_L3_error;}

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1381
 *             # special case: when the iterable returns a tuple, unpack it
 *             push_lua_arguments(runtime, L, <tuple>obj, 1)
 *             return len(<tuple>obj)             # <<<<<<<<<<<<<<
 *         elif (py_iter.type_flags & OBJ_ENUMERATOR):
 *             lua.lua_pushnumber(L, lua.lua_tonumber(L, -1) + 1.0)
 */
        if (unlikely(__pyx_v_obj == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        __pyx_t_9 = PyTuple_GET_SIZE(((PyObject *)((PyObject*)__pyx_v_obj))); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __pyx_r = __pyx_t_9;
        goto __pyx_L7_try_return;
        goto __pyx_L12;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1382
 *             push_lua_arguments(runtime, L, <tuple>obj, 1)
 *             return len(<tuple>obj)
 *         elif (py_iter.type_flags & OBJ_ENUMERATOR):             # <<<<<<<<<<<<<<
 *             lua.lua_pushnumber(L, lua.lua_tonumber(L, -1) + 1.0)
 *         result = py_to_lua(runtime, L, obj, 1)
 */
      __pyx_t_8 = (__pyx_v_py_iter->type_flags & __pyx_e_3AKU_OBJ_ENUMERATOR);
      if (__pyx_t_8) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1383
 *             return len(<tuple>obj)
 *         elif (py_iter.type_flags & OBJ_ENUMERATOR):
 *             lua.lua_pushnumber(L, lua.lua_tonumber(L, -1) + 1.0)             # <<<<<<<<<<<<<<
 *         result = py_to_lua(runtime, L, obj, 1)
 *         if result < 1:
 */
        lua_pushnumber(__pyx_v_L, (lua_tonumber(__pyx_v_L, -1) + 1.0));
        goto __pyx_L12;
      }
      __pyx_L12:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1384
 *         elif (py_iter.type_flags & OBJ_ENUMERATOR):
 *             lua.lua_pushnumber(L, lua.lua_tonumber(L, -1) + 1.0)
 *         result = py_to_lua(runtime, L, obj, 1)             # <<<<<<<<<<<<<<
 *         if result < 1:
 *             return -1
 */
      __pyx_t_8 = __pyx_f_3AKU_py_to_lua(__pyx_v_runtime, __pyx_v_L, __pyx_v_obj, 1); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1384; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_t_5 = PyInt_FromLong(__pyx_t_8); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1384; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_v_result = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1385
 *             lua.lua_pushnumber(L, lua.lua_tonumber(L, -1) + 1.0)
 *         result = py_to_lua(runtime, L, obj, 1)
 *         if result < 1:             # <<<<<<<<<<<<<<
 *             return -1
 *         if (py_iter.type_flags & OBJ_ENUMERATOR):
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_result, __pyx_int_1, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1386
 *         result = py_to_lua(runtime, L, obj, 1)
 *         if result < 1:
 *             return -1             # <<<<<<<<<<<<<<
 *         if (py_iter.type_flags & OBJ_ENUMERATOR):
 *             result += 1
 */
        __pyx_r = -1;
        goto __pyx_L7_try_return;
        goto __pyx_L13;
      }
      __pyx_L13:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1387
 *         if result < 1:
 *             return -1
 *         if (py_iter.type_flags & OBJ_ENUMERATOR):             # <<<<<<<<<<<<<<
 *             result += 1
 *         return result
 */
      __pyx_t_8 = (__pyx_v_py_iter->type_flags & __pyx_e_3AKU_OBJ_ENUMERATOR);
      if (__pyx_t_8) {

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1388
 *             return -1
 *         if (py_iter.type_flags & OBJ_ENUMERATOR):
 *             result += 1             # <<<<<<<<<<<<<<
 *         return result
 *     except StopIteration:
 */
        __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_result, __pyx_int_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_v_result);
        __pyx_v_result = __pyx_t_5;
        __pyx_t_5 = 0;
        goto __pyx_L14;
      }
      __pyx_L14:;

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1389
 *         if (py_iter.type_flags & OBJ_ENUMERATOR):
 *             result += 1
 *         return result             # <<<<<<<<<<<<<<
 *     except StopIteration:
 *         lua.lua_pushnil(L)
 */
      __pyx_t_8 = __Pyx_PyInt_AsInt(__pyx_v_result); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_r = __pyx_t_8;
      goto __pyx_L7_try_return;
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1390
 *             result += 1
 *         return result
 *     except StopIteration:             # <<<<<<<<<<<<<<
 *         lua.lua_pushnil(L)
 *         return 1
 */
    __pyx_t_8 = PyErr_ExceptionMatches(__pyx_builtin_StopIteration);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("AKU.py_iter_next_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_10) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_10);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1391
 *         return result
 *     except StopIteration:
 *         lua.lua_pushnil(L)             # <<<<<<<<<<<<<<
 *         return 1
 *     except:
 */
      lua_pushnil(__pyx_v_L);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1392
 *     except StopIteration:
 *         lua.lua_pushnil(L)
 *         return 1             # <<<<<<<<<<<<<<
 *     except:
 *         try: runtime.store_raised_exception()
 */
      __pyx_r = 1;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L4_exception_handled;
    }

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1393
 *         lua.lua_pushnil(L)
 *         return 1
 *     except:             # <<<<<<<<<<<<<<
 *         try: runtime.store_raised_exception()
 *         except: pass
 */
    /*except:*/ {
      __Pyx_AddTraceback("AKU.py_iter_next_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_6, &__pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1393; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_5);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1394
 *         return 1
 *     except:
 *         try: runtime.store_raised_exception()             # <<<<<<<<<<<<<<
 *         except: pass
 *         return -1
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_13);
        /*try:*/ {
          if (unlikely(!__pyx_v_runtime)) { __Pyx_RaiseUnboundLocalError("runtime"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L19_error;} }
          __pyx_t_8 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_runtime->__pyx_vtab)->store_raised_exception(__pyx_v_runtime); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L19_error;}
        }
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L26_try_end;
        __pyx_L19_error:;

        /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1395
 *     except:
 *         try: runtime.store_raised_exception()
 *         except: pass             # <<<<<<<<<<<<<<
 *         return -1
 * 
 */
        /*except:*/ {
          PyErr_Restore(0,0,0);
          goto __pyx_L20_exception_handled;
        }
        __pyx_L20_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        __pyx_L26_try_end:;
      }

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1396
 *         try: runtime.store_raised_exception()
 *         except: pass
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * # 'python' module functions in Lua
 */
      __pyx_r = -1;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L6_except_return;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_WriteUnraisable("AKU.py_iter_next_with_gil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_runtime);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_5_removeMoaiSingleton(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3AKU_5_removeMoaiSingleton = {__Pyx_NAMESTR("_removeMoaiSingleton"), (PyCFunction)__pyx_pw_3AKU_5_removeMoaiSingleton, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_3AKU_5_removeMoaiSingleton(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_removeMoaiSingleton (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_4_removeMoaiSingleton(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":9
 * _aku=None
 * 
 * def _removeMoaiSingleton():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */

static PyObject *__pyx_pf_3AKU_4_removeMoaiSingleton(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_removeMoaiSingleton", 0);

  /* "AKU.pyx":11
 * def _removeMoaiSingleton():
 * 	global _aku
 * 	if _aku:             # <<<<<<<<<<<<<<
 * 		del _aku
 * 
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "AKU.pyx":12
 * 	global _aku
 * 	if _aku:
 * 		del _aku             # <<<<<<<<<<<<<<
 * 
 * def getAKU():
 */
    if (__Pyx_DelAttrString(__pyx_m, "_aku") < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU._removeMoaiSingleton", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_7getAKU(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_3AKU_7getAKU = {__Pyx_NAMESTR("getAKU"), (PyCFunction)__pyx_pw_3AKU_7getAKU, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_3AKU_7getAKU(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAKU (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_6getAKU(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":14
 * 		del _aku
 * 
 * def getAKU():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */

static PyObject *__pyx_pf_3AKU_6getAKU(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getAKU", 0);

  /* "AKU.pyx":16
 * def getAKU():
 * 	global _aku
 * 	if _aku:             # <<<<<<<<<<<<<<
 * 		return _aku
 * 	return AKU()
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "AKU.pyx":17
 * 	global _aku
 * 	if _aku:
 * 		return _aku             # <<<<<<<<<<<<<<
 * 	return AKU()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "AKU.pyx":18
 * 	if _aku:
 * 		return _aku
 * 	return AKU()             # <<<<<<<<<<<<<<
 * 
 * atexit.register(_removeMoaiSingleton)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU_AKU)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.getAKU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":22
 * atexit.register(_removeMoaiSingleton)
 * 
 * cdef void _callbackOpenWindow( const_char_ptr title, int width, int height ):             # <<<<<<<<<<<<<<
 * 	_aku.onOpenWindow(title, width, height)
 * 
 */

static void __pyx_f_3AKU__callbackOpenWindow(const char* __pyx_v_title, int __pyx_v_width, int __pyx_v_height) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_callbackOpenWindow", 0);

  /* "AKU.pyx":23
 * 
 * cdef void _callbackOpenWindow( const_char_ptr title, int width, int height ):
 * 	_aku.onOpenWindow(title, width, height)             # <<<<<<<<<<<<<<
 * 
 * cdef void _callbackEnterFullscreenMode():
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__onOpenWindow); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyInt_FromLong(__pyx_v_width); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyInt_FromLong(__pyx_v_height); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("AKU._callbackOpenWindow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "AKU.pyx":25
 * 	_aku.onOpenWindow(title, width, height)
 * 
 * cdef void _callbackEnterFullscreenMode():             # <<<<<<<<<<<<<<
 * 	_aku.onEnterFullscreenMode()
 * 
 */

static void __pyx_f_3AKU__callbackEnterFullscreenMode(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_callbackEnterFullscreenMode", 0);

  /* "AKU.pyx":26
 * 
 * cdef void _callbackEnterFullscreenMode():
 * 	_aku.onEnterFullscreenMode()             # <<<<<<<<<<<<<<
 * 
 * cdef void _callbackExitFullscreenMode():
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s_54); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("AKU._callbackEnterFullscreenMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "AKU.pyx":28
 * 	_aku.onEnterFullscreenMode()
 * 
 * cdef void _callbackExitFullscreenMode():             # <<<<<<<<<<<<<<
 * 	_aku.onExitFullscreenMode()
 * 
 */

static void __pyx_f_3AKU__callbackExitFullscreenMode(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_callbackExitFullscreenMode", 0);

  /* "AKU.pyx":29
 * 
 * cdef void _callbackExitFullscreenMode():
 * 	_aku.onExitFullscreenMode()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s___aku); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s_55); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("AKU._callbackExitFullscreenMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_3AKU_3AKU_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3AKU_3AKU_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3AKU_3AKU___cinit__(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":38
 * 	cdef object _funcExitFS
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		global _aku
 * 		_aku = self
 */

static int __pyx_pf_3AKU_3AKU___cinit__(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "AKU.pyx":40
 * 	def __cinit__(self):
 * 		global _aku
 * 		_aku = self             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s___aku, ((PyObject *)__pyx_v_self)) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_3AKU_3AKU_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3AKU_3AKU_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3AKU_3AKU_2__dealloc__(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "AKU.pyx":42
 * 		_aku = self
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		global _aku
 * 		_aku=None
 */

static void __pyx_pf_3AKU_3AKU_2__dealloc__(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "AKU.pyx":44
 * 	def __dealloc__(self):
 * 		global _aku
 * 		_aku=None             # <<<<<<<<<<<<<<
 * 		self.deleteContext()
 * 
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s___aku, Py_None) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "AKU.pyx":45
 * 		global _aku
 * 		_aku=None
 * 		self.deleteContext()             # <<<<<<<<<<<<<<
 * 
 * 	def createContext(self):
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__deleteContext); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.AKU.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_5createContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_5createContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createContext (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_4createContext(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":47
 * 		self.deleteContext()
 * 
 * 	def createContext(self):             # <<<<<<<<<<<<<<
 * 		AKUCreateContext()
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_4createContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  lua_State *__pyx_v_L;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createContext", 0);

  /* "AKU.pyx":48
 * 
 * 	def createContext(self):
 * 		AKUCreateContext()             # <<<<<<<<<<<<<<
 * 
 * 		AKUExtLoadLuacrypto()
 */
  AKUCreateContext();

  /* "AKU.pyx":50
 * 		AKUCreateContext()
 * 
 * 		AKUExtLoadLuacrypto()             # <<<<<<<<<<<<<<
 * 		# print("loading luacurl")
 * 		AKUExtLoadLuacurl()
 */
  AKUExtLoadLuacrypto();

  /* "AKU.pyx":52
 * 		AKUExtLoadLuacrypto()
 * 		# print("loading luacurl")
 * 		AKUExtLoadLuacurl()             # <<<<<<<<<<<<<<
 * 		# print("loading lfs")
 * 		AKUExtLoadLuafilesystem()
 */
  AKUExtLoadLuacurl();

  /* "AKU.pyx":54
 * 		AKUExtLoadLuacurl()
 * 		# print("loading lfs")
 * 		AKUExtLoadLuafilesystem()             # <<<<<<<<<<<<<<
 * 		# print("loading socket")
 * 		AKUExtLoadLuasocket()
 */
  AKUExtLoadLuafilesystem();

  /* "AKU.pyx":56
 * 		AKUExtLoadLuafilesystem()
 * 		# print("loading socket")
 * 		AKUExtLoadLuasocket()             # <<<<<<<<<<<<<<
 * 		# print("loading luasql")
 * 		AKUExtLoadLuasql()
 */
  AKUExtLoadLuasocket();

  /* "AKU.pyx":58
 * 		AKUExtLoadLuasocket()
 * 		# print("loading luasql")
 * 		AKUExtLoadLuasql()             # <<<<<<<<<<<<<<
 * 		# print("loading lpeg")
 * 		AKUExtLoadLPeg()
 */
  AKUExtLoadLuasql();

  /* "AKU.pyx":60
 * 		AKUExtLoadLuasql()
 * 		# print("loading lpeg")
 * 		AKUExtLoadLPeg()             # <<<<<<<<<<<<<<
 * 
 * 		AKUExtLoadStruct()
 */
  AKUExtLoadLPeg();

  /* "AKU.pyx":62
 * 		AKUExtLoadLPeg()
 * 
 * 		AKUExtLoadStruct()             # <<<<<<<<<<<<<<
 * 
 * 		# AKUUntzInit()
 */
  AKUExtLoadStruct();

  /* "AKU.pyx":65
 * 
 * 		# AKUUntzInit()
 * 		AKUFmodDesignerInit()             # <<<<<<<<<<<<<<
 * 
 * 		registerHelpers()
 */
  AKUFmodDesignerInit();

  /* "AKU.pyx":67
 * 		AKUFmodDesignerInit()
 * 
 * 		registerHelpers()             # <<<<<<<<<<<<<<
 * 		registerExtensionClasses()
 * 
 */
  registerHelpers();

  /* "AKU.pyx":68
 * 
 * 		registerHelpers()
 * 		registerExtensionClasses()             # <<<<<<<<<<<<<<
 * 
 * 		# AKUAudioSamplerInit()
 */
  registerExtensionClasses();

  /* "AKU.pyx":72
 * 		# AKUAudioSamplerInit()
 * 
 * 		AKUSetFunc_OpenWindow(_callbackOpenWindow)             # <<<<<<<<<<<<<<
 * 		AKUSetFunc_ExitFullscreenMode(_callbackExitFullscreenMode)
 * 		AKUSetFunc_EnterFullscreenMode(_callbackEnterFullscreenMode)
 */
  AKUSetFunc_OpenWindow(__pyx_f_3AKU__callbackOpenWindow);

  /* "AKU.pyx":73
 * 
 * 		AKUSetFunc_OpenWindow(_callbackOpenWindow)
 * 		AKUSetFunc_ExitFullscreenMode(_callbackExitFullscreenMode)             # <<<<<<<<<<<<<<
 * 		AKUSetFunc_EnterFullscreenMode(_callbackEnterFullscreenMode)
 * 
 */
  AKUSetFunc_ExitFullscreenMode(__pyx_f_3AKU__callbackExitFullscreenMode);

  /* "AKU.pyx":74
 * 		AKUSetFunc_OpenWindow(_callbackOpenWindow)
 * 		AKUSetFunc_ExitFullscreenMode(_callbackExitFullscreenMode)
 * 		AKUSetFunc_EnterFullscreenMode(_callbackEnterFullscreenMode)             # <<<<<<<<<<<<<<
 * 
 * 		cdef lua_State *L = AKUGetLuaState()
 */
  AKUSetFunc_EnterFullscreenMode(__pyx_f_3AKU__callbackEnterFullscreenMode);

  /* "AKU.pyx":76
 * 		AKUSetFunc_EnterFullscreenMode(_callbackEnterFullscreenMode)
 * 
 * 		cdef lua_State *L = AKUGetLuaState()             # <<<<<<<<<<<<<<
 * 		self.lua=LuaRuntime()
 * 		self.lua.init(L)
 */
  __pyx_v_L = AKUGetLuaState();

  /* "AKU.pyx":77
 * 
 * 		cdef lua_State *L = AKUGetLuaState()
 * 		self.lua=LuaRuntime()             # <<<<<<<<<<<<<<
 * 		self.lua.init(L)
 * 
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3AKU_LuaRuntime)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lua);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->lua));
  __pyx_v_self->lua = ((struct __pyx_obj_3AKU_LuaRuntime *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "AKU.pyx":78
 * 		cdef lua_State *L = AKUGetLuaState()
 * 		self.lua=LuaRuntime()
 * 		self.lua.init(L)             # <<<<<<<<<<<<<<
 * 
 * 	def setFuncOpenWindow(self, f):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->lua->__pyx_vtab)->init(__pyx_v_self->lua, __pyx_v_L); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.AKU.createContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_7setFuncOpenWindow(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_7setFuncOpenWindow(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncOpenWindow (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_6setFuncOpenWindow(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_f));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":80
 * 		self.lua.init(L)
 * 
 * 	def setFuncOpenWindow(self, f):             # <<<<<<<<<<<<<<
 * 		self._funcOpenWindow=f
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_6setFuncOpenWindow(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncOpenWindow", 0);

  /* "AKU.pyx":81
 * 
 * 	def setFuncOpenWindow(self, f):
 * 		self._funcOpenWindow=f             # <<<<<<<<<<<<<<
 * 
 * 	def setFuncEnterFullscreenMode(self, f):
 */
  __Pyx_INCREF(__pyx_v_f);
  __Pyx_GIVEREF(__pyx_v_f);
  __Pyx_GOTREF(__pyx_v_self->_funcOpenWindow);
  __Pyx_DECREF(__pyx_v_self->_funcOpenWindow);
  __pyx_v_self->_funcOpenWindow = __pyx_v_f;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_9setFuncEnterFullscreenMode(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_9setFuncEnterFullscreenMode(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncEnterFullscreenMode (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_8setFuncEnterFullscreenMode(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_f));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":83
 * 		self._funcOpenWindow=f
 * 
 * 	def setFuncEnterFullscreenMode(self, f):             # <<<<<<<<<<<<<<
 * 		self._funcEnterFS=f
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_8setFuncEnterFullscreenMode(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncEnterFullscreenMode", 0);

  /* "AKU.pyx":84
 * 
 * 	def setFuncEnterFullscreenMode(self, f):
 * 		self._funcEnterFS=f             # <<<<<<<<<<<<<<
 * 
 * 	def setFuncExitFullscreenMode(self, f):
 */
  __Pyx_INCREF(__pyx_v_f);
  __Pyx_GIVEREF(__pyx_v_f);
  __Pyx_GOTREF(__pyx_v_self->_funcEnterFS);
  __Pyx_DECREF(__pyx_v_self->_funcEnterFS);
  __pyx_v_self->_funcEnterFS = __pyx_v_f;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_11setFuncExitFullscreenMode(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_11setFuncExitFullscreenMode(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncExitFullscreenMode (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_10setFuncExitFullscreenMode(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_f));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":86
 * 		self._funcEnterFS=f
 * 
 * 	def setFuncExitFullscreenMode(self, f):             # <<<<<<<<<<<<<<
 * 		self._funcExitFS=f
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_10setFuncExitFullscreenMode(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFuncExitFullscreenMode", 0);

  /* "AKU.pyx":87
 * 
 * 	def setFuncExitFullscreenMode(self, f):
 * 		self._funcExitFS=f             # <<<<<<<<<<<<<<
 * 
 * 	def getLuaRuntime(self):
 */
  __Pyx_INCREF(__pyx_v_f);
  __Pyx_GIVEREF(__pyx_v_f);
  __Pyx_GOTREF(__pyx_v_self->_funcExitFS);
  __Pyx_DECREF(__pyx_v_self->_funcExitFS);
  __pyx_v_self->_funcExitFS = __pyx_v_f;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_13getLuaRuntime(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_13getLuaRuntime(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLuaRuntime (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_12getLuaRuntime(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":89
 * 		self._funcExitFS=f
 * 
 * 	def getLuaRuntime(self):             # <<<<<<<<<<<<<<
 * 		return self.lua
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_12getLuaRuntime(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLuaRuntime", 0);

  /* "AKU.pyx":90
 * 
 * 	def getLuaRuntime(self):
 * 		return self.lua             # <<<<<<<<<<<<<<
 * 
 * 	def checkContext(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->lua));
  __pyx_r = ((PyObject *)__pyx_v_self->lua);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_15checkContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_15checkContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkContext (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_14checkContext(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":92
 * 		return self.lua
 * 
 * 	def checkContext(self):             # <<<<<<<<<<<<<<
 * 		return AKUGetContext() != 0
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_14checkContext(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkContext", 0);

  /* "AKU.pyx":93
 * 
 * 	def checkContext(self):
 * 		return AKUGetContext() != 0             # <<<<<<<<<<<<<<
 * 
 * 	def resetContext(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((AKUGetContext() != 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("AKU.AKU.checkContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_17resetContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_17resetContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("resetContext (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_16resetContext(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":95
 * 		return AKUGetContext() != 0
 * 
 * 	def resetContext(self):             # <<<<<<<<<<<<<<
 * 		self.deleteContext()
 * 		self.createContext()
 */

static PyObject *__pyx_pf_3AKU_3AKU_16resetContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("resetContext", 0);

  /* "AKU.pyx":96
 * 
 * 	def resetContext(self):
 * 		self.deleteContext()             # <<<<<<<<<<<<<<
 * 		self.createContext()
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__deleteContext); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "AKU.pyx":97
 * 	def resetContext(self):
 * 		self.deleteContext()
 * 		self.createContext()             # <<<<<<<<<<<<<<
 * 
 * 	def deleteContext(self):
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__createContext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.AKU.resetContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_19deleteContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_19deleteContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deleteContext (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_18deleteContext(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":99
 * 		self.createContext()
 * 
 * 	def deleteContext(self):             # <<<<<<<<<<<<<<
 * 		context=AKUGetContext()
 * 		if context != 0:
 */

static PyObject *__pyx_pf_3AKU_3AKU_18deleteContext(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  int __pyx_v_context;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("deleteContext", 0);

  /* "AKU.pyx":100
 * 
 * 	def deleteContext(self):
 * 		context=AKUGetContext()             # <<<<<<<<<<<<<<
 * 		if context != 0:
 * 			self.lua.destroy()
 */
  __pyx_v_context = AKUGetContext();

  /* "AKU.pyx":101
 * 	def deleteContext(self):
 * 		context=AKUGetContext()
 * 		if context != 0:             # <<<<<<<<<<<<<<
 * 			self.lua.destroy()
 * 			self.lua = None
 */
  __pyx_t_1 = (__pyx_v_context != 0);
  if (__pyx_t_1) {

    /* "AKU.pyx":102
 * 		context=AKUGetContext()
 * 		if context != 0:
 * 			self.lua.destroy()             # <<<<<<<<<<<<<<
 * 			self.lua = None
 * 			AKUDeleteContext(context)
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_3AKU_LuaRuntime *)__pyx_v_self->lua->__pyx_vtab)->destroy(__pyx_v_self->lua); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "AKU.pyx":103
 * 		if context != 0:
 * 			self.lua.destroy()
 * 			self.lua = None             # <<<<<<<<<<<<<<
 * 			AKUDeleteContext(context)
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->lua);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->lua));
    __pyx_v_self->lua = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None);

    /* "AKU.pyx":104
 * 			self.lua.destroy()
 * 			self.lua = None
 * 			AKUDeleteContext(context)             # <<<<<<<<<<<<<<
 * 
 * 	def clearMemPool(self):
 */
    AKUDeleteContext(__pyx_v_context);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.AKU.deleteContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_21clearMemPool(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_21clearMemPool(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clearMemPool (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_20clearMemPool(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":106
 * 			AKUDeleteContext(context)
 * 
 * 	def clearMemPool(self):             # <<<<<<<<<<<<<<
 * 		AKUClearMemPool()
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_20clearMemPool(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clearMemPool", 0);

  /* "AKU.pyx":107
 * 
 * 	def clearMemPool(self):
 * 		AKUClearMemPool()             # <<<<<<<<<<<<<<
 * 
 * 	def setScreenSize(self, w, h):
 */
  AKUClearMemPool();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_23setScreenSize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_23setScreenSize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_h = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setScreenSize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__w,&__pyx_n_s__h,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__w)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__h)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setScreenSize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setScreenSize") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_w = values[0];
    __pyx_v_h = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setScreenSize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setScreenSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_22setScreenSize(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_w, __pyx_v_h);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":109
 * 		AKUClearMemPool()
 * 
 * 	def setScreenSize(self, w, h):             # <<<<<<<<<<<<<<
 * 		AKUSetScreenSize(w,h)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_22setScreenSize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_w, PyObject *__pyx_v_h) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setScreenSize", 0);

  /* "AKU.pyx":110
 * 
 * 	def setScreenSize(self, w, h):
 * 		AKUSetScreenSize(w,h)             # <<<<<<<<<<<<<<
 * 
 * 	def setViewSize(self, w, h):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_w); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_h); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetScreenSize(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setScreenSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_25setViewSize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_25setViewSize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_h = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setViewSize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__w,&__pyx_n_s__h,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__w)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__h)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setViewSize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setViewSize") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_w = values[0];
    __pyx_v_h = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setViewSize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setViewSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_24setViewSize(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_w, __pyx_v_h);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":112
 * 		AKUSetScreenSize(w,h)
 * 
 * 	def setViewSize(self, w, h):             # <<<<<<<<<<<<<<
 * 		AKUSetViewSize(w,h)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_24setViewSize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_w, PyObject *__pyx_v_h) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setViewSize", 0);

  /* "AKU.pyx":113
 * 
 * 	def setViewSize(self, w, h):
 * 		AKUSetViewSize(w,h)             # <<<<<<<<<<<<<<
 * 
 * 	def setOrientationLandscape(self):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_w); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_h); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetViewSize(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setViewSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_27setOrientationLandscape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_27setOrientationLandscape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrientationLandscape (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_26setOrientationLandscape(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":115
 * 		AKUSetViewSize(w,h)
 * 
 * 	def setOrientationLandscape(self):             # <<<<<<<<<<<<<<
 * 		AKUSetOrientation(1)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_26setOrientationLandscape(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrientationLandscape", 0);

  /* "AKU.pyx":116
 * 
 * 	def setOrientationLandscape(self):
 * 		AKUSetOrientation(1)             # <<<<<<<<<<<<<<
 * 
 * 	def setOrientationPortrait(self):
 */
  AKUSetOrientation(1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_29setOrientationPortrait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_29setOrientationPortrait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrientationPortrait (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_28setOrientationPortrait(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":118
 * 		AKUSetOrientation(1)
 * 
 * 	def setOrientationPortrait(self):             # <<<<<<<<<<<<<<
 * 		AKUSetOrientation(0)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_28setOrientationPortrait(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrientationPortrait", 0);

  /* "AKU.pyx":119
 * 
 * 	def setOrientationPortrait(self):
 * 		AKUSetOrientation(0)             # <<<<<<<<<<<<<<
 * 
 * 	def setWorkingDirectory(self, path):
 */
  AKUSetOrientation(0);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_31setWorkingDirectory(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_31setWorkingDirectory(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorkingDirectory (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_30setWorkingDirectory(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_path));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":121
 * 		AKUSetOrientation(0)
 * 
 * 	def setWorkingDirectory(self, path):             # <<<<<<<<<<<<<<
 * 		AKUSetWorkingDirectory(path)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_30setWorkingDirectory(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  const char* __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setWorkingDirectory", 0);

  /* "AKU.pyx":122
 * 
 * 	def setWorkingDirectory(self, path):
 * 		AKUSetWorkingDirectory(path)             # <<<<<<<<<<<<<<
 * 
 * 	def reserveInputDevices(self, count):
 */
  __pyx_t_1 = PyBytes_AsString(__pyx_v_path); if (unlikely((__pyx_t_1 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetWorkingDirectory(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setWorkingDirectory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_33reserveInputDevices(PyObject *__pyx_v_self, PyObject *__pyx_v_count); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_33reserveInputDevices(PyObject *__pyx_v_self, PyObject *__pyx_v_count) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reserveInputDevices (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_32reserveInputDevices(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_count));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":124
 * 		AKUSetWorkingDirectory(path)
 * 
 * 	def reserveInputDevices(self, count):             # <<<<<<<<<<<<<<
 * 		AKUReserveInputDevices(count)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_32reserveInputDevices(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_count) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reserveInputDevices", 0);

  /* "AKU.pyx":125
 * 
 * 	def reserveInputDevices(self, count):
 * 		AKUReserveInputDevices(count)             # <<<<<<<<<<<<<<
 * 
 * 	def reserveInputDeviceSensors(self, devId, count):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_count); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUReserveInputDevices(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.reserveInputDevices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_35reserveInputDeviceSensors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_35reserveInputDeviceSensors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_count = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reserveInputDeviceSensors (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__count,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__count)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("reserveInputDeviceSensors", 1, 2, 2, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "reserveInputDeviceSensors") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_devId = values[0];
    __pyx_v_count = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("reserveInputDeviceSensors", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.reserveInputDeviceSensors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_34reserveInputDeviceSensors(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_count);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":127
 * 		AKUReserveInputDevices(count)
 * 
 * 	def reserveInputDeviceSensors(self, devId, count):             # <<<<<<<<<<<<<<
 * 		AKUReserveInputDeviceSensors(devId, count)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_34reserveInputDeviceSensors(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_count) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reserveInputDeviceSensors", 0);

  /* "AKU.pyx":128
 * 
 * 	def reserveInputDeviceSensors(self, devId, count):
 * 		AKUReserveInputDeviceSensors(devId, count)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputConfigurationName(self, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_count); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUReserveInputDeviceSensors(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.reserveInputDeviceSensors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_37setInputConfigurationName(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_37setInputConfigurationName(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputConfigurationName (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_36setInputConfigurationName(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":130
 * 		AKUReserveInputDeviceSensors(devId, count)
 * 
 * 	def setInputConfigurationName(self, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputConfigurationName(name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_36setInputConfigurationName(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  const char* __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputConfigurationName", 0);

  /* "AKU.pyx":131
 * 
 * 	def setInputConfigurationName(self, name):
 * 		AKUSetInputConfigurationName(name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDevice(self, id, name):
 */
  __pyx_t_1 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_1 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputConfigurationName(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputConfigurationName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_39setInputDevice(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_39setInputDevice(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_id = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDevice (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__id,&__pyx_n_s__name,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDevice", 1, 2, 2, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDevice") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_id = values[0];
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDevice", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_38setInputDevice(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_id, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":133
 * 		AKUSetInputConfigurationName(name)
 * 
 * 	def setInputDevice(self, id, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDevice(id, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_38setInputDevice(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_id, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  const char* __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDevice", 0);

  /* "AKU.pyx":134
 * 
 * 	def setInputDevice(self, id, name):
 * 		AKUSetInputDevice(id, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDeviceKeyboard(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_id); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_2 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDevice(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_41setInputDeviceKeyboard(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_41setInputDeviceKeyboard(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDeviceKeyboard (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceKeyboard", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceKeyboard", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDeviceKeyboard") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDeviceKeyboard", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_40setInputDeviceKeyboard(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":136
 * 		AKUSetInputDevice(id, name)
 * 
 * 	def setInputDeviceKeyboard(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDeviceKeyboard(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_40setInputDeviceKeyboard(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDeviceKeyboard", 0);

  /* "AKU.pyx":137
 * 
 * 	def setInputDeviceKeyboard(self, devId, sensorId, name):
 * 		AKUSetInputDeviceKeyboard(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDevicePointer(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceKeyboard(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_43setInputDevicePointer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_43setInputDevicePointer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDevicePointer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDevicePointer", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDevicePointer", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDevicePointer") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDevicePointer", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDevicePointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_42setInputDevicePointer(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":139
 * 		AKUSetInputDeviceKeyboard(devId, sensorId, name)
 * 
 * 	def setInputDevicePointer(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDevicePointer(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_42setInputDevicePointer(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDevicePointer", 0);

  /* "AKU.pyx":140
 * 
 * 	def setInputDevicePointer(self, devId, sensorId, name):
 * 		AKUSetInputDevicePointer(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDeviceButton(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDevicePointer(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDevicePointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_45setInputDeviceButton(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_45setInputDeviceButton(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDeviceButton (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceButton", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceButton", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDeviceButton") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDeviceButton", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceButton", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_44setInputDeviceButton(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":142
 * 		AKUSetInputDevicePointer(devId, sensorId, name)
 * 
 * 	def setInputDeviceButton(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDeviceButton(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_44setInputDeviceButton(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDeviceButton", 0);

  /* "AKU.pyx":143
 * 
 * 	def setInputDeviceButton(self, devId, sensorId, name):
 * 		AKUSetInputDeviceButton(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDeviceTouch(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceButton(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceButton", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_47setInputDeviceTouch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_47setInputDeviceTouch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDeviceTouch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceTouch", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceTouch", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDeviceTouch") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDeviceTouch", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceTouch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_46setInputDeviceTouch(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":145
 * 		AKUSetInputDeviceButton(devId, sensorId, name)
 * 
 * 	def setInputDeviceTouch(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDeviceTouch(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_46setInputDeviceTouch(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDeviceTouch", 0);

  /* "AKU.pyx":146
 * 
 * 	def setInputDeviceTouch(self, devId, sensorId, name):
 * 		AKUSetInputDeviceTouch(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDeviceCompass(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceTouch(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceTouch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_49setInputDeviceCompass(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_49setInputDeviceCompass(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDeviceCompass (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceCompass", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceCompass", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDeviceCompass") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDeviceCompass", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceCompass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_48setInputDeviceCompass(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":148
 * 		AKUSetInputDeviceTouch(devId, sensorId, name)
 * 
 * 	def setInputDeviceCompass(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDeviceCompass(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_48setInputDeviceCompass(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDeviceCompass", 0);

  /* "AKU.pyx":149
 * 
 * 	def setInputDeviceCompass(self, devId, sensorId, name):
 * 		AKUSetInputDeviceCompass(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def setInputDeviceLevel(self, devId, sensorId, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceCompass(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceCompass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_51setInputDeviceLevel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_51setInputDeviceLevel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_devId = 0;
  PyObject *__pyx_v_sensorId = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInputDeviceLevel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__devId,&__pyx_n_s__sensorId,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__devId)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceLevel", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setInputDeviceLevel", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setInputDeviceLevel") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_devId = values[0];
    __pyx_v_sensorId = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setInputDeviceLevel", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_50setInputDeviceLevel(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_devId, __pyx_v_sensorId, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":151
 * 		AKUSetInputDeviceCompass(devId, sensorId, name)
 * 
 * 	def setInputDeviceLevel(self, devId, sensorId, name):             # <<<<<<<<<<<<<<
 * 		AKUSetInputDeviceLevel(devId, sensorId, name)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_50setInputDeviceLevel(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_devId, PyObject *__pyx_v_sensorId, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  const char* __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setInputDeviceLevel", 0);

  /* "AKU.pyx":152
 * 
 * 	def setInputDeviceLevel(self, devId, sensorId, name):
 * 		AKUSetInputDeviceLevel(devId, sensorId, name)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueButtonEvent(self, deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_devId); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorId); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(__pyx_v_name); if (unlikely((__pyx_t_3 == (const char*)NULL) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceLevel(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.setInputDeviceLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_53enqueueButtonEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_53enqueueButtonEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueButtonEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueButtonEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueButtonEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueButtonEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueButtonEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueButtonEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_52enqueueButtonEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":154
 * 		AKUSetInputDeviceLevel(devId, sensorId, name)
 * 
 * 	def enqueueButtonEvent(self, deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_52enqueueButtonEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueButtonEvent", 0);

  /* "AKU.pyx":155
 * 
 * 	def enqueueButtonEvent(self, deviceID, sensorID, down):
 * 		AKUEnqueueButtonEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueWheelEvent(self, deviceID, sensorID, value):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueButtonEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueButtonEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_55enqueueWheelEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_55enqueueWheelEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueWheelEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__value,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueWheelEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueWheelEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueWheelEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_value = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueWheelEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueWheelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_54enqueueWheelEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":157
 * 		AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 * 	def enqueueWheelEvent(self, deviceID, sensorID, value):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueWheelEvent(deviceID, sensorID, value)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_54enqueueWheelEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueWheelEvent", 0);

  /* "AKU.pyx":158
 * 
 * 	def enqueueWheelEvent(self, deviceID, sensorID, value):
 * 		AKUEnqueueWheelEvent(deviceID, sensorID, value)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueTouchEvent(self, deviceID, sensorID, touchID, down, x, y):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_value); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueWheelEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueWheelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_57enqueueTouchEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_57enqueueTouchEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_touchID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueTouchEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__touchID,&__pyx_n_s__down,&__pyx_n_s__x,&__pyx_n_s__y,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__touchID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, 3); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, 4); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, 5); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueTouchEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_touchID = values[2];
    __pyx_v_down = values[3];
    __pyx_v_x = values[4];
    __pyx_v_y = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueTouchEvent", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueTouchEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_56enqueueTouchEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_touchID, __pyx_v_down, __pyx_v_x, __pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":160
 * 		AKUEnqueueWheelEvent(deviceID, sensorID, value)
 * 
 * 	def enqueueTouchEvent(self, deviceID, sensorID, touchID, down, x, y):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_56enqueueTouchEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_touchID, PyObject *__pyx_v_down, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  float __pyx_t_5;
  float __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueTouchEvent", 0);

  /* "AKU.pyx":161
 * 
 * 	def enqueueTouchEvent(self, deviceID, sensorID, touchID, down, x, y):
 * 		AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueTouchEventCancel(self, deviceID, sensorID):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_touchID); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __pyx_PyFloat_AsFloat(__pyx_v_y); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueTouchEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueTouchEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_59enqueueTouchEventCancel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_59enqueueTouchEventCancel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueTouchEventCancel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueTouchEventCancel", 1, 2, 2, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueTouchEventCancel") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueTouchEventCancel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueTouchEventCancel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_58enqueueTouchEventCancel(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":163
 * 		AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 * 	def enqueueTouchEventCancel(self, deviceID, sensorID):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_58enqueueTouchEventCancel(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueTouchEventCancel", 0);

  /* "AKU.pyx":164
 * 
 * 	def enqueueTouchEventCancel(self, deviceID, sensorID):
 * 		AKUEnqueueTouchEventCancel(deviceID, sensorID)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueuePointerEvent(self, deviceID, sensorID, x, y):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueTouchEventCancel(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueTouchEventCancel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_61enqueuePointerEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_61enqueuePointerEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueuePointerEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__x,&__pyx_n_s__y,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueuePointerEvent", 1, 4, 4, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueuePointerEvent", 1, 4, 4, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueuePointerEvent", 1, 4, 4, 3); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueuePointerEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_x = values[2];
    __pyx_v_y = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueuePointerEvent", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueuePointerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_60enqueuePointerEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_x, __pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":166
 * 		AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 * 	def enqueuePointerEvent(self, deviceID, sensorID, x, y):             # <<<<<<<<<<<<<<
 * 		AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_60enqueuePointerEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueuePointerEvent", 0);

  /* "AKU.pyx":167
 * 
 * 	def enqueuePointerEvent(self, deviceID, sensorID, x, y):
 * 		AKUEnqueuePointerEvent(deviceID, sensorID, x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueCompassEvent(self, deviceID, sensorID, heading):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_x); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_y); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueuePointerEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueuePointerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_63enqueueCompassEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_63enqueueCompassEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_heading = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueCompassEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__heading,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueCompassEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__heading)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueCompassEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueCompassEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_heading = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueCompassEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueCompassEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_62enqueueCompassEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_heading);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":169
 * 		AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 * 	def enqueueCompassEvent(self, deviceID, sensorID, heading):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_62enqueueCompassEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_heading) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueCompassEvent", 0);

  /* "AKU.pyx":170
 * 
 * 	def enqueueCompassEvent(self, deviceID, sensorID, heading):
 * 		AKUEnqueueCompassEvent(deviceID, sensorID, heading)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueKeyboardAltEvent(self, deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_heading); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueCompassEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueCompassEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_65enqueueKeyboardAltEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_65enqueueKeyboardAltEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueKeyboardAltEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardAltEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardAltEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueKeyboardAltEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueKeyboardAltEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardAltEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_64enqueueKeyboardAltEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":172
 * 		AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 * 	def enqueueKeyboardAltEvent(self, deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_64enqueueKeyboardAltEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueKeyboardAltEvent", 0);

  /* "AKU.pyx":173
 * 
 * 	def enqueueKeyboardAltEvent(self, deviceID, sensorID, down):
 * 		AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueKeyboardControlEvent(self, deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardAltEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardAltEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_67enqueueKeyboardControlEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_67enqueueKeyboardControlEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueKeyboardControlEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardControlEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardControlEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueKeyboardControlEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueKeyboardControlEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardControlEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_66enqueueKeyboardControlEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":175
 * 		AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 * 	def enqueueKeyboardControlEvent(self, deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_66enqueueKeyboardControlEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueKeyboardControlEvent", 0);

  /* "AKU.pyx":176
 * 
 * 	def enqueueKeyboardControlEvent(self, deviceID, sensorID, down):
 * 		AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueKeyboardShiftEvent(self, deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardControlEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardControlEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_69enqueueKeyboardShiftEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_69enqueueKeyboardShiftEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueKeyboardShiftEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardShiftEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardShiftEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueKeyboardShiftEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueKeyboardShiftEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardShiftEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_68enqueueKeyboardShiftEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":178
 * 		AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 * 	def enqueueKeyboardShiftEvent(self, deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_68enqueueKeyboardShiftEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueKeyboardShiftEvent", 0);

  /* "AKU.pyx":179
 * 
 * 	def enqueueKeyboardShiftEvent(self, deviceID, sensorID, down):
 * 		AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueKeyboardEvent(self, deviceID, sensorID, keyID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardShiftEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardShiftEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_71enqueueKeyboardEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_71enqueueKeyboardEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_keyID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueKeyboardEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__keyID,&__pyx_n_s__down,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardEvent", 1, 4, 4, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__keyID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardEvent", 1, 4, 4, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueKeyboardEvent", 1, 4, 4, 3); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueKeyboardEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_keyID = values[2];
    __pyx_v_down = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueKeyboardEvent", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_70enqueueKeyboardEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_keyID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":181
 * 		AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 * 	def enqueueKeyboardEvent(self, deviceID, sensorID, keyID, down):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_70enqueueKeyboardEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_keyID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueKeyboardEvent", 0);

  /* "AKU.pyx":182
 * 
 * 	def enqueueKeyboardEvent(self, deviceID, sensorID, keyID, down):
 * 		AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)             # <<<<<<<<<<<<<<
 * 
 * 	def enqueueLevelEvent(self, deviceID, sensorID, x, y, z):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_keyID); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueKeyboardEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_73enqueueLevelEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_73enqueueLevelEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("enqueueLevelEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueLevelEvent", 1, 5, 5, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueLevelEvent", 1, 5, 5, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueLevelEvent", 1, 5, 5, 3); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("enqueueLevelEvent", 1, 5, 5, 4); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "enqueueLevelEvent") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_x = values[2];
    __pyx_v_y = values[3];
    __pyx_v_z = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("enqueueLevelEvent", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueLevelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_72enqueueLevelEvent(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_x, __pyx_v_y, __pyx_v_z);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":184
 * 		AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 * 	def enqueueLevelEvent(self, deviceID, sensorID, x, y, z):             # <<<<<<<<<<<<<<
 * 		AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_72enqueueLevelEvent(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  float __pyx_t_4;
  float __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("enqueueLevelEvent", 0);

  /* "AKU.pyx":185
 * 
 * 	def enqueueLevelEvent(self, deviceID, sensorID, x, y, z):
 * 		AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)             # <<<<<<<<<<<<<<
 * 
 * 	def update(self):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsFloat(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_z); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueLevelEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.enqueueLevelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_75update(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_75update(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_74update(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":187
 * 		AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 * 	def update(self):             # <<<<<<<<<<<<<<
 * 		AKUUpdate()
 * 		AKUFmodDesignerUpdate( AKUGetSimStep() )
 */

static PyObject *__pyx_pf_3AKU_3AKU_74update(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update", 0);

  /* "AKU.pyx":188
 * 
 * 	def update(self):
 * 		AKUUpdate()             # <<<<<<<<<<<<<<
 * 		AKUFmodDesignerUpdate( AKUGetSimStep() )
 * 
 */
  AKUUpdate();

  /* "AKU.pyx":189
 * 	def update(self):
 * 		AKUUpdate()
 * 		AKUFmodDesignerUpdate( AKUGetSimStep() )             # <<<<<<<<<<<<<<
 * 
 * 	def pause(self, paused=True):
 */
  AKUFmodDesignerUpdate(AKUGetSimStep());

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_77pause(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_77pause(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_paused = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pause (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__paused,0};
    PyObject* values[1] = {0};
    values[0] = __pyx_k_56;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__paused);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pause") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_paused = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pause", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.pause", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_76pause(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_paused);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":191
 * 		AKUFmodDesignerUpdate( AKUGetSimStep() )
 * 
 * 	def pause(self, paused=True):             # <<<<<<<<<<<<<<
 * 		AKUPause(paused)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_76pause(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_paused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pause", 0);

  /* "AKU.pyx":192
 * 
 * 	def pause(self, paused=True):
 * 		AKUPause(paused)             # <<<<<<<<<<<<<<
 * 
 * 	def render(self):
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_paused); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUPause(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.pause", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_79render(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_79render(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_78render(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":194
 * 		AKUPause(paused)
 * 
 * 	def render(self):             # <<<<<<<<<<<<<<
 * 		AKURender()
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_78render(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render", 0);

  /* "AKU.pyx":195
 * 
 * 	def render(self):
 * 		AKURender()             # <<<<<<<<<<<<<<
 * 
 * 	def detectGfxContext(self):
 */
  AKURender();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_81detectGfxContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_81detectGfxContext(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("detectGfxContext (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_80detectGfxContext(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":197
 * 		AKURender()
 * 
 * 	def detectGfxContext(self):             # <<<<<<<<<<<<<<
 * 		AKUDetectGfxContext()
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_80detectGfxContext(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("detectGfxContext", 0);

  /* "AKU.pyx":198
 * 
 * 	def detectGfxContext(self):
 * 		AKUDetectGfxContext()             # <<<<<<<<<<<<<<
 * 
 * 	def finalize(self):
 */
  AKUDetectGfxContext();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_83finalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_83finalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("finalize (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_82finalize(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":200
 * 		AKUDetectGfxContext()
 * 
 * 	def finalize(self):             # <<<<<<<<<<<<<<
 * 		AKUFinalize()
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_82finalize(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("finalize", 0);

  /* "AKU.pyx":201
 * 
 * 	def finalize(self):
 * 		AKUFinalize()             # <<<<<<<<<<<<<<
 * 
 * 	def runString(self, text):
 */
  AKUFinalize();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_85runString(PyObject *__pyx_v_self, PyObject *__pyx_v_text); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_85runString(PyObject *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("runString (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_84runString(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_text));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":203
 * 		AKUFinalize()
 * 
 * 	def runString(self, text):             # <<<<<<<<<<<<<<
 * 		AKURunString(text)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_84runString(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("runString", 0);

  /* "AKU.pyx":204
 * 
 * 	def runString(self, text):
 * 		AKURunString(text)             # <<<<<<<<<<<<<<
 * 
 * 	def runScript(self, filename):
 */
  __pyx_t_1 = PyBytes_AsString(__pyx_v_text); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKURunString(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.runString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_87runScript(PyObject *__pyx_v_self, PyObject *__pyx_v_filename); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_87runScript(PyObject *__pyx_v_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("runScript (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_86runScript(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_filename));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":206
 * 		AKURunString(text)
 * 
 * 	def runScript(self, filename):             # <<<<<<<<<<<<<<
 * 		AKURunScript(filename)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_86runScript(CYTHON_UNUSED struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("runScript", 0);

  /* "AKU.pyx":207
 * 
 * 	def runScript(self, filename):
 * 		AKURunScript(filename)             # <<<<<<<<<<<<<<
 * 
 * 	def evalString(self, text):
 */
  __pyx_t_1 = PyBytes_AsString(__pyx_v_filename); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKURunScript(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("AKU.AKU.runScript", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_89evalString(PyObject *__pyx_v_self, PyObject *__pyx_v_text); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_89evalString(PyObject *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("evalString (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_88evalString(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), ((PyObject *)__pyx_v_text));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":209
 * 		AKURunScript(filename)
 * 
 * 	def evalString(self, text):             # <<<<<<<<<<<<<<
 * 		return self.lua.eval(text)
 * 
 */

static PyObject *__pyx_pf_3AKU_3AKU_88evalString(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_text) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("evalString", 0);

  /* "AKU.pyx":210
 * 
 * 	def evalString(self, text):
 * 		return self.lua.eval(text)             # <<<<<<<<<<<<<<
 * 
 * 	def onOpenWindow(self, title, width, height):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->lua), __pyx_n_s__eval); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_text);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_text);
  __Pyx_GIVEREF(__pyx_v_text);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.AKU.evalString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_91onOpenWindow(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_91onOpenWindow(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_title = 0;
  PyObject *__pyx_v_width = 0;
  PyObject *__pyx_v_height = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("onOpenWindow (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__width,&__pyx_n_s__height,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("onOpenWindow", 1, 3, 3, 1); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("onOpenWindow", 1, 3, 3, 2); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "onOpenWindow") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_title = values[0];
    __pyx_v_width = values[1];
    __pyx_v_height = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("onOpenWindow", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("AKU.AKU.onOpenWindow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3AKU_3AKU_90onOpenWindow(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self), __pyx_v_title, __pyx_v_width, __pyx_v_height);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":212
 * 		return self.lua.eval(text)
 * 
 * 	def onOpenWindow(self, title, width, height):             # <<<<<<<<<<<<<<
 * 		# print('open window', title, width, height)
 * 		if self._funcOpenWindow:
 */

static PyObject *__pyx_pf_3AKU_3AKU_90onOpenWindow(struct __pyx_obj_3AKU_AKU *__pyx_v_self, PyObject *__pyx_v_title, PyObject *__pyx_v_width, PyObject *__pyx_v_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("onOpenWindow", 0);

  /* "AKU.pyx":214
 * 	def onOpenWindow(self, title, width, height):
 * 		# print('open window', title, width, height)
 * 		if self._funcOpenWindow:             # <<<<<<<<<<<<<<
 * 			self._funcOpenWindow(title, width, height)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->_funcOpenWindow); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "AKU.pyx":215
 * 		# print('open window', title, width, height)
 * 		if self._funcOpenWindow:
 * 			self._funcOpenWindow(title, width, height)             # <<<<<<<<<<<<<<
 * 
 * 	def onEnterFullScreen(self):
 */
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_title);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_title);
    __Pyx_GIVEREF(__pyx_v_title);
    __Pyx_INCREF(__pyx_v_width);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_width);
    __Pyx_GIVEREF(__pyx_v_width);
    __Pyx_INCREF(__pyx_v_height);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_height);
    __Pyx_GIVEREF(__pyx_v_height);
    __pyx_t_3 = PyObject_Call(__pyx_v_self->_funcOpenWindow, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("AKU.AKU.onOpenWindow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_93onEnterFullScreen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_93onEnterFullScreen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("onEnterFullScreen (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_92onEnterFullScreen(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":217
 * 			self._funcOpenWindow(title, width, height)
 * 
 * 	def onEnterFullScreen(self):             # <<<<<<<<<<<<<<
 * 		if self._funcEnterFS:
 * 			self._funcEnterFS()
 */

static PyObject *__pyx_pf_3AKU_3AKU_92onEnterFullScreen(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("onEnterFullScreen", 0);

  /* "AKU.pyx":218
 * 
 * 	def onEnterFullScreen(self):
 * 		if self._funcEnterFS:             # <<<<<<<<<<<<<<
 * 			self._funcEnterFS()
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->_funcEnterFS); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "AKU.pyx":219
 * 	def onEnterFullScreen(self):
 * 		if self._funcEnterFS:
 * 			self._funcEnterFS()             # <<<<<<<<<<<<<<
 * 
 * 	def onExitFullScreen(self):
 */
    __pyx_t_2 = PyObject_Call(__pyx_v_self->_funcEnterFS, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.AKU.onEnterFullScreen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3AKU_3AKU_95onExitFullScreen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3AKU_3AKU_95onExitFullScreen(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("onExitFullScreen (wrapper)", 0);
  __pyx_r = __pyx_pf_3AKU_3AKU_94onExitFullScreen(((struct __pyx_obj_3AKU_AKU *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "AKU.pyx":221
 * 			self._funcEnterFS()
 * 
 * 	def onExitFullScreen(self):             # <<<<<<<<<<<<<<
 * 		if self._funcExitFS:
 * 			self._funcExitFS()
 */

static PyObject *__pyx_pf_3AKU_3AKU_94onExitFullScreen(struct __pyx_obj_3AKU_AKU *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("onExitFullScreen", 0);

  /* "AKU.pyx":222
 * 
 * 	def onExitFullScreen(self):
 * 		if self._funcExitFS:             # <<<<<<<<<<<<<<
 * 			self._funcExitFS()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->_funcExitFS); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "AKU.pyx":223
 * 	def onExitFullScreen(self):
 * 		if self._funcExitFS:
 * 			self._funcExitFS()             # <<<<<<<<<<<<<<
 */
    __pyx_t_2 = PyObject_Call(__pyx_v_self->_funcExitFS, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("AKU.AKU.onExitFullScreen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_3AKU__LuaObject __pyx_vtable_3AKU__LuaObject;

static PyObject *__pyx_tp_new_3AKU__LuaObject(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3AKU__LuaObject *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaObject *)o);
  p->__pyx_vtab = __pyx_vtabptr_3AKU__LuaObject;
  p->_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_3AKU__LuaObject(PyObject *o) {
  struct __pyx_obj_3AKU__LuaObject *p = (struct __pyx_obj_3AKU__LuaObject *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3AKU_10_LuaObject_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_runtime);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3AKU__LuaObject(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU__LuaObject *p = (struct __pyx_obj_3AKU__LuaObject *)o;
  if (p->_runtime) {
    e = (*v)(((PyObject*)p->_runtime), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU__LuaObject(PyObject *o) {
  struct __pyx_obj_3AKU__LuaObject *p = (struct __pyx_obj_3AKU__LuaObject *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_runtime);
  p->_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_3AKU__LuaObject(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_3AKU__LuaObject(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_3AKU_10_LuaObject_23__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_tp_getattro_3AKU__LuaObject(PyObject *o, PyObject *n) {
  PyObject *v = PyObject_GenericGetAttr(o, n);
  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {
    PyErr_Clear();
    v = __pyx_pw_3AKU_10_LuaObject_17__getattr__(o, n);
  }
  return v;
}

static int __pyx_tp_setattro_3AKU__LuaObject(PyObject *o, PyObject *n, PyObject *v) {
  if (v) {
    return __pyx_pw_3AKU_10_LuaObject_19__setattr__(o, n, v);
  }
  else {
    return PyObject_GenericSetAttr(o, n, 0);
  }
}

static PyMethodDef __pyx_methods_3AKU__LuaObject[] = {
  {__Pyx_NAMESTR("__getattr__"), (PyCFunction)__pyx_pw_3AKU_10_LuaObject_17__getattr__, METH_O|METH_COEXIST, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaObject = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  __pyx_pw_3AKU_10_LuaObject_9__nonzero__, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaObject = {
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_3AKU__LuaObject, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaObject = {
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*mp_length*/
  __pyx_pw_3AKU_10_LuaObject_21__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_3AKU__LuaObject, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaObject = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaObject = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaObject"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_3AKU_10_LuaObject_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number__LuaObject, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaObject, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaObject, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_3AKU_10_LuaObject_5__call__, /*tp_call*/
  __pyx_pw_3AKU_10_LuaObject_15__str__, /*tp_str*/
  __pyx_tp_getattro_3AKU__LuaObject, /*tp_getattro*/
  __pyx_tp_setattro_3AKU__LuaObject, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaObject, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("A wrapper around a Lua object such as a table of function.\n    "), /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaObject, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_3AKU_10_LuaObject_11__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU__LuaObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_3AKU_10_LuaObject_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_3AKU_FastRLock(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pw_3AKU_9FastRLock_1__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3AKU_FastRLock(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3AKU_9FastRLock_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3AKU_FastRLock[] = {
  {__Pyx_NAMESTR("acquire"), (PyCFunction)__pyx_pw_3AKU_9FastRLock_5acquire, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("release"), (PyCFunction)__pyx_pw_3AKU_9FastRLock_7release, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__enter__"), (PyCFunction)__pyx_pw_3AKU_9FastRLock_9__enter__, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__exit__"), (PyCFunction)__pyx_pw_3AKU_9FastRLock_11__exit__, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_is_owned"), (PyCFunction)__pyx_pw_3AKU_9FastRLock_13_is_owned, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FastRLock = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FastRLock = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FastRLock = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FastRLock = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU_FastRLock = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU.FastRLock"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU_FastRLock), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU_FastRLock, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FastRLock, /*tp_as_number*/
  &__pyx_tp_as_sequence_FastRLock, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FastRLock, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FastRLock, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Fast, re-entrant locking.\n\n    Under uncongested conditions, the lock is never acquired but only\n    counted.  Only when a second thread comes in and notices that the\n    lock is needed, it acquires the lock and notifies the first thread\n    to release it when it's done.  This is all made possible by the\n    wonderful GIL.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU_FastRLock, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU_FastRLock, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_3AKU_LuaRuntime __pyx_vtable_3AKU_LuaRuntime;

static PyObject *__pyx_tp_new_3AKU_LuaRuntime(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3AKU_LuaRuntime *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU_LuaRuntime *)o);
  p->__pyx_vtab = __pyx_vtabptr_3AKU_LuaRuntime;
  p->_lock = ((struct __pyx_obj_3AKU_FastRLock *)Py_None); Py_INCREF(Py_None);
  p->_raised_exception = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_encoding = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_source_encoding = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_attribute_filter = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_3AKU_LuaRuntime(PyObject *o) {
  struct __pyx_obj_3AKU_LuaRuntime *p = (struct __pyx_obj_3AKU_LuaRuntime *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3AKU_10LuaRuntime_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_lock);
  Py_CLEAR(p->_raised_exception);
  Py_CLEAR(p->_encoding);
  Py_CLEAR(p->_source_encoding);
  Py_CLEAR(p->_attribute_filter);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3AKU_LuaRuntime(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU_LuaRuntime *p = (struct __pyx_obj_3AKU_LuaRuntime *)o;
  if (p->_lock) {
    e = (*v)(((PyObject*)p->_lock), a); if (e) return e;
  }
  if (p->_raised_exception) {
    e = (*v)(p->_raised_exception, a); if (e) return e;
  }
  if (p->_encoding) {
    e = (*v)(p->_encoding, a); if (e) return e;
  }
  if (p->_source_encoding) {
    e = (*v)(p->_source_encoding, a); if (e) return e;
  }
  if (p->_attribute_filter) {
    e = (*v)(p->_attribute_filter, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU_LuaRuntime(PyObject *o) {
  struct __pyx_obj_3AKU_LuaRuntime *p = (struct __pyx_obj_3AKU_LuaRuntime *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_lock);
  p->_lock = ((struct __pyx_obj_3AKU_FastRLock *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_raised_exception);
  p->_raised_exception = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_encoding);
  p->_encoding = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_source_encoding);
  p->_source_encoding = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_attribute_filter);
  p->_attribute_filter = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_3AKU_LuaRuntime[] = {
  {__Pyx_NAMESTR("eval"), (PyCFunction)__pyx_pw_3AKU_10LuaRuntime_3eval, METH_O, __Pyx_DOCSTR(__pyx_doc_3AKU_10LuaRuntime_2eval)},
  {__Pyx_NAMESTR("execute"), (PyCFunction)__pyx_pw_3AKU_10LuaRuntime_5execute, METH_O, __Pyx_DOCSTR(__pyx_doc_3AKU_10LuaRuntime_4execute)},
  {__Pyx_NAMESTR("require"), (PyCFunction)__pyx_pw_3AKU_10LuaRuntime_7require, METH_O, __Pyx_DOCSTR(__pyx_doc_3AKU_10LuaRuntime_6require)},
  {__Pyx_NAMESTR("globals"), (PyCFunction)__pyx_pw_3AKU_10LuaRuntime_9globals, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_3AKU_10LuaRuntime_8globals)},
  {__Pyx_NAMESTR("table"), (PyCFunction)__pyx_pw_3AKU_10LuaRuntime_11table, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_3AKU_10LuaRuntime_10table)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LuaRuntime = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LuaRuntime = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LuaRuntime = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LuaRuntime = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU_LuaRuntime = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU.LuaRuntime"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU_LuaRuntime), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU_LuaRuntime, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_LuaRuntime, /*tp_as_number*/
  &__pyx_tp_as_sequence_LuaRuntime, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LuaRuntime, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LuaRuntime, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("The main entry point to the Lua runtime.\n\n    Available options:\n\n    * ``encoding``: the string encoding, defaulting to UTF-8.  If set\n      to ``None``, all string values will be returned as byte strings.\n      Otherwise, they will be decoded to unicode strings on the way\n      from Lua to Python and unicode strings will be encoded on the\n      way to Lua.  Note that ``str()`` calls on Lua objects will\n      always return a unicode object.\n\n    * ``source_encoding``: the encoding used for Lua code, defaulting to\n      the string encoding or UTF-8 if the string encoding is ``None``.\n\n    * ``attribute_filter``: filter function for attribute access\n      (get/set).  Must have the signature ``func(obj, attr_name,\n      is_setting)``, where ``is_setting`` is True when the attribute\n      is being set.  If provided, the function will be called for all\n      Python object attributes that are being accessed from Lua code.\n      Normally, it should return an attribute name that will then be\n      used for the lookup.  If it wants to prevent access, it should\n      raise an ``AttributeError``.  Note that Lua does not guarantee\n      that the names will be strings.\n\n    * ``register_eval``: should Python's ``eval()`` function be\n      available to Lua code?  Note that this does not remove it from\n      the builtins.  Use an ``attribute_filter`` function for that.\n      (default: True)\n\n    Example usage::\n\n      >>> from lupa import LuaRuntime\n      >>> lua = LuaRuntime()\n\n      >>> lua.eval('1+1')\n      2\n\n      >>> lua_func = lua.eval('function(f, n) return f(n) end')\n\n      >>> def py_add1(n): return n+1\n      >>> lua_func(py_add1, 2)\n      3\n    "), /*tp_doc*/
  __pyx_tp_traverse_3AKU_LuaRuntime, /*tp_traverse*/
  __pyx_tp_clear_3AKU_LuaRuntime, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU_LuaRuntime, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU_LuaRuntime, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_3AKU__LuaTable __pyx_vtable_3AKU__LuaTable;

static PyObject *__pyx_tp_new_3AKU__LuaTable(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3AKU__LuaTable *p;
  PyObject *o = __pyx_tp_new_3AKU__LuaObject(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaTable *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_3AKU__LuaObject*)__pyx_vtabptr_3AKU__LuaTable;
  return o;
}

static PyMethodDef __pyx_methods_3AKU__LuaTable[] = {
  {__Pyx_NAMESTR("keys"), (PyCFunction)__pyx_pw_3AKU_9_LuaTable_3keys, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_3AKU_9_LuaTable_2keys)},
  {__Pyx_NAMESTR("values"), (PyCFunction)__pyx_pw_3AKU_9_LuaTable_5values, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_3AKU_9_LuaTable_4values)},
  {__Pyx_NAMESTR("items"), (PyCFunction)__pyx_pw_3AKU_9_LuaTable_7items, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_3AKU_9_LuaTable_6items)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaTable = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_9__nonzero__, /*nb_nonzero*/
  #else
  0, /*nb_nonzero*/
  #endif
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaTable = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*sq_length*/
  #else
  0, /*sq_length*/
  #endif
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaTable = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*mp_length*/
  #else
  0, /*mp_length*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_21__getitem__, /*mp_subscript*/
  #else
  0, /*mp_subscript*/
  #endif
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaTable = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaTable = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaTable"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaTable), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_13__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number__LuaTable, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaTable, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaTable, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_5__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_15__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaTable, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaObject, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_3AKU_9_LuaTable_1__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU__LuaTable, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaTable, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_3AKU__LuaFunction __pyx_vtable_3AKU__LuaFunction;

static PyObject *__pyx_tp_new_3AKU__LuaFunction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3AKU__LuaFunction *p;
  PyObject *o = __pyx_tp_new_3AKU__LuaObject(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaFunction *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_3AKU__LuaObject*)__pyx_vtabptr_3AKU__LuaFunction;
  return o;
}

static PyMethodDef __pyx_methods_3AKU__LuaFunction[] = {
  {__Pyx_NAMESTR("coroutine"), (PyCFunction)__pyx_pw_3AKU_12_LuaFunction_1coroutine, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_3AKU_12_LuaFunction_coroutine)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaFunction = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_9__nonzero__, /*nb_nonzero*/
  #else
  0, /*nb_nonzero*/
  #endif
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaFunction = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*sq_length*/
  #else
  0, /*sq_length*/
  #endif
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaFunction = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*mp_length*/
  #else
  0, /*mp_length*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_21__getitem__, /*mp_subscript*/
  #else
  0, /*mp_subscript*/
  #endif
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaFunction = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaFunction"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_13__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number__LuaFunction, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaFunction, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaFunction, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_5__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_15__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaFunction, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("A Lua function (which may become a coroutine).\n    "), /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaObject, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_11__iter__, /*tp_iter*/
  #else
  0, /*tp_iter*/
  #endif
  0, /*tp_iternext*/
  __pyx_methods_3AKU__LuaFunction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_3AKU__LuaCoroutineFunction __pyx_vtable_3AKU__LuaCoroutineFunction;

static PyObject *__pyx_tp_new_3AKU__LuaCoroutineFunction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3AKU__LuaCoroutineFunction *p;
  PyObject *o = __pyx_tp_new_3AKU__LuaObject(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaCoroutineFunction *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_3AKU__LuaObject*)__pyx_vtabptr_3AKU__LuaCoroutineFunction;
  return o;
}

static PyMethodDef __pyx_methods_3AKU__LuaCoroutineFunction[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaCoroutineFunction = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_9__nonzero__, /*nb_nonzero*/
  #else
  0, /*nb_nonzero*/
  #endif
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaCoroutineFunction = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*sq_length*/
  #else
  0, /*sq_length*/
  #endif
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaCoroutineFunction = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*mp_length*/
  #else
  0, /*mp_length*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_21__getitem__, /*mp_subscript*/
  #else
  0, /*mp_subscript*/
  #endif
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaCoroutineFunction = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaCoroutineFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaCoroutineFunction"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaCoroutineFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_13__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number__LuaCoroutineFunction, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaCoroutineFunction, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaCoroutineFunction, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_3AKU_21_LuaCoroutineFunction_1__call__, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_15__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaCoroutineFunction, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("A function that returns a new coroutine when called.\n    "), /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaObject, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_11__iter__, /*tp_iter*/
  #else
  0, /*tp_iter*/
  #endif
  0, /*tp_iternext*/
  __pyx_methods_3AKU__LuaCoroutineFunction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaCoroutineFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_3AKU__LuaThread __pyx_vtable_3AKU__LuaThread;

static PyObject *__pyx_tp_new_3AKU__LuaThread(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3AKU__LuaThread *p;
  PyObject *o = __pyx_tp_new_3AKU__LuaObject(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaThread *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_3AKU__LuaObject*)__pyx_vtabptr_3AKU__LuaThread;
  p->_arguments = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_3AKU__LuaThread(PyObject *o) {
  struct __pyx_obj_3AKU__LuaThread *p = (struct __pyx_obj_3AKU__LuaThread *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_arguments);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_3AKU__LuaObject(o);
}

static int __pyx_tp_traverse_3AKU__LuaThread(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU__LuaThread *p = (struct __pyx_obj_3AKU__LuaThread *)o;
  e = __pyx_tp_traverse_3AKU__LuaObject(o, v, a); if (e) return e;
  if (p->_arguments) {
    e = (*v)(p->_arguments, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU__LuaThread(PyObject *o) {
  struct __pyx_obj_3AKU__LuaThread *p = (struct __pyx_obj_3AKU__LuaThread *)o;
  PyObject* tmp;
  __pyx_tp_clear_3AKU__LuaObject(o);
  tmp = ((PyObject*)p->_arguments);
  p->_arguments = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_3AKU__LuaThread[] = {
  {__Pyx_NAMESTR("__next__"), (PyCFunction)__pyx_pw_3AKU_10_LuaThread_3__next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("send"), (PyCFunction)__pyx_pw_3AKU_10_LuaThread_5send, METH_O, __Pyx_DOCSTR(__pyx_doc_3AKU_10_LuaThread_4send)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaThread = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  __pyx_pw_3AKU_10_LuaThread_7__bool__, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaThread = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*sq_length*/
  #else
  0, /*sq_length*/
  #endif
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaThread = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_7__len__, /*mp_length*/
  #else
  0, /*mp_length*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_21__getitem__, /*mp_subscript*/
  #else
  0, /*mp_subscript*/
  #endif
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaThread = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaThread = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaThread"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaThread), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaThread, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_13__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number__LuaThread, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaThread, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaThread, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_5__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_15__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaThread, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("A Lua thread (coroutine).\n    "), /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaThread, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaThread, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_3AKU_10_LuaThread_1__iter__, /*tp_iter*/
  __pyx_pw_3AKU_10_LuaThread_3__next__, /*tp_iternext*/
  __pyx_methods_3AKU__LuaThread, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_3AKU_10_LuaObject_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaThread, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_3AKU__LuaIter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3AKU__LuaIter *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__LuaIter *)o);
  p->_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  p->_obj = ((struct __pyx_obj_3AKU__LuaObject *)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_3AKU_8_LuaIter_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3AKU__LuaIter(PyObject *o) {
  struct __pyx_obj_3AKU__LuaIter *p = (struct __pyx_obj_3AKU__LuaIter *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3AKU_8_LuaIter_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_runtime);
  Py_CLEAR(p->_obj);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3AKU__LuaIter(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU__LuaIter *p = (struct __pyx_obj_3AKU__LuaIter *)o;
  if (p->_runtime) {
    e = (*v)(((PyObject*)p->_runtime), a); if (e) return e;
  }
  if (p->_obj) {
    e = (*v)(((PyObject*)p->_obj), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU__LuaIter(PyObject *o) {
  struct __pyx_obj_3AKU__LuaIter *p = (struct __pyx_obj_3AKU__LuaIter *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_runtime);
  p->_runtime = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_obj);
  p->_obj = ((struct __pyx_obj_3AKU__LuaObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_3AKU__LuaIter[] = {
  {__Pyx_NAMESTR("__next__"), (PyCFunction)__pyx_pw_3AKU_8_LuaIter_9__next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__LuaIter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__LuaIter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LuaIter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__LuaIter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__LuaIter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._LuaIter"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__LuaIter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__LuaIter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_3AKU_8_LuaIter_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number__LuaIter, /*tp_as_number*/
  &__pyx_tp_as_sequence__LuaIter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LuaIter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__LuaIter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3AKU__LuaIter, /*tp_traverse*/
  __pyx_tp_clear_3AKU__LuaIter, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_3AKU_8_LuaIter_7__iter__, /*tp_iter*/
  __pyx_pw_3AKU_8_LuaIter_9__next__, /*tp_iternext*/
  __pyx_methods_3AKU__LuaIter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__LuaIter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_3AKU__PyProtocolWrapper(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3AKU__PyProtocolWrapper *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU__PyProtocolWrapper *)o);
  p->_obj = Py_None; Py_INCREF(Py_None);
  if (__pyx_pw_3AKU_18_PyProtocolWrapper_1__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3AKU__PyProtocolWrapper(PyObject *o) {
  struct __pyx_obj_3AKU__PyProtocolWrapper *p = (struct __pyx_obj_3AKU__PyProtocolWrapper *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_obj);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3AKU__PyProtocolWrapper(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU__PyProtocolWrapper *p = (struct __pyx_obj_3AKU__PyProtocolWrapper *)o;
  if (p->_obj) {
    e = (*v)(p->_obj, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU__PyProtocolWrapper(PyObject *o) {
  struct __pyx_obj_3AKU__PyProtocolWrapper *p = (struct __pyx_obj_3AKU__PyProtocolWrapper *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_obj);
  p->_obj = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_3AKU__PyProtocolWrapper[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number__PyProtocolWrapper = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence__PyProtocolWrapper = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__PyProtocolWrapper = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer__PyProtocolWrapper = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU__PyProtocolWrapper = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU._PyProtocolWrapper"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU__PyProtocolWrapper), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU__PyProtocolWrapper, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number__PyProtocolWrapper, /*tp_as_number*/
  &__pyx_tp_as_sequence__PyProtocolWrapper, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__PyProtocolWrapper, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer__PyProtocolWrapper, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3AKU__PyProtocolWrapper, /*tp_traverse*/
  __pyx_tp_clear_3AKU__PyProtocolWrapper, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU__PyProtocolWrapper, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_3AKU_18_PyProtocolWrapper_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU__PyProtocolWrapper, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_3AKU_AKU(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3AKU_AKU *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_3AKU_AKU *)o);
  p->lua = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  p->_funcOpenWindow = Py_None; Py_INCREF(Py_None);
  p->_funcEnterFS = Py_None; Py_INCREF(Py_None);
  p->_funcExitFS = Py_None; Py_INCREF(Py_None);
  if (__pyx_pw_3AKU_3AKU_1__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3AKU_AKU(PyObject *o) {
  struct __pyx_obj_3AKU_AKU *p = (struct __pyx_obj_3AKU_AKU *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3AKU_3AKU_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->lua);
  Py_CLEAR(p->_funcOpenWindow);
  Py_CLEAR(p->_funcEnterFS);
  Py_CLEAR(p->_funcExitFS);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3AKU_AKU(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3AKU_AKU *p = (struct __pyx_obj_3AKU_AKU *)o;
  if (p->lua) {
    e = (*v)(((PyObject*)p->lua), a); if (e) return e;
  }
  if (p->_funcOpenWindow) {
    e = (*v)(p->_funcOpenWindow, a); if (e) return e;
  }
  if (p->_funcEnterFS) {
    e = (*v)(p->_funcEnterFS, a); if (e) return e;
  }
  if (p->_funcExitFS) {
    e = (*v)(p->_funcExitFS, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3AKU_AKU(PyObject *o) {
  struct __pyx_obj_3AKU_AKU *p = (struct __pyx_obj_3AKU_AKU *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->lua);
  p->lua = ((struct __pyx_obj_3AKU_LuaRuntime *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_funcOpenWindow);
  p->_funcOpenWindow = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_funcEnterFS);
  p->_funcEnterFS = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_funcExitFS);
  p->_funcExitFS = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_3AKU_AKU[] = {
  {__Pyx_NAMESTR("createContext"), (PyCFunction)__pyx_pw_3AKU_3AKU_5createContext, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setFuncOpenWindow"), (PyCFunction)__pyx_pw_3AKU_3AKU_7setFuncOpenWindow, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setFuncEnterFullscreenMode"), (PyCFunction)__pyx_pw_3AKU_3AKU_9setFuncEnterFullscreenMode, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setFuncExitFullscreenMode"), (PyCFunction)__pyx_pw_3AKU_3AKU_11setFuncExitFullscreenMode, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getLuaRuntime"), (PyCFunction)__pyx_pw_3AKU_3AKU_13getLuaRuntime, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("checkContext"), (PyCFunction)__pyx_pw_3AKU_3AKU_15checkContext, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("resetContext"), (PyCFunction)__pyx_pw_3AKU_3AKU_17resetContext, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("deleteContext"), (PyCFunction)__pyx_pw_3AKU_3AKU_19deleteContext, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("clearMemPool"), (PyCFunction)__pyx_pw_3AKU_3AKU_21clearMemPool, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setScreenSize"), (PyCFunction)__pyx_pw_3AKU_3AKU_23setScreenSize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setViewSize"), (PyCFunction)__pyx_pw_3AKU_3AKU_25setViewSize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setOrientationLandscape"), (PyCFunction)__pyx_pw_3AKU_3AKU_27setOrientationLandscape, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setOrientationPortrait"), (PyCFunction)__pyx_pw_3AKU_3AKU_29setOrientationPortrait, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setWorkingDirectory"), (PyCFunction)__pyx_pw_3AKU_3AKU_31setWorkingDirectory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("reserveInputDevices"), (PyCFunction)__pyx_pw_3AKU_3AKU_33reserveInputDevices, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("reserveInputDeviceSensors"), (PyCFunction)__pyx_pw_3AKU_3AKU_35reserveInputDeviceSensors, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputConfigurationName"), (PyCFunction)__pyx_pw_3AKU_3AKU_37setInputConfigurationName, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDevice"), (PyCFunction)__pyx_pw_3AKU_3AKU_39setInputDevice, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDeviceKeyboard"), (PyCFunction)__pyx_pw_3AKU_3AKU_41setInputDeviceKeyboard, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDevicePointer"), (PyCFunction)__pyx_pw_3AKU_3AKU_43setInputDevicePointer, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDeviceButton"), (PyCFunction)__pyx_pw_3AKU_3AKU_45setInputDeviceButton, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDeviceTouch"), (PyCFunction)__pyx_pw_3AKU_3AKU_47setInputDeviceTouch, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDeviceCompass"), (PyCFunction)__pyx_pw_3AKU_3AKU_49setInputDeviceCompass, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("setInputDeviceLevel"), (PyCFunction)__pyx_pw_3AKU_3AKU_51setInputDeviceLevel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueButtonEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_53enqueueButtonEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueWheelEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_55enqueueWheelEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueTouchEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_57enqueueTouchEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueTouchEventCancel"), (PyCFunction)__pyx_pw_3AKU_3AKU_59enqueueTouchEventCancel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueuePointerEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_61enqueuePointerEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueCompassEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_63enqueueCompassEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueKeyboardAltEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_65enqueueKeyboardAltEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueKeyboardControlEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_67enqueueKeyboardControlEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueKeyboardShiftEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_69enqueueKeyboardShiftEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueKeyboardEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_71enqueueKeyboardEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enqueueLevelEvent"), (PyCFunction)__pyx_pw_3AKU_3AKU_73enqueueLevelEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("update"), (PyCFunction)__pyx_pw_3AKU_3AKU_75update, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("pause"), (PyCFunction)__pyx_pw_3AKU_3AKU_77pause, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("render"), (PyCFunction)__pyx_pw_3AKU_3AKU_79render, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("detectGfxContext"), (PyCFunction)__pyx_pw_3AKU_3AKU_81detectGfxContext, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("finalize"), (PyCFunction)__pyx_pw_3AKU_3AKU_83finalize, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("runString"), (PyCFunction)__pyx_pw_3AKU_3AKU_85runString, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("runScript"), (PyCFunction)__pyx_pw_3AKU_3AKU_87runScript, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("evalString"), (PyCFunction)__pyx_pw_3AKU_3AKU_89evalString, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("onOpenWindow"), (PyCFunction)__pyx_pw_3AKU_3AKU_91onOpenWindow, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("onEnterFullScreen"), (PyCFunction)__pyx_pw_3AKU_3AKU_93onEnterFullScreen, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("onExitFullScreen"), (PyCFunction)__pyx_pw_3AKU_3AKU_95onExitFullScreen, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_AKU = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_AKU = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_AKU = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_AKU = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_3AKU_AKU = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("AKU.AKU"), /*tp_name*/
  sizeof(struct __pyx_obj_3AKU_AKU), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3AKU_AKU, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_AKU, /*tp_as_number*/
  &__pyx_tp_as_sequence_AKU, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_AKU, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_AKU, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3AKU_AKU, /*tp_traverse*/
  __pyx_tp_clear_3AKU_AKU, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3AKU_AKU, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3AKU_AKU, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("AKU"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_kp_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 0},
  {&__pyx_kp_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 0},
  {&__pyx_kp_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 0},
  {&__pyx_kp_s_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 0, 1, 0},
  {&__pyx_kp_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 0},
  {&__pyx_kp_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 0},
  {&__pyx_kp_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 0},
  {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
  {&__pyx_kp_s_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 1, 0},
  {&__pyx_kp_u_33, __pyx_k_33, sizeof(__pyx_k_33), 0, 1, 0, 0},
  {&__pyx_kp_s_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 0, 1, 0},
  {&__pyx_kp_s_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 0},
  {&__pyx_kp_u_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 1, 0, 0},
  {&__pyx_kp_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 0},
  {&__pyx_kp_s_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 0, 1, 0},
  {&__pyx_n_s_54, __pyx_k_54, sizeof(__pyx_k_54), 0, 0, 1, 1},
  {&__pyx_n_s_55, __pyx_k_55, sizeof(__pyx_k_55), 0, 0, 1, 1},
  {&__pyx_kp_s_57, __pyx_k_57, sizeof(__pyx_k_57), 0, 0, 1, 0},
  {&__pyx_kp_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 0},
  {&__pyx_kp_b_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 0, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_61, __pyx_k_61, sizeof(__pyx_k_61), 0, 0, 1, 0},
  {&__pyx_n_s_65, __pyx_k_65, sizeof(__pyx_k_65), 0, 0, 1, 1},
  {&__pyx_kp_s_66, __pyx_k_66, sizeof(__pyx_k_66), 0, 0, 1, 0},
  {&__pyx_kp_b_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 0, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_n_s__AKU, __pyx_k__AKU, sizeof(__pyx_k__AKU), 0, 0, 1, 1},
  {&__pyx_n_s__Exception, __pyx_k__Exception, sizeof(__pyx_k__Exception), 0, 0, 1, 1},
  {&__pyx_n_s__ImportError, __pyx_k__ImportError, sizeof(__pyx_k__ImportError), 0, 0, 1, 1},
  {&__pyx_n_s__LuaError, __pyx_k__LuaError, sizeof(__pyx_k__LuaError), 0, 0, 1, 1},
  {&__pyx_n_s__LuaSyntaxError, __pyx_k__LuaSyntaxError, sizeof(__pyx_k__LuaSyntaxError), 0, 0, 1, 1},
  {&__pyx_n_s__PyErr_NoMemory, __pyx_k__PyErr_NoMemory, sizeof(__pyx_k__PyErr_NoMemory), 0, 0, 1, 1},
  {&__pyx_n_b__Py_None, __pyx_k__Py_None, sizeof(__pyx_k__Py_None), 0, 0, 0, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__StopIteration, __pyx_k__StopIteration, sizeof(__pyx_k__StopIteration), 0, 0, 1, 1},
  {&__pyx_n_s__TypeError, __pyx_k__TypeError, sizeof(__pyx_k__TypeError), 0, 0, 1, 1},
  {&__pyx_n_s__UnicodeDecodeError, __pyx_k__UnicodeDecodeError, sizeof(__pyx_k__UnicodeDecodeError), 0, 0, 1, 1},
  {&__pyx_n_b____, __pyx_k____, sizeof(__pyx_k____), 0, 0, 0, 1},
  {&__pyx_n_u____, __pyx_k____, sizeof(__pyx_k____), 0, 1, 0, 1},
  {&__pyx_n_s____builtin__, __pyx_k____builtin__, sizeof(__pyx_k____builtin__), 0, 0, 1, 1},
  {&__pyx_n_s____func__, __pyx_k____func__, sizeof(__pyx_k____func__), 0, 0, 1, 1},
  {&__pyx_n_s____getattr__, __pyx_k____getattr__, sizeof(__pyx_k____getattr__), 0, 0, 1, 1},
  {&__pyx_n_s____getitem__, __pyx_k____getitem__, sizeof(__pyx_k____getitem__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____setattr__, __pyx_k____setattr__, sizeof(__pyx_k____setattr__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___aku, __pyx_k___aku, sizeof(__pyx_k___aku), 0, 0, 1, 1},
  {&__pyx_n_s__as_attrgetter, __pyx_k__as_attrgetter, sizeof(__pyx_k__as_attrgetter), 0, 0, 1, 1},
  {&__pyx_n_s__as_itemgetter, __pyx_k__as_itemgetter, sizeof(__pyx_k__as_itemgetter), 0, 0, 1, 1},
  {&__pyx_n_s__atexit, __pyx_k__atexit, sizeof(__pyx_k__atexit), 0, 0, 1, 1},
  {&__pyx_n_s__blocking, __pyx_k__blocking, sizeof(__pyx_k__blocking), 0, 0, 1, 1},
  {&__pyx_n_b__builtins, __pyx_k__builtins, sizeof(__pyx_k__builtins), 0, 0, 0, 1},
  {&__pyx_n_s__builtins, __pyx_k__builtins, sizeof(__pyx_k__builtins), 0, 0, 1, 1},
  {&__pyx_n_s__coroutine, __pyx_k__coroutine, sizeof(__pyx_k__coroutine), 0, 0, 1, 1},
  {&__pyx_n_s__count, __pyx_k__count, sizeof(__pyx_k__count), 0, 0, 1, 1},
  {&__pyx_n_s__cpython, __pyx_k__cpython, sizeof(__pyx_k__cpython), 0, 0, 1, 1},
  {&__pyx_n_s__createContext, __pyx_k__createContext, sizeof(__pyx_k__createContext), 0, 0, 1, 1},
  {&__pyx_n_s__decode, __pyx_k__decode, sizeof(__pyx_k__decode), 0, 0, 1, 1},
  {&__pyx_n_s__deleteContext, __pyx_k__deleteContext, sizeof(__pyx_k__deleteContext), 0, 0, 1, 1},
  {&__pyx_n_s__devId, __pyx_k__devId, sizeof(__pyx_k__devId), 0, 0, 1, 1},
  {&__pyx_n_s__deviceID, __pyx_k__deviceID, sizeof(__pyx_k__deviceID), 0, 0, 1, 1},
  {&__pyx_n_s__down, __pyx_k__down, sizeof(__pyx_k__down), 0, 0, 1, 1},
  {&__pyx_n_s__enumerate, __pyx_k__enumerate, sizeof(__pyx_k__enumerate), 0, 0, 1, 1},
  {&__pyx_n_b__eval, __pyx_k__eval, sizeof(__pyx_k__eval), 0, 0, 0, 1},
  {&__pyx_n_s__eval, __pyx_k__eval, sizeof(__pyx_k__eval), 0, 0, 1, 1},
  {&__pyx_n_s__exc, __pyx_k__exc, sizeof(__pyx_k__exc), 0, 0, 1, 1},
  {&__pyx_n_s__exc_info, __pyx_k__exc_info, sizeof(__pyx_k__exc_info), 0, 0, 1, 1},
  {&__pyx_n_s__func, __pyx_k__func, sizeof(__pyx_k__func), 0, 0, 1, 1},
  {&__pyx_n_s__getAKU, __pyx_k__getAKU, sizeof(__pyx_k__getAKU), 0, 0, 1, 1},
  {&__pyx_n_s__h, __pyx_k__h, sizeof(__pyx_k__h), 0, 0, 1, 1},
  {&__pyx_n_s__heading, __pyx_k__heading, sizeof(__pyx_k__heading), 0, 0, 1, 1},
  {&__pyx_n_s__height, __pyx_k__height, sizeof(__pyx_k__height), 0, 0, 1, 1},
  {&__pyx_n_s__id, __pyx_k__id, sizeof(__pyx_k__id), 0, 0, 1, 1},
  {&__pyx_n_s__iteritems, __pyx_k__iteritems, sizeof(__pyx_k__iteritems), 0, 0, 1, 1},
  {&__pyx_n_s__keyID, __pyx_k__keyID, sizeof(__pyx_k__keyID), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__next, __pyx_k__next, sizeof(__pyx_k__next), 0, 0, 1, 1},
  {&__pyx_n_b__none, __pyx_k__none, sizeof(__pyx_k__none), 0, 0, 0, 1},
  {&__pyx_n_s__obj, __pyx_k__obj, sizeof(__pyx_k__obj), 0, 0, 1, 1},
  {&__pyx_n_s__object, __pyx_k__object, sizeof(__pyx_k__object), 0, 0, 1, 1},
  {&__pyx_n_s__onOpenWindow, __pyx_k__onOpenWindow, sizeof(__pyx_k__onOpenWindow), 0, 0, 1, 1},
  {&__pyx_n_s__paused, __pyx_k__paused, sizeof(__pyx_k__paused), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__register, __pyx_k__register, sizeof(__pyx_k__register), 0, 0, 1, 1},
  {&__pyx_n_s__sensorID, __pyx_k__sensorID, sizeof(__pyx_k__sensorID), 0, 0, 1, 1},
  {&__pyx_n_s__sensorId, __pyx_k__sensorId, sizeof(__pyx_k__sensorId), 0, 0, 1, 1},
  {&__pyx_n_s__sys, __pyx_k__sys, sizeof(__pyx_k__sys), 0, 0, 1, 1},
  {&__pyx_n_s__t, __pyx_k__t, sizeof(__pyx_k__t), 0, 0, 1, 1},
  {&__pyx_n_s__tb, __pyx_k__tb, sizeof(__pyx_k__tb), 0, 0, 1, 1},
  {&__pyx_n_s__title, __pyx_k__title, sizeof(__pyx_k__title), 0, 0, 1, 1},
  {&__pyx_n_s__touchID, __pyx_k__touchID, sizeof(__pyx_k__touchID), 0, 0, 1, 1},
  {&__pyx_n_s__v, __pyx_k__v, sizeof(__pyx_k__v), 0, 0, 1, 1},
  {&__pyx_n_s__value, __pyx_k__value, sizeof(__pyx_k__value), 0, 0, 1, 1},
  {&__pyx_n_s__w, __pyx_k__w, sizeof(__pyx_k__w), 0, 0, 1, 1},
  {&__pyx_n_s__what, __pyx_k__what, sizeof(__pyx_k__what), 0, 0, 1, 1},
  {&__pyx_n_s__width, __pyx_k__width, sizeof(__pyx_k__width), 0, 0, 1, 1},
  {&__pyx_n_s__wrap, __pyx_k__wrap, sizeof(__pyx_k__wrap), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ImportError = __Pyx_GetName(__pyx_b, __pyx_n_s__ImportError); if (!__pyx_builtin_ImportError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetName(__pyx_b, __pyx_n_s__TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_enumerate = __Pyx_GetName(__pyx_b, __pyx_n_s__enumerate); if (!__pyx_builtin_enumerate) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_eval = __Pyx_GetName(__pyx_b, __pyx_n_s__eval); if (!__pyx_builtin_eval) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_UnicodeDecodeError = __Pyx_GetName(__pyx_b, __pyx_n_s__UnicodeDecodeError); if (!__pyx_builtin_UnicodeDecodeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_object = __Pyx_GetName(__pyx_b, __pyx_n_s__object); if (!__pyx_builtin_object) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_StopIteration = __Pyx_GetName(__pyx_b, __pyx_n_s__StopIteration); if (!__pyx_builtin_StopIteration) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":39
 *     def release(self):
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")             # <<<<<<<<<<<<<<
 *         unlock_lock(self)
 * 
 */
  __pyx_k_tuple_2 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_1)); if (unlikely(!__pyx_k_tuple_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_2);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_2));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/lock.pxi":51
 *         # self.release()
 *         if self._owner != pythread.PyThread_get_thread_ident():
 *             raise RuntimeError("cannot release un-acquired lock")             # <<<<<<<<<<<<<<
 *         unlock_lock(self)
 * 
 */
  __pyx_k_tuple_3 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_1)); if (unlikely(!__pyx_k_tuple_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_3);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_3));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":144
 *     cdef init(self, lua_State* L):
 *         if L is NULL:
 *             raise LuaError("Failed to initialise Lua runtime")             # <<<<<<<<<<<<<<
 *         self._state = L
 *         self._lock = FastRLock()
 */
  __pyx_k_tuple_5 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_4)); if (unlikely(!__pyx_k_tuple_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_5);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_5));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":203
 *         cdef lua_State *L = self._state
 *         if not isinstance(modulename, (bytes, unicode)):
 *             raise TypeError("modulename must be a string")             # <<<<<<<<<<<<<<
 *         lock_runtime(self)
 *         try:
 */
  __pyx_k_tuple_9 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_8)); if (unlikely(!__pyx_k_tuple_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_9);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_9));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":210
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("require is not defined")             # <<<<<<<<<<<<<<
 *             return call_lua(self, L, (modulename,))
 *         finally:
 */
  __pyx_k_tuple_11 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_10)); if (unlikely(!__pyx_k_tuple_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_11);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_11));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":227
 *             if lua.lua_isnil(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise LuaError("globals not defined")             # <<<<<<<<<<<<<<
 *             try:
 *                 return py_from_lua(self, L, -1)
 */
  __pyx_k_tuple_13 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_12)); if (unlikely(!__pyx_k_tuple_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_13);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_13));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":294
 * cdef inline int lock_runtime(LuaRuntime runtime) except -1:
 *     if not lock_lock(runtime._lock, pythread.PyThread_get_thread_ident(), True):
 *         raise LuaError("Failed to acquire thread lock")             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  __pyx_k_tuple_16 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_15)); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_16);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":312
 * 
 *     def __init__(self):
 *         raise TypeError("Type cannot be instantiated manually")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_k_tuple_18 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_17)); if (unlikely(!__pyx_k_tuple_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_18);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_18));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":343
 *         if lua.lua_isnil(L, -1):
 *             lua.lua_pop(L, 1)
 *             raise LuaError("lost reference")             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, *args):
 */
  __pyx_k_tuple_20 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_19)); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_20);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":373
 * 
 *     def __iter__(self):
 *         raise TypeError("iteration is only supported for tables")             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_k_tuple_22 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_21)); if (unlikely(!__pyx_k_tuple_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_22);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_22));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":431
 *             if lua.lua_isfunction(L, -1):
 *                 lua.lua_pop(L, 1)
 *                 raise TypeError("item/attribute access not supported on functions")             # <<<<<<<<<<<<<<
 *             py_to_lua(self._runtime, L, name, 1)
 *             lua.lua_gettable(L, -2)
 */
  __pyx_k_tuple_24 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_23)); if (unlikely(!__pyx_k_tuple_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_24);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_24));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":453
 *             if not lua.lua_istable(L, -1):
 *                 lua.lua_pop(L, -1)
 *                 raise TypeError("Lua object is not a table")             # <<<<<<<<<<<<<<
 *             try:
 *                 py_to_lua(self._runtime, L, name, 1)
 */
  __pyx_k_tuple_26 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_25)); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_26);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":582
 *             self.push_lua_object()
 *             if not lua.lua_isfunction(L, -1) or lua.lua_iscfunction(L, -1):
 *                 raise TypeError("Lua object is not a function")             # <<<<<<<<<<<<<<
 *             # create thread stack and push the function on it
 *             co = lua.lua_newthread(L)
 */
  __pyx_k_tuple_30 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_29)); if (unlikely(!__pyx_k_tuple_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_30);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_30));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":643
 *         if value is not None:
 *             if self._arguments is not None:
 *                 raise TypeError("can't send non-None value to a just-started generator")             # <<<<<<<<<<<<<<
 *             if not isinstance(value, tuple):
 *                 value = (value,)
 */
  __pyx_k_tuple_32 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_31)); if (unlikely(!__pyx_k_tuple_32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_32);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_32));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":781
 *                 if lua.lua_isnil(L, -1):
 *                     lua.lua_pop(L, 1)
 *                     raise LuaError("lost reference")             # <<<<<<<<<<<<<<
 *                 raise TypeError(cpython.bytes.PyBytes_FromFormat(
 *                     "cannot iterate over non-table (found Lua %s)",
 */
  __pyx_k_tuple_34 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_19)); if (unlikely(!__pyx_k_tuple_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_34);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_34));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":845
 *         self._type_flags = 0
 *     def __init__(self):
 *         raise TypeError("Type cannot be instantiated from Python")             # <<<<<<<<<<<<<<
 * 
 * def as_attrgetter(obj):
 */
  __pyx_k_tuple_37 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_36)); if (unlikely(!__pyx_k_tuple_37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_37);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_37));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":904
 *         return new_lua_function(runtime, L, n)
 *     else:
 *         raise LuaError("unkown lua value type")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_k_tuple_39 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_38)); if (unlikely(!__pyx_k_tuple_39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_39);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_39));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":943
 *     elif isinstance(o, _LuaObject):
 *         if (<_LuaObject>o)._runtime is not runtime:
 *             raise LuaError("cannot mix objects from different Lua runtimes")             # <<<<<<<<<<<<<<
 *         lua.lua_rawgeti(L, lua.LUA_REGISTRYINDEX, (<_LuaObject>o)._ref)
 *         pushed_values_count = 1
 */
  __pyx_k_tuple_41 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_40)); if (unlikely(!__pyx_k_tuple_41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_41);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_41));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1107
 * 
 *     if not py_obj:
 *         raise TypeError("not a python object")             # <<<<<<<<<<<<<<
 * 
 *     cdef tuple args = cpython.tuple.PyTuple_New(nargs)
 */
  __pyx_k_tuple_46 = PyTuple_Pack(1, ((PyObject *)__pyx_kp_s_45)); if (unlikely(!__pyx_k_tuple_46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_46);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_46));

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":847
 *         raise TypeError("Type cannot be instantiated from Python")
 * 
 * def as_attrgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */
  __pyx_k_tuple_59 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__obj), ((PyObject *)__pyx_n_s__wrap)); if (unlikely(!__pyx_k_tuple_59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_59);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_59));
  __pyx_k_codeobj_60 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_61, __pyx_n_s__as_attrgetter, 847, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":853
 *     return wrap
 * 
 * def as_itemgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */
  __pyx_k_tuple_62 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__obj), ((PyObject *)__pyx_n_s__wrap)); if (unlikely(!__pyx_k_tuple_62)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_62);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_62));
  __pyx_k_codeobj_63 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_61, __pyx_n_s__as_itemgetter, 853, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "AKU.pyx":9
 * _aku=None
 * 
 * def _removeMoaiSingleton():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */
  __pyx_k_codeobj_64 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_66, __pyx_n_s_65, 9, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_64)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "AKU.pyx":14
 * 		del _aku
 * 
 * def getAKU():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */
  __pyx_k_codeobj_67 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_66, __pyx_n_s__getAKU, 14, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_67)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initAKU(void); /*proto*/
PyMODINIT_FUNC initAKU(void)
#else
PyMODINIT_FUNC PyInit_AKU(void); /*proto*/
PyMODINIT_FUNC PyInit_AKU(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  luaL_Reg __pyx_t_9;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_AKU(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("AKU"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "AKU")) {
      if (unlikely(PyDict_SetItemString(modules, "AKU", __pyx_m) < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_AKU) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  __pyx_v_3AKU_exc_info = Py_None; Py_INCREF(Py_None);
  __pyx_v_3AKU_builtins = Py_None; Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_3AKU__LuaObject = &__pyx_vtable_3AKU__LuaObject;
  __pyx_vtable_3AKU__LuaObject.push_lua_object = (int (*)(struct __pyx_obj_3AKU__LuaObject *))__pyx_f_3AKU_10_LuaObject_push_lua_object;
  if (PyType_Ready(&__pyx_type_3AKU__LuaObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU__LuaObject.tp_dict, __pyx_vtabptr_3AKU__LuaObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaObject", (PyObject *)&__pyx_type_3AKU__LuaObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaObject = &__pyx_type_3AKU__LuaObject;
  if (PyType_Ready(&__pyx_type_3AKU_FastRLock) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FastRLock", (PyObject *)&__pyx_type_3AKU_FastRLock) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU_FastRLock = &__pyx_type_3AKU_FastRLock;
  __pyx_vtabptr_3AKU_LuaRuntime = &__pyx_vtable_3AKU_LuaRuntime;
  __pyx_vtable_3AKU_LuaRuntime.init = (PyObject *(*)(struct __pyx_obj_3AKU_LuaRuntime *, lua_State *))__pyx_f_3AKU_10LuaRuntime_init;
  __pyx_vtable_3AKU_LuaRuntime.destroy = (PyObject *(*)(struct __pyx_obj_3AKU_LuaRuntime *))__pyx_f_3AKU_10LuaRuntime_destroy;
  __pyx_vtable_3AKU_LuaRuntime.reraise_on_exception = (int (*)(struct __pyx_obj_3AKU_LuaRuntime *))__pyx_f_3AKU_10LuaRuntime_reraise_on_exception;
  __pyx_vtable_3AKU_LuaRuntime.store_raised_exception = (int (*)(struct __pyx_obj_3AKU_LuaRuntime *))__pyx_f_3AKU_10LuaRuntime_store_raised_exception;
  __pyx_vtable_3AKU_LuaRuntime.register_py_object = (int (*)(struct __pyx_obj_3AKU_LuaRuntime *, PyObject *, PyObject *, PyObject *))__pyx_f_3AKU_10LuaRuntime_register_py_object;
  __pyx_vtable_3AKU_LuaRuntime.init_python_lib = (int (*)(struct __pyx_obj_3AKU_LuaRuntime *, int))__pyx_f_3AKU_10LuaRuntime_init_python_lib;
  if (PyType_Ready(&__pyx_type_3AKU_LuaRuntime) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU_LuaRuntime.tp_dict, __pyx_vtabptr_3AKU_LuaRuntime) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LuaRuntime", (PyObject *)&__pyx_type_3AKU_LuaRuntime) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU_LuaRuntime = &__pyx_type_3AKU_LuaRuntime;
  __pyx_vtabptr_3AKU__LuaTable = &__pyx_vtable_3AKU__LuaTable;
  __pyx_vtable_3AKU__LuaTable.__pyx_base = *__pyx_vtabptr_3AKU__LuaObject;
  __pyx_type_3AKU__LuaTable.tp_base = __pyx_ptype_3AKU__LuaObject;
  if (PyType_Ready(&__pyx_type_3AKU__LuaTable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU__LuaTable.tp_dict, __pyx_vtabptr_3AKU__LuaTable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaTable", (PyObject *)&__pyx_type_3AKU__LuaTable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaTable = &__pyx_type_3AKU__LuaTable;
  __pyx_vtabptr_3AKU__LuaFunction = &__pyx_vtable_3AKU__LuaFunction;
  __pyx_vtable_3AKU__LuaFunction.__pyx_base = *__pyx_vtabptr_3AKU__LuaObject;
  __pyx_type_3AKU__LuaFunction.tp_base = __pyx_ptype_3AKU__LuaObject;
  if (PyType_Ready(&__pyx_type_3AKU__LuaFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU__LuaFunction.tp_dict, __pyx_vtabptr_3AKU__LuaFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaFunction", (PyObject *)&__pyx_type_3AKU__LuaFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaFunction = &__pyx_type_3AKU__LuaFunction;
  __pyx_vtabptr_3AKU__LuaCoroutineFunction = &__pyx_vtable_3AKU__LuaCoroutineFunction;
  __pyx_vtable_3AKU__LuaCoroutineFunction.__pyx_base = *__pyx_vtabptr_3AKU__LuaFunction;
  __pyx_type_3AKU__LuaCoroutineFunction.tp_base = __pyx_ptype_3AKU__LuaFunction;
  if (PyType_Ready(&__pyx_type_3AKU__LuaCoroutineFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU__LuaCoroutineFunction.tp_dict, __pyx_vtabptr_3AKU__LuaCoroutineFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaCoroutineFunction", (PyObject *)&__pyx_type_3AKU__LuaCoroutineFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaCoroutineFunction = &__pyx_type_3AKU__LuaCoroutineFunction;
  __pyx_vtabptr_3AKU__LuaThread = &__pyx_vtable_3AKU__LuaThread;
  __pyx_vtable_3AKU__LuaThread.__pyx_base = *__pyx_vtabptr_3AKU__LuaObject;
  __pyx_type_3AKU__LuaThread.tp_base = __pyx_ptype_3AKU__LuaObject;
  if (PyType_Ready(&__pyx_type_3AKU__LuaThread) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_3AKU__LuaThread.tp_dict, __pyx_vtabptr_3AKU__LuaThread) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaThread", (PyObject *)&__pyx_type_3AKU__LuaThread) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaThread = &__pyx_type_3AKU__LuaThread;
  if (PyType_Ready(&__pyx_type_3AKU__LuaIter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LuaIter", (PyObject *)&__pyx_type_3AKU__LuaIter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__LuaIter = &__pyx_type_3AKU__LuaIter;
  if (PyType_Ready(&__pyx_type_3AKU__PyProtocolWrapper) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_PyProtocolWrapper", (PyObject *)&__pyx_type_3AKU__PyProtocolWrapper) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU__PyProtocolWrapper = &__pyx_type_3AKU__PyProtocolWrapper;
  if (PyType_Ready(&__pyx_type_3AKU_AKU) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "AKU", (PyObject *)&__pyx_type_3AKU_AKU) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3AKU_AKU = &__pyx_type_3AKU_AKU;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "AKU.pyx":3
 * from AKU cimport *
 * 
 * import atexit             # <<<<<<<<<<<<<<
 * 
 * include '_lupa.pyx'
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__atexit), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__atexit, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":23
 * 
 * cdef object exc_info
 * from sys import exc_info             # <<<<<<<<<<<<<<
 * 
 * # __all__ = ['LuaRuntime', 'LuaError', 'as_itemgetter', 'as_attrgetter']
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__exc_info));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__exc_info));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__exc_info));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__sys), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__exc_info);
  if (__pyx_t_1 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__exc_info);
    if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_XGOTREF(__pyx_v_3AKU_exc_info);
  __Pyx_DECREF(__pyx_v_3AKU_exc_info);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_v_3AKU_exc_info = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":28
 * 
 * cdef object builtins
 * try:             # <<<<<<<<<<<<<<
 *     import __builtin__ as builtins
 * except ImportError:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":29
 * cdef object builtins
 * try:
 *     import __builtin__ as builtins             # <<<<<<<<<<<<<<
 * except ImportError:
 *     import builtins
 */
      __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s____builtin__), 0, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L2_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_v_3AKU_builtins);
      __Pyx_DECREF(__pyx_v_3AKU_builtins);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_v_3AKU_builtins = __pyx_t_2;
      __pyx_t_2 = 0;
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L9_try_end;
    __pyx_L2_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":30
 * try:
 *     import __builtin__ as builtins
 * except ImportError:             # <<<<<<<<<<<<<<
 *     import builtins
 * 
 */
    __pyx_t_6 = PyErr_ExceptionMatches(__pyx_builtin_ImportError);
    if (__pyx_t_6) {
      __Pyx_AddTraceback("AKU", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L4_except_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_7);

      /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":31
 *     import __builtin__ as builtins
 * except ImportError:
 *     import builtins             # <<<<<<<<<<<<<<
 * 
 * DEF POBJECT = "POBJECT" # as used by LunaticPython
 */
      __pyx_t_8 = __Pyx_Import(((PyObject *)__pyx_n_s__builtins), 0, -1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L4_except_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_v_3AKU_builtins);
      __Pyx_DECREF(__pyx_v_3AKU_builtins);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_v_3AKU_builtins = __pyx_t_8;
      __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L3_exception_handled;
    }
    __pyx_L4_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L3_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    __pyx_L9_try_end:;
  }

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":51
 * include "lock.pxi"
 * 
 * class LuaError(Exception):             # <<<<<<<<<<<<<<
 *     """Base class for errors in the Lua runtime.
 *     """
 */
  __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_builtin_Exception);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_builtin_Exception);
  __Pyx_GIVEREF(__pyx_builtin_Exception);
  if (PyDict_SetItemString(((PyObject *)__pyx_t_7), "__doc__", ((PyObject *)__pyx_kp_s_57)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_7), __pyx_n_s__LuaError, __pyx_n_s__LuaError, __pyx_n_s__AKU); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__LuaError, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":56
 *     pass
 * 
 * class LuaSyntaxError(LuaError):             # <<<<<<<<<<<<<<
 *     """Syntax error in Lua code.
 *     """
 */
  __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__LuaError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  if (PyDict_SetItemString(((PyObject *)__pyx_t_7), "__doc__", ((PyObject *)__pyx_kp_s_58)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_7), __pyx_n_s__LuaSyntaxError, __pyx_n_s__LuaSyntaxError, __pyx_n_s__AKU); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__LuaSyntaxError, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":847
 *         raise TypeError("Type cannot be instantiated from Python")
 * 
 * def as_attrgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */
  __pyx_t_7 = PyCFunction_NewEx(&__pyx_mdef_3AKU_1as_attrgetter, NULL, __pyx_n_s__AKU); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__as_attrgetter, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":853
 *     return wrap
 * 
 * def as_itemgetter(obj):             # <<<<<<<<<<<<<<
 *     cdef _PyProtocolWrapper wrap = _PyProtocolWrapper.__new__(_PyProtocolWrapper)
 *     wrap._obj = obj
 */
  __pyx_t_7 = PyCFunction_NewEx(&__pyx_mdef_3AKU_3as_itemgetter, NULL, __pyx_n_s__AKU); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__as_itemgetter, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1238
 * 
 * cdef lua.luaL_Reg py_object_lib[6]
 * py_object_lib[0] = lua.luaL_Reg(name = "__call",     func = <lua.lua_CFunction> py_object_call)             # <<<<<<<<<<<<<<
 * py_object_lib[1] = lua.luaL_Reg(name = "__index",    func = <lua.lua_CFunction> py_object_getindex)
 * py_object_lib[2] = lua.luaL_Reg(name = "__newindex", func = <lua.lua_CFunction> py_object_setindex)
 */
  __pyx_t_9.name = __pyx_k____call;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_object_call);
  (__pyx_v_3AKU_py_object_lib[0]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1239
 * cdef lua.luaL_Reg py_object_lib[6]
 * py_object_lib[0] = lua.luaL_Reg(name = "__call",     func = <lua.lua_CFunction> py_object_call)
 * py_object_lib[1] = lua.luaL_Reg(name = "__index",    func = <lua.lua_CFunction> py_object_getindex)             # <<<<<<<<<<<<<<
 * py_object_lib[2] = lua.luaL_Reg(name = "__newindex", func = <lua.lua_CFunction> py_object_setindex)
 * py_object_lib[3] = lua.luaL_Reg(name = "__tostring", func = <lua.lua_CFunction> py_object_str)
 */
  __pyx_t_9.name = __pyx_k____index;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_object_getindex);
  (__pyx_v_3AKU_py_object_lib[1]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1240
 * py_object_lib[0] = lua.luaL_Reg(name = "__call",     func = <lua.lua_CFunction> py_object_call)
 * py_object_lib[1] = lua.luaL_Reg(name = "__index",    func = <lua.lua_CFunction> py_object_getindex)
 * py_object_lib[2] = lua.luaL_Reg(name = "__newindex", func = <lua.lua_CFunction> py_object_setindex)             # <<<<<<<<<<<<<<
 * py_object_lib[3] = lua.luaL_Reg(name = "__tostring", func = <lua.lua_CFunction> py_object_str)
 * py_object_lib[4] = lua.luaL_Reg(name = "__gc",       func = <lua.lua_CFunction> py_object_gc)
 */
  __pyx_t_9.name = __pyx_k____newindex;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_object_setindex);
  (__pyx_v_3AKU_py_object_lib[2]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1241
 * py_object_lib[1] = lua.luaL_Reg(name = "__index",    func = <lua.lua_CFunction> py_object_getindex)
 * py_object_lib[2] = lua.luaL_Reg(name = "__newindex", func = <lua.lua_CFunction> py_object_setindex)
 * py_object_lib[3] = lua.luaL_Reg(name = "__tostring", func = <lua.lua_CFunction> py_object_str)             # <<<<<<<<<<<<<<
 * py_object_lib[4] = lua.luaL_Reg(name = "__gc",       func = <lua.lua_CFunction> py_object_gc)
 * py_object_lib[5] = lua.luaL_Reg(name = NULL, func = NULL)
 */
  __pyx_t_9.name = __pyx_k____tostring;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_object_str);
  (__pyx_v_3AKU_py_object_lib[3]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1242
 * py_object_lib[2] = lua.luaL_Reg(name = "__newindex", func = <lua.lua_CFunction> py_object_setindex)
 * py_object_lib[3] = lua.luaL_Reg(name = "__tostring", func = <lua.lua_CFunction> py_object_str)
 * py_object_lib[4] = lua.luaL_Reg(name = "__gc",       func = <lua.lua_CFunction> py_object_gc)             # <<<<<<<<<<<<<<
 * py_object_lib[5] = lua.luaL_Reg(name = NULL, func = NULL)
 * 
 */
  __pyx_t_9.name = __pyx_k____gc;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_object_gc);
  (__pyx_v_3AKU_py_object_lib[4]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1243
 * py_object_lib[3] = lua.luaL_Reg(name = "__tostring", func = <lua.lua_CFunction> py_object_str)
 * py_object_lib[4] = lua.luaL_Reg(name = "__gc",       func = <lua.lua_CFunction> py_object_gc)
 * py_object_lib[5] = lua.luaL_Reg(name = NULL, func = NULL)             # <<<<<<<<<<<<<<
 * 
 * ## # Python helper functions for Lua
 */
  __pyx_t_9.name = NULL;
  __pyx_t_9.func = NULL;
  (__pyx_v_3AKU_py_object_lib[5]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1401
 * 
 * cdef lua.luaL_Reg py_lib[7]
 * py_lib[0] = lua.luaL_Reg(name = "as_attrgetter", func = <lua.lua_CFunction> py_as_attrgetter)             # <<<<<<<<<<<<<<
 * py_lib[1] = lua.luaL_Reg(name = "as_itemgetter", func = <lua.lua_CFunction> py_as_itemgetter)
 * py_lib[2] = lua.luaL_Reg(name = "as_function", func = <lua.lua_CFunction> py_as_function)
 */
  __pyx_t_9.name = __pyx_k__as_attrgetter;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_as_attrgetter);
  (__pyx_v_3AKU_py_lib[0]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1402
 * cdef lua.luaL_Reg py_lib[7]
 * py_lib[0] = lua.luaL_Reg(name = "as_attrgetter", func = <lua.lua_CFunction> py_as_attrgetter)
 * py_lib[1] = lua.luaL_Reg(name = "as_itemgetter", func = <lua.lua_CFunction> py_as_itemgetter)             # <<<<<<<<<<<<<<
 * py_lib[2] = lua.luaL_Reg(name = "as_function", func = <lua.lua_CFunction> py_as_function)
 * py_lib[3] = lua.luaL_Reg(name = "iter", func = <lua.lua_CFunction> py_iter)
 */
  __pyx_t_9.name = __pyx_k__as_itemgetter;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_as_itemgetter);
  (__pyx_v_3AKU_py_lib[1]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1403
 * py_lib[0] = lua.luaL_Reg(name = "as_attrgetter", func = <lua.lua_CFunction> py_as_attrgetter)
 * py_lib[1] = lua.luaL_Reg(name = "as_itemgetter", func = <lua.lua_CFunction> py_as_itemgetter)
 * py_lib[2] = lua.luaL_Reg(name = "as_function", func = <lua.lua_CFunction> py_as_function)             # <<<<<<<<<<<<<<
 * py_lib[3] = lua.luaL_Reg(name = "iter", func = <lua.lua_CFunction> py_iter)
 * py_lib[4] = lua.luaL_Reg(name = "iterex", func = <lua.lua_CFunction> py_iterex)
 */
  __pyx_t_9.name = __pyx_k__as_function;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_as_function);
  (__pyx_v_3AKU_py_lib[2]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1404
 * py_lib[1] = lua.luaL_Reg(name = "as_itemgetter", func = <lua.lua_CFunction> py_as_itemgetter)
 * py_lib[2] = lua.luaL_Reg(name = "as_function", func = <lua.lua_CFunction> py_as_function)
 * py_lib[3] = lua.luaL_Reg(name = "iter", func = <lua.lua_CFunction> py_iter)             # <<<<<<<<<<<<<<
 * py_lib[4] = lua.luaL_Reg(name = "iterex", func = <lua.lua_CFunction> py_iterex)
 * py_lib[5] = lua.luaL_Reg(name = "enumerate", func = <lua.lua_CFunction> py_enumerate)
 */
  __pyx_t_9.name = __pyx_k__iter;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_iter);
  (__pyx_v_3AKU_py_lib[3]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1405
 * py_lib[2] = lua.luaL_Reg(name = "as_function", func = <lua.lua_CFunction> py_as_function)
 * py_lib[3] = lua.luaL_Reg(name = "iter", func = <lua.lua_CFunction> py_iter)
 * py_lib[4] = lua.luaL_Reg(name = "iterex", func = <lua.lua_CFunction> py_iterex)             # <<<<<<<<<<<<<<
 * py_lib[5] = lua.luaL_Reg(name = "enumerate", func = <lua.lua_CFunction> py_enumerate)
 * py_lib[6] = lua.luaL_Reg(name = NULL, func = NULL)
 */
  __pyx_t_9.name = __pyx_k__iterex;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_iterex);
  (__pyx_v_3AKU_py_lib[4]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1406
 * py_lib[3] = lua.luaL_Reg(name = "iter", func = <lua.lua_CFunction> py_iter)
 * py_lib[4] = lua.luaL_Reg(name = "iterex", func = <lua.lua_CFunction> py_iterex)
 * py_lib[5] = lua.luaL_Reg(name = "enumerate", func = <lua.lua_CFunction> py_enumerate)             # <<<<<<<<<<<<<<
 * py_lib[6] = lua.luaL_Reg(name = NULL, func = NULL)
 */
  __pyx_t_9.name = __pyx_k__enumerate;
  __pyx_t_9.func = ((lua_CFunction)__pyx_f_3AKU_py_enumerate);
  (__pyx_v_3AKU_py_lib[5]) = __pyx_t_9;

  /* "/Users/tommo/prj/moai/MDD/host/moei/aku-build/_lupa.pyx":1407
 * py_lib[4] = lua.luaL_Reg(name = "iterex", func = <lua.lua_CFunction> py_iterex)
 * py_lib[5] = lua.luaL_Reg(name = "enumerate", func = <lua.lua_CFunction> py_enumerate)
 * py_lib[6] = lua.luaL_Reg(name = NULL, func = NULL)             # <<<<<<<<<<<<<<
 */
  __pyx_t_9.name = NULL;
  __pyx_t_9.func = NULL;
  (__pyx_v_3AKU_py_lib[6]) = __pyx_t_9;

  /* "AKU.pyx":7
 * include '_lupa.pyx'
 * 
 * _aku=None             # <<<<<<<<<<<<<<
 * 
 * def _removeMoaiSingleton():
 */
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s___aku, Py_None) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "AKU.pyx":9
 * _aku=None
 * 
 * def _removeMoaiSingleton():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */
  __pyx_t_7 = PyCFunction_NewEx(&__pyx_mdef_3AKU_5_removeMoaiSingleton, NULL, __pyx_n_s__AKU); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_65, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "AKU.pyx":14
 * 		del _aku
 * 
 * def getAKU():             # <<<<<<<<<<<<<<
 * 	global _aku
 * 	if _aku:
 */
  __pyx_t_7 = PyCFunction_NewEx(&__pyx_mdef_3AKU_7getAKU, NULL, __pyx_n_s__AKU); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__getAKU, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "AKU.pyx":20
 * 	return AKU()
 * 
 * atexit.register(_removeMoaiSingleton)             # <<<<<<<<<<<<<<
 * 
 * cdef void _callbackOpenWindow( const_char_ptr title, int width, int height ):
 */
  __pyx_t_7 = __Pyx_GetName(__pyx_m, __pyx_n_s__atexit); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_7, __pyx_n_s__register); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetName(__pyx_m, __pyx_n_s_65); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_t_7 = 0;
  __pyx_t_7 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "AKU.pyx":191
 * 		AKUFmodDesignerUpdate( AKUGetSimStep() )
 * 
 * 	def pause(self, paused=True):             # <<<<<<<<<<<<<<
 * 		AKUPause(paused)
 * 
 */
  __pyx_t_7 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_k_56 = __pyx_t_7;
  __Pyx_GIVEREF(__pyx_t_7);
  __pyx_t_7 = 0;

  /* "AKU.pyx":1
 * from AKU cimport *             # <<<<<<<<<<<<<<
 * 
 * import atexit
 */
  __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_7)) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  if (__pyx_m) {
    __Pyx_AddTraceback("init AKU", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init AKU");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result) {
        if (dict != __pyx_b) {
            PyErr_Clear();
            result = PyObject_GetAttr(__pyx_b, name);
        }
        if (!result) {
            PyErr_SetObject(PyExc_NameError, name);
        }
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CPYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *args;
        if (!value)
            args = PyTuple_New(0);
        else if (PyTuple_Check(value)) {
            Py_INCREF(value);
            args = value;
        }
        else
            args = PyTuple_Pack(1, value);
        if (!args)
            goto bad;
        owned_instance = PyEval_CallObject(type, args);
        Py_DECREF(args);
        if (!owned_instance)
            goto bad;
        value = owned_instance;
        if (!PyExceptionInstance_Check(value)) {
            PyErr_Format(PyExc_TypeError,
                         "calling %R should have returned an instance of "
                         "BaseException, not %R",
                         type, Py_TYPE(value));
            goto bad;
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause && cause != Py_None) {
        PyObject *fixed_cause;
        if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        }
        else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        }
        else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                             int is_tuple, int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    if (!is_tuple && unlikely(!PyTuple_Check(tuple))) {
        iternextfunc iternext;
        iter = PyObject_GetIter(tuple);
        if (unlikely(!iter)) goto bad;
        if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
        iternext = Py_TYPE(iter)->tp_iternext;
        value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
        value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
        if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
        Py_DECREF(iter);
    } else {
        if (!has_known_size && unlikely(PyTuple_GET_SIZE(tuple) != 2)) {
            __Pyx_UnpackTupleError(tuple, 2);
            goto bad;
        }
#if CYTHON_COMPILING_IN_PYPY
        value1 = PySequence_ITEM(tuple, 0);
        if (unlikely(!value1)) goto bad;
        value2 = PySequence_ITEM(tuple, 1);
        if (unlikely(!value2)) goto bad;
#else
        value1 = PyTuple_GET_ITEM(tuple, 0);
        value2 = PyTuple_GET_ITEM(tuple, 1);
        Py_INCREF(value1);
        Py_INCREF(value2);
#endif
        if (decref_tuple) { Py_DECREF(tuple); }
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
#if !CYTHON_COMPILING_IN_PYPY
    if (is_dict) {
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
    }
#endif
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = PyObject_CallMethodObjArgs(iterable, method_name, NULL);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* iter_obj, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
        goto bad;
    #endif
    Py_INCREF(local_type);
    Py_INCREF(local_value);
    Py_INCREF(local_tb);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    /* Make sure tstate is in a consistent state when we XDECREF
       these objects (DECREF may run arbitrary code). */
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

static CYTHON_INLINE PyObject* __Pyx_decode_bytes(
         PyObject* string, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    char* cstring;
    Py_ssize_t length = PyBytes_GET_SIZE(string);
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    length = stop - start;
    if (unlikely(length <= 0))
        return PyUnicode_FromUnicode(NULL, 0);
    cstring = PyBytes_AS_STRING(string) + start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        length = strlen(cstring);
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    length = stop - start;
    if (unlikely(length <= 0))
        return PyUnicode_FromUnicode(NULL, 0);
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

static CYTHON_INLINE PyObject *__Pyx_PyIter_Next2(PyObject* iterator, PyObject* defval) {
    PyObject* next;
    iternextfunc iternext = Py_TYPE(iterator)->tp_iternext;
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(!iternext)) {
#else
    if (unlikely(!iternext) || unlikely(!PyIter_Check(iterator))) {
#endif
        PyErr_Format(PyExc_TypeError,
            "%.200s object is not an iterator", Py_TYPE(iterator)->tp_name);
        return NULL;
    }
    next = iternext(iterator);
    if (likely(next))
        return next;
#if CYTHON_COMPILING_IN_CPYTHON
#if PY_VERSION_HEX >= 0x03010000 || (PY_MAJOR_VERSION < 3 && PY_VERSION_HEX >= 0x02070000)
    if (unlikely(iternext == &_PyObject_NextNotImplemented))
        return NULL;
#endif
#endif
    if (defval) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
            if (unlikely(exc_type != PyExc_StopIteration) &&
                    !PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))
                return NULL;
            PyErr_Clear();
        }
        Py_INCREF(defval);
        return defval;
    }
    if (!PyErr_Occurred())
        PyErr_SetNone(PyExc_StopIteration);
    return NULL;
}

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import = 0;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name) {
#if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_ImportError, "cannot import name %.230s",
                 PyString_AsString(name));
#else
    PyErr_Format(PyExc_ImportError, "cannot import name %S", name);
#endif
}

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases) {
    PyObject *metaclass;
#if PY_MAJOR_VERSION < 3
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = PyObject_GetAttrString(base, (char *)"__class__");
        if (!metaclass) {
            PyErr_Clear();
            metaclass = (PyObject*) Py_TYPE(base);
        }
    } else {
        metaclass = (PyObject *) &PyClass_Type;
    }
#else
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = (PyObject*) Py_TYPE(base);
    } else {
        metaclass = (PyObject *) &PyType_Type;
    }
#endif
    Py_INCREF(metaclass);
    return metaclass;
}

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *qualname, PyObject *modname) {
    PyObject *result;
    PyObject *metaclass;
    if (PyDict_SetItemString(dict, "__module__", modname) < 0)
        return NULL;
    if (PyDict_SetItemString(dict, "__qualname__", qualname) < 0)
        return NULL;
    metaclass = PyDict_GetItemString(dict, "__metaclass__");
    if (metaclass) {
        Py_INCREF(metaclass);
    } else {
        metaclass = __Pyx_FindPy2Metaclass(bases);
    }
    result = PyObject_CallFunctionObjArgs(metaclass, name, bases, dict, NULL);
    Py_DECREF(metaclass);
    return result;
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
